!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$PERL6_EXCEPTIONS_HANDLER	vim/pack/plugins/start/ale/ale_linters/perl6/perl6.vim	/^let $PERL6_EXCEPTIONS_HANDLER = 'JSON'$/;"	v
$RAKUDO_ERROR_COLOR	vim/pack/plugins/start/ale/ale_linters/perl6/perl6.vim	/^let $RAKUDO_ERROR_COLOR = 0$/;"	v
<C-q>	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <C-q> <NOP>$/;"	m
<C-v>	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <C-v> <NOP>$/;"	m
<CR>	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <CR> :call ale#preview#OpenSelection()<CR>$/;"	m
<Plug>(ale_code_action)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_code_action) :ALECodeAction<Return>$/;"	m
<Plug>(ale_complete)	vim/pack/plugins/start/ale/plugin/ale.vim	/^inoremap <silent> <Plug>(ale_complete) <C-\\><C-O>:ALEComplete<Return>$/;"	m
<Plug>(ale_detail)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_detail) :ALEDetail<Return>$/;"	m
<Plug>(ale_disable)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable) :ALEDisable<Return>$/;"	m
<Plug>(ale_disable_buffer)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable_buffer) :ALEDisableBuffer<Return>$/;"	m
<Plug>(ale_documentation)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_documentation) :ALEDocumentation<Return>$/;"	m
<Plug>(ale_enable)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable) :ALEEnable<Return>$/;"	m
<Plug>(ale_enable_buffer)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable_buffer) :ALEEnableBuffer<Return>$/;"	m
<Plug>(ale_find_references)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_find_references) :ALEFindReferences<Return>$/;"	m
<Plug>(ale_first)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_first) :ALEFirst<Return>$/;"	m
<Plug>(ale_fix)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_fix) :ALEFix<Return>$/;"	m
<Plug>(ale_go_to_definition)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition) :ALEGoToDefinition<Return>$/;"	m
<Plug>(ale_go_to_definition_in_split)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_split) :ALEGoToDefinition -split<Return>$/;"	m
<Plug>(ale_go_to_definition_in_tab)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_tab) :ALEGoToDefinition -tab<Return>$/;"	m
<Plug>(ale_go_to_definition_in_vsplit)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_vsplit) :ALEGoToDefinition -vsplit<Return>$/;"	m
<Plug>(ale_go_to_type_definition)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition) :ALEGoToTypeDefinition<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_split)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_split) :ALEGoToTypeDefinition -split<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_tab)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_tab) :ALEGoToTypeDefinition -tab<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_vsplit)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_vsplit) :ALEGoToTypeDefinitionIn -vsplit<Return>$/;"	m
<Plug>(ale_hover)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_hover) :ALEHover<Return>$/;"	m
<Plug>(ale_import)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_import) :ALEImport<Return>$/;"	m
<Plug>(ale_last)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_last) :ALELast<Return>$/;"	m
<Plug>(ale_lint)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_lint) :ALELint<Return>$/;"	m
<Plug>(ale_next)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next) :ALENext<Return>$/;"	m
<Plug>(ale_next_error)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_error) :ALENext -error<Return>$/;"	m
<Plug>(ale_next_warning)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_warning) :ALENext -warning<Return>$/;"	m
<Plug>(ale_next_wrap)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap) :ALENextWrap<Return>$/;"	m
<Plug>(ale_next_wrap_error)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_error) :ALENext -wrap -error<Return>$/;"	m
<Plug>(ale_next_wrap_warning)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_warning) :ALENext -wrap -warning<Return>$/;"	m
<Plug>(ale_previous)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous) :ALEPrevious<Return>$/;"	m
<Plug>(ale_previous_error)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_error) :ALEPrevious -error<Return>$/;"	m
<Plug>(ale_previous_warning)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_warning) :ALEPrevious -warning<Return>$/;"	m
<Plug>(ale_previous_wrap)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap) :ALEPreviousWrap<Return>$/;"	m
<Plug>(ale_previous_wrap_error)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_error) :ALEPrevious -wrap -error<Return>$/;"	m
<Plug>(ale_previous_wrap_warning)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_warning) :ALEPrevious -wrap -warning<Return>$/;"	m
<Plug>(ale_rename)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_rename) :ALERename<Return>$/;"	m
<Plug>(ale_repeat_selection)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_repeat_selection) :ALERepeatSelection<Return>$/;"	m
<Plug>(ale_reset)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset) :ALEReset<Return>$/;"	m
<Plug>(ale_reset_buffer)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset_buffer) :ALEResetBuffer<Return>$/;"	m
<Plug>(ale_show_completion_menu)	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^cnoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_show_completion_menu)	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^inoremap <silent> <Plug>(ale_show_completion_menu) <C-x><C-o><C-p>$/;"	m
<Plug>(ale_show_completion_menu)	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^nnoremap <silent> <Plug>(ale_show_completion_menu) :call ale#completion#RestoreCompletionOptions()<CR>$/;"	m
<Plug>(ale_show_completion_menu)	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^onoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_show_completion_menu)	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^vnoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_toggle)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle) :ALEToggle<Return>$/;"	m
<Plug>(ale_toggle_buffer)	vim/pack/plugins/start/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle_buffer) :ALEToggleBuffer<Return>$/;"	m
<S-v>	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <S-v> <NOP>$/;"	m
A	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> A <NOP>$/;"	m
ALEBufferFixGroup	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^augroup ALEBufferFixGroup$/;"	a
ALECleanupGroup	vim/pack/plugins/start/ale/plugin/ale.vim	/^augroup ALECleanupGroup$/;"	a
ALECodeAction	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar -range ALECodeAction :call ale#codefix#Execute(<range>)$/;"	c
ALEComplete	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEComplete :call ale#completion#GetCompletions('ale-manual')$/;"	c
ALECompletionActions	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^augroup ALECompletionActions$/;"	a
ALEDetail	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEDetail :call ale#cursor#ShowCursorDetail()$/;"	c
ALEDisable	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEDisable :call ale#toggle#Disable()$/;"	c
ALEDisableBuffer	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEDisableBuffer :call ale#toggle#DisableBuffer(bufnr(''))$/;"	c
ALEDocumentation	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEDocumentation :call ale#hover#ShowDocumentationAtCursor()$/;"	c
ALEEnable	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEEnable :call ale#toggle#Enable()$/;"	c
ALEEnableBuffer	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEEnableBuffer :call ale#toggle#EnableBuffer(bufnr(''))$/;"	c
ALEFindReferences	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEFindReferences :call ale#references#Find(<f-args>)$/;"	c
ALEFirst	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEFirst :call ale#loclist_jumping#JumpToIndex(0)$/;"	c
ALEFix	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar -bang -nargs=* -complete=customlist,ale#fix#registry#CompleteFixers ALEFix :call ale#fix#Fix(bufnr(''), '<bang>', <f-args>)$/;"	c
ALEFixSuggest	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEFixSuggest :call ale#fix#registry#Suggest(&filetype)$/;"	c
ALEGoToDefinition	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEGoToDefinition :call ale#definition#GoToCommandHandler('', <f-args>)$/;"	c
ALEGoToTypeDefinition	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEGoToTypeDefinition :call ale#definition#GoToCommandHandler('type', <f-args>)$/;"	c
ALEHighlightBufferGroup	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^augroup ALEHighlightBufferGroup$/;"	a
ALEHover	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEHover :call ale#hover#ShowAtCursor()$/;"	c
ALEImport	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEImport :call ale#completion#Import()$/;"	c
ALEInfo	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEInfo :call ale#debugging#Info()$/;"	c
ALEInfoToClipboard	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEInfoToClipboard :call ale#debugging#InfoToClipboard()$/;"	c
ALEInfoToFile	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar -nargs=1 ALEInfoToFile :call ale#debugging#InfoToFile(<f-args>)$/;"	c
ALELast	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALELast :call ale#loclist_jumping#JumpToIndex(-1)$/;"	c
ALELint	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALELint :call ale#Queue(0, 'lint_file')$/;"	c
ALELintStop	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALELintStop :call ale#engine#Stop(bufnr(''))$/;"	c
ALENext	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar -nargs=* ALENext$/;"	c
ALENextWrap	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALENextWrap :call ale#loclist_jumping#Jump('after', 1)$/;"	c
ALEOrganizeImports	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEOrganizeImports :call ale#organize_imports#Execute()$/;"	c
ALEPrevious	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEPrevious$/;"	c
ALEPreviousWrap	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEPreviousWrap :call ale#loclist_jumping#Jump('before', 1)$/;"	c
ALERename	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar -bang ALERename :call ale#rename#Execute()$/;"	c
ALERepeatSelection	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALERepeatSelection :call ale#preview#RepeatSelection()$/;"	c
ALEReset	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEReset :call ale#toggle#Reset()$/;"	c
ALEResetBuffer	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEResetBuffer :call ale#toggle#ResetBuffer(bufnr(''))$/;"	c
ALEStopAllLSPs	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEStopAllLSPs :call ale#lsp#reset#StopAllLSPs()$/;"	c
ALESymbolSearch	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -nargs=1 ALESymbolSearch :call ale#symbol#Search(<q-args>)$/;"	c
ALEToggle	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEToggle :call ale#toggle#Toggle()$/;"	c
ALEToggleBuffer	vim/pack/plugins/start/ale/plugin/ale.vim	/^command! -bar ALEToggleBuffer :call ale#toggle#ToggleBuffer(bufnr(''))$/;"	c
AbbreviateMessage	vim/pack/plugins/start/ale/ale_linters/erlang/elvis.vim	/^function! s:AbbreviateMessage(text) abort$/;"	f
AcceptSelection	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:AcceptSelection(action)$/;"	f
AddHintsForTypeScriptParsingErrors	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! s:AddHintsForTypeScriptParsingErrors(output) abort$/;"	f
AddProblemsFromOtherBuffers	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! s:AddProblemsFromOtherBuffers(buffer, linters) abort$/;"	f
AddSubCallbacks	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^function! s:AddSubCallbacks(full_list, callbacks) abort$/;"	f
ApplyPartialTimer	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! s:ApplyPartialTimer(timer_id) abort$/;"	f
BUILD_INVERTED_INDEX	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set BUILD_INVERTED_INDEX=1$/;"	v
BUILD_INVERTED_INDEX	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set BUILD_INVERTED_INDEX=0$/;"	v
Balanced	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:Balanced(lnum)$/;"	f
Base	vim/pack/plugins/start/ale/rplugin/python3/deoplete/sources/ale.py	/^    class Base(object):$/;"	c
Base	vim/pack/plugins/start/ale/rplugin/python3/deoplete/sources/ale.py	/^    from deoplete.source.base import Base$/;"	i
Bookmark.AddBookmark	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.CompareBookmarksByName	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
Bookmark.Edit	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Edit()$/;"	f
Bookmark.GetNodeForName	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.SortBookmarksList	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
Bookmark.ToRoot	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.delete	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BufferCacheExists	vim/pack/plugins/start/ale/autoload/ale/statusline.vim	/^function! s:BufferCacheExists(buffer) abort$/;"	f
BuildClassPathOption	vim/pack/plugins/start/ale/ale_linters/java/javac.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
BuildClassPathOption	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
BuildPrompt	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
BuildSignMap	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! s:BuildSignMap(buffer, current_sign_list, grouped_items) abort$/;"	f
BuildText	vim/pack/plugins/start/ale/ale_linters/ruby/reek.vim	/^function! s:BuildText(buffer, error) abort$/;"	f
CSCOPE_ARGS	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -q$/;"	v
CSCOPE_ARGS	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_ARGS	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=%CSCOPE_ARGS% -i %DB_FILE%.files$/;"	v
CSCOPE_EXE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CanParseMakefile	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! s:CanParseMakefile(buffer) abort$/;"	f
ChangeCmp	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! s:ChangeCmp(left, right) abort$/;"	f
CheckForBadConfig	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! s:CheckForBadConfig(buffer, lines) abort$/;"	f
CheckWithLSP	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! s:CheckWithLSP(linter, details) abort$/;"	f
CleanUp	vim/pack/plugins/start/vim-gutentags/plat/unix/update_scopedb.sh	/^CleanUp() {$/;"	f
ClearAllCtrlPCaches	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearCtrlPCache	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
Close	vim/pack/plugins/start/ale/autoload/ale/floating_preview.vim	/^function! s:Close() abort$/;"	f
Close	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f
CloseWindowIfNeeded	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^function! s:CloseWindowIfNeeded(buffer) abort$/;"	f
CmpPatterns	vim/pack/plugins/start/ale/autoload/ale/pattern_options.vim	/^function! s:CmpPatterns(left_item, right_item) abort$/;"	f
CompilerSet	vim/pack/plugins/start/typescript-vim/compiler/typescript.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
CompletionStillValid	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! s:CompletionStillValid(request_id) abort$/;"	f
ConvertLanguageName	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! s:ConvertLanguageName(language) abort$/;"	f
Create	vim/pack/plugins/start/ale/autoload/ale/floating_preview.vim	/^function! s:Create(options) abort$/;"	f
CreateCountDict	vim/pack/plugins/start/ale/autoload/ale/statusline.vim	/^function! s:CreateCountDict() abort$/;"	f
CreateNewFile	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
CreateTSServerMessageData	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! s:CreateTSServerMessageData(message) abort$/;"	f
CreateTabTreeVCS	vim/pack/plugins/start/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:CreateTabTreeVCS(name)$/;"	f
Creator.BufNamePrefix	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
CtrlP	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init(1)$/;"	c
CtrlPChange	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init(0, { 'mode': 'c' })$/;"	c
CtrlPCurWD	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init(0, { 'mode': '' })$/;"	c
CtrlPDir	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLine	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPLine$/;"	c
CtrlPMRUFiles	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init(2, { 'dir': <q-args> })$/;"	c
CtrlPMixed	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init(0, { 'mode': 'r' })$/;"	c
CtrlPTag	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
DB_FILE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DefaultOption	vim/pack/plugins/start/ale/autoload/ale/fixers/shfmt.vim	/^function! s:DefaultOption(buffer) abort$/;"	f
DisablePostamble	vim/pack/plugins/start/ale/autoload/ale/toggle.vim	/^function! s:DisablePostamble() abort$/;"	f
DoneParseArgs	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
Echo	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! s:Echo(message) abort$/;"	f
EchoCommand	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! s:EchoCommand(item) abort$/;"	f
EchoCommandHistory	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! s:EchoCommandHistory() abort$/;"	f
EchoExecutable	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! s:EchoExecutable(item) abort$/;"	f
EchoGlobalVariables	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
EchoLSPErrorMessages	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! s:EchoLSPErrorMessages(all_linter_names) abort$/;"	f
EchoLinterAliases	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! s:EchoLinterAliases(all_linters) abort$/;"	f
EchoLinterVariables	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! s:EchoLinterVariables(variable_list) abort$/;"	f
EnablePreamble	vim/pack/plugins/start/ale/autoload/ale/toggle.vim	/^function! s:EnablePreamble() abort$/;"	f
EncodeChar	vim/pack/plugins/start/ale/autoload/ale/uri.vim	/^function! s:EncodeChar(char) abort$/;"	f
EscapeMenuName	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! s:EscapeMenuName(text) abort$/;"	f
EscapeSignText	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! s:EscapeSignText(sign_text) abort$/;"	f
Event.New	vim/pack/plugins/start/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
ExecuteGetCodeFix	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! s:ExecuteGetCodeFix(linter, range, MenuCallback) abort$/;"	f
ExecuteRename	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^function! s:ExecuteRename(linter, options) abort$/;"	f
ExitCallback	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! s:ExitCallback(buffer, line_list, Callback, data) abort$/;"	f
ExtraErrorMsg	vim/pack/plugins/start/ale/ale_linters/javascript/flow.vim	/^function! s:ExtraErrorMsg(current, new) abort$/;"	f
FILESIZE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^for \/F %%F in ("%DB_FILE%.files") do set FILESIZE=%%~zF$/;"	v
FILESIZE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILESIZE=0$/;"	v
FILE_LIST_CMD	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
FilterResult	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! s:FilterResult(buffer, obj) abort$/;"	f
FindConfig	vim/pack/plugins/start/ale/ale_linters/pug/puglint.vim	/^function! s:FindConfig(buffer) abort$/;"	f
FindError	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! s:FindError(buffer, line, column, end_line, end_column) abort$/;"	f
FindHistoryItem	vim/pack/plugins/start/ale/autoload/ale/history.vim	/^function! s:FindHistoryItem(buffer, job_id) abort$/;"	f
FindParentVCSRoot	vim/pack/plugins/start/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:FindParentVCSRoot(path)$/;"	f
FindSpan	vim/pack/plugins/start/ale/autoload/ale/handlers/rust.vim	/^function! s:FindSpan(buffer, span) abort$/;"	f
FixList	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^function! s:FixList(buffer, list) abort$/;"	f
FlagSet.New	vim/pack/plugins/start/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	vim/pack/plugins/start/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	vim/pack/plugins/start/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	vim/pack/plugins/start/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	vim/pack/plugins/start/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	vim/pack/plugins/start/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
ForceUpdate	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
FormatEntry	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^function! s:FormatEntry(key, entry) abort$/;"	f
FormatExe	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! s:FormatExe(command, executable) abort$/;"	f
FormatFilename	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! s:FormatFilename(filename, mappings, modifiers) abort$/;"	f
GatherOutput	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! s:GatherOutput(line_list, job_id, line) abort$/;"	f
GetALEProjectDir	vim/pack/plugins/start/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! s:GetALEProjectDir(buffer) abort$/;"	f
GetAlarm	vim/pack/plugins/start/ale/ale_linters/prolog/swipl.vim	/^function! s:GetAlarm(buffer, timeout) abort$/;"	f
GetAliasedFiletype	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! s:GetAliasedFiletype(original_filetype) abort$/;"	f
GetArguments	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! s:GetArguments(json_item) abort$/;"	f
GetCachedExtensionMap	vim/pack/plugins/start/ale/autoload/ale/filetypes.vim	/^function! s:GetCachedExtensionMap() abort$/;"	f
GetCallbacks	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^function! s:GetCallbacks(buffer, fixing_flag, fixers) abort$/;"	f
GetCodeActions	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! s:GetCodeActions(linter, options) abort$/;"	f
GetCommand	vim/pack/plugins/start/ale/ale_linters/erlang/elvis.vim	/^function! s:GetCommand(buffer) abort$/;"	f
GetConfig	vim/pack/plugins/start/ale/ale_linters/java/checkstyle.vim	/^function! s:GetConfig(buffer, config) abort$/;"	f
GetCounts	vim/pack/plugins/start/ale/autoload/ale/statusline.vim	/^function! s:GetCounts(buffer) abort$/;"	f
GetDUBCommand	vim/pack/plugins/start/ale/ale_linters/d/dmd.vim	/^function! s:GetDUBCommand(buffer) abort$/;"	f
GetDetails	vim/pack/plugins/start/ale/ale_linters/javascript/flow.vim	/^function! s:GetDetails(error) abort$/;"	f
GetDir	vim/pack/plugins/start/ale/ale_linters/python/vulture.vim	/^function! s:GetDir(buffer) abort$/;"	f
GetErrMsg	vim/pack/plugins/start/ale/ale_linters/prolog/swipl.vim	/^function! s:GetErrMsg(i, lines, text) abort$/;"	f
GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/sml.vim	/^function! s:GetExecutable(buffer, source) abort$/;"	f
GetFiletypeValue	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! s:GetFiletypeValue(map, filetype) abort$/;"	f
GetFirstProblems	vim/pack/plugins/start/ale/autoload/ale/statusline.vim	/^function! s:GetFirstProblems(buffer) abort$/;"	f
GetJSONLines	vim/pack/plugins/start/ale/ale_linters/javascript/flow.vim	/^function! s:GetJSONLines(lines) abort$/;"	f
GetKotlinIndent	vim/pack/plugins/start/kotlin-vim/indent/kotlin.vim	/^function! GetKotlinIndent()$/;"	f
GetLintFileSlots	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! s:GetLintFileSlots(buffer, linters) abort$/;"	f
GetLintFileValues	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! s:GetLintFileValues(slots, Callback) abort$/;"	f
GetLinter	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! s:GetLinter() abort$/;"	f
GetLinterNames	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! s:GetLinterNames(original_filetype) abort$/;"	f
GetLinterVariables	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! s:GetLinterVariables(filetype, exclude_linter_names) abort$/;"	f
GetLookupFromCompileCommandsFile	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! s:GetLookupFromCompileCommandsFile(compile_commands_file) abort$/;"	f
GetPair	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,...)$/;"	f
GetPair	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,time,...)$/;"	f
GetTsxIndent	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! GetTsxIndent()$/;"	f
GetTypescriptIndent	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
GetVersion	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^function! s:GetVersion(executable, version_lines) abort$/;"	f
GetVersion	vim/pack/plugins/start/ale/autoload/ale/semver.vim	/^function! s:GetVersion(executable, version_lines) abort$/;"	f
GlobPath	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f
GoToLSPDefinition	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^function! s:GoToLSPDefinition(linter, options, capability) abort$/;"	f
GroupCmd	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! s:GroupCmd() abort$/;"	f
GroupLoclistItems	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! s:GroupLoclistItems(buffer, loclist) abort$/;"	f
GutentagsToggleEnabled	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
HandleESLintOutput	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! s:HandleESLintOutput(buffer, lines, type) abort$/;"	f
HandleExit	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! s:HandleExit(job_info, buffer, output, data) abort$/;"	f
HandleExit	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^function! s:HandleExit(job_info, buffer, job_output, data) abort$/;"	f
HandleLSPDiagnostics	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPDiagnostics(conn_id, response) abort$/;"	f
HandleLSPErrorMessage	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPErrorMessage(linter_name, response) abort$/;"	f
HandleLSPResponseToCustomRequests	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPResponseToCustomRequests(conn_id, response) abort$/;"	f
HandleSyntaxError	vim/pack/plugins/start/ale/autoload/ale/handlers/ruby.vim	/^function! s:HandleSyntaxError(buffer, lines) abort$/;"	f
HandleTSServerDiagnostics	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleTSServerDiagnostics(response, error_type) abort$/;"	f
HandleUnixFormat	vim/pack/plugins/start/ale/autoload/ale/handlers/unix.vim	/^function! s:HandleUnixFormat(buffer, lines, type) abort$/;"	f
HiLink	vim/pack/plugins/start/typescript-vim/syntax/typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vim/pack/plugins/start/typescript-vim/syntax/typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
I	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> I <NOP>$/;"	m
INDEX_WHOLE_PROJECT	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
Ignore	vim/pack/plugins/start/ale/ale_linters/prolog/swipl.vim	/^function! s:Ignore(item) abort$/;"	f
IgnoreFixers	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^function! s:IgnoreFixers(callback_list, filetype, config) abort$/;"	f
IsBlock	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:IsBlock()$/;"	f
IsBoolean	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! s:IsBoolean(value) abort$/;"	f
IsCallback	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! s:IsCallback(value) abort$/;"	f
IsGenericFixer	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^function! s:IsGenericFixer(suggested_filetypes) abort$/;"	f
IsHeaderFile	vim/pack/plugins/start/ale/autoload/ale/handlers/gcc.vim	/^function! s:IsHeaderFile(filename) abort$/;"	f
IsSbt	vim/pack/plugins/start/ale/ale_linters/scala/fsc.vim	/^function! s:IsSbt(buffer) abort$/;"	f
IsSbt	vim/pack/plugins/start/ale/ale_linters/scala/scalac.vim	/^function! s:IsSbt(buffer) abort$/;"	f
KeyLoop	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
KeyMap.Add	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Compare	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
KeyMap.Create	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KillHandler	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! s:KillHandler(timer) abort$/;"	f
LOG_FILE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
Lint	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! s:Lint(buffer, should_lint_file, timer_id) abort$/;"	f
LoadArgCount	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! s:LoadArgCount(function) abort$/;"	f
LoopParseArgs	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
MapNorms	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f
MapSpecs	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
MarkToOpen	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
MatchIt	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
MatchedItems	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
MenuController.New	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.isMinimal	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.isMinimal()$/;"	f
MenuController.showMenu	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
NERDTree	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CursorToBookmarkTable	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin(...)$/;"	f
NERDTree.ExistsForBuf	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTree.setPreviousBuf	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
NERDTreeAddKeyMap	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeChDirOnTabSwitch	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeChDirOnTabSwitch$/;"	a
NERDTreeCopyNode	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyPath	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyPath()$/;"	f
NERDTreeDeleteNode	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	vim/pack/plugins/start/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	vim/pack/plugins/start/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeExecuteFileWindows	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileWindows()$/;"	f
NERDTreeFocus	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeHijackNetrw	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMoveNode	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeSystemCommand	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeSystemCommand()$/;"	f
NERDTreeToggleVCS	vim/pack/plugins/start/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeToggleVCS :call <SID>ToggleTabTreeVCS('<args>')$/;"	c
NERDTreeVCS	vim/pack/plugins/start/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeVCS :call <SID>CreateTabTreeVCS('<args>')$/;"	c
NeoVimCallback	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! s:NeoVimCallback(job, data, event) abort$/;"	f
NeoVimOutputCallback	vim/pack/plugins/start/ale/autoload/ale/socket.vim	/^function! s:NeoVimOutputCallback(channel_id, data, event) abort$/;"	f
Notifier.AddListener	vim/pack/plugins/start/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	vim/pack/plugins/start/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	vim/pack/plugins/start/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	vim/pack/plugins/start/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
O	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> O <NOP>$/;"	m
OnReady	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! s:OnReady($/;"	f
OnReady	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! s:OnReady(linter, lsp_details) abort$/;"	f
OnReady	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^function! s:OnReady(line, column, options, capability, linter, lsp_details) abort$/;"	f
OnReady	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! s:OnReady(line, column, opt, linter, lsp_details) abort$/;"	f
OnReady	vim/pack/plugins/start/ale/autoload/ale/organize_imports.vim	/^function! s:OnReady(linter, lsp_details) abort$/;"	f
OnReady	vim/pack/plugins/start/ale/autoload/ale/references.vim	/^function! s:OnReady(line, column, options, linter, lsp_details) abort$/;"	f
OnReady	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^function! s:OnReady(line, column, options, linter, lsp_details) abort$/;"	f
OnReady	vim/pack/plugins/start/ale/autoload/ale/symbol.vim	/^function! s:OnReady(query, options, linter, lsp_details) abort$/;"	f
OnReadyForCustomRequests	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! s:OnReadyForCustomRequests(args, linter, lsp_details) abort$/;"	f
OneScope	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:OneScope(lnum)$/;"	f
Open	vim/pack/plugins/start/ale/autoload/ale/preview.vim	/^function! s:Open(open_in) abort$/;"	f
Open	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f
OpenCompletionMenu	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! s:OpenCompletionMenu(...) abort$/;"	f
OpenMulti	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
OpenNoMarks	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
Opener.New	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
OrganizeImports	vim/pack/plugins/start/ale/autoload/ale/organize_imports.vim	/^function! s:OrganizeImports(linter) abort$/;"	f
PAUSE_BEFORE_EXIT	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
POST_PROCESS_CMD	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_ROOT	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
ParseArgs	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseInlinedFunctionProblems	vim/pack/plugins/start/ale/autoload/ale/handlers/gcc.vim	/^function! s:ParseInlinedFunctionProblems(buffer, lines) abort$/;"	f
ParseProblemsInHeaders	vim/pack/plugins/start/ale/autoload/ale/handlers/gcc.vim	/^function! s:ParseProblemsInHeaders(buffer, lines) abort$/;"	f
Path.AbsolutePathFor	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
Path.CopyingSupported	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
Path.Resolve	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.WinToUnixPath	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._splitChunks	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
Path._str	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.addDelimiter	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
Path.bookmarkNames	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.copy	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(child)$/;"	f
Path.isHiddenUnder	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
Path.isUnder	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(parent)$/;"	f
Path.isUnixHiddenFile	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PrepareWindowContent	vim/pack/plugins/start/ale/autoload/ale/floating_preview.vim	/^function! s:PrepareWindowContent(lines) abort$/;"	f
PrepareWrappedCommand	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! s:PrepareWrappedCommand(original_wrapper, command) abort$/;"	f
PrevCodeLine	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:PrevCodeLine(lnum)$/;"	f
PriorityCmd	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! s:PriorityCmd() abort$/;"	f
ProcessDeferredCommands	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! s:ProcessDeferredCommands(initial_result) abort$/;"	f
ProcessDeferredCwds	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! s:ProcessDeferredCwds(initial_command, initial_cwd) abort$/;"	f
PrtAdd	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
PrtBS	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f
PrtClear	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f
PrtClearCache	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
PrtCurEnd	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
PrtCurLeft	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
PrtCurRight	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
PrtCurStart	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
PrtDelete	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
PrtDeleteEnt	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
PrtDeleteMRU	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
PrtDeleteWord	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
PrtExit	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f
PrtExpandDir	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
PrtFocusMap	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
PrtHistory	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
PrtInsert	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
PrtSelectJump	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
PrtSelectMove	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
PrtSwitcher	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
RUN_TESTS	vim/pack/plugins/start/ale/run-tests.bat	/^:RUN_TESTS$/;"	l
RemapItemTypes	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! s:RemapItemTypes(type_map, loclist) abort$/;"	f
RemoveModule	vim/pack/plugins/start/ale/autoload/ale/test.vim	/^function! s:RemoveModule(results) abort$/;"	f
RemoveProblemsForDisabledLinters	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! s:RemoveProblemsForDisabledLinters(buffer, linters) abort$/;"	f
RemoveUnicodeQuotes	vim/pack/plugins/start/ale/autoload/ale/handlers/flawfinder.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
RemoveUnicodeQuotes	vim/pack/plugins/start/ale/autoload/ale/handlers/gcc.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
RemoveUnicodeQuotes	vim/pack/plugins/start/ale/autoload/ale/handlers/pony.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
Render	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
ReplaceCompletionOptions	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! s:ReplaceCompletionOptions(source) abort$/;"	f
Reset	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f
RestoreViewIfNeeded	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^function! s:RestoreViewIfNeeded(buffer) abort$/;"	f
RunFixer	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^function! s:RunFixer(options) abort$/;"	f
RunIfExecutable	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! s:RunIfExecutable(buffer, linter, lint_file, executable) abort$/;"	f
RunJob	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! s:RunJob(command, options) abort$/;"	f
RunJob	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^function! s:RunJob(result, options) abort$/;"	f
RunLinter	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! s:RunLinter(buffer, linter, lint_file) abort$/;"	f
RunLinters	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! s:RunLinters($/;"	f
SHOW_RESULTS	vim/pack/plugins/start/ale/run-tests.bat	/^:SHOW_RESULTS$/;"	l
SID	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:SID() abort$/;"	f
SendInitMessage	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! s:SendInitMessage(conn) abort$/;"	f
SendMessageData	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! s:SendMessageData(conn, data) abort$/;"	f
SetDefTxt	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
SetListsImpl	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^function! s:SetListsImpl(timer_id, buffer, loclist) abort$/;"	f
SetWD	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
Setup	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! s:Setup(enabled) abort$/;"	f
Setup	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! s:Setup(enabled) abort$/;"	f
ShouldIgnore	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! s:ShouldIgnore(buffer, linter_name) abort$/;"	f
ShouldOpen	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^function! s:ShouldOpen(buffer) abort$/;"	f
ShouldSuggestForType	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^function! s:ShouldSuggestForType(suggested_filetypes, type_list) abort$/;"	f
ShowCursorDetailForItem	vim/pack/plugins/start/ale/autoload/ale/cursor.vim	/^function! s:ShowCursorDetailForItem(loc, options) abort$/;"	f
ShowUsage	vim/pack/plugins/start/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	vim/pack/plugins/start/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Source	vim/pack/plugins/start/ale/rplugin/python3/deoplete/sources/ale.py	/^class Source(Base):$/;"	c
SpecInputs	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
SplitPattern	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
StartIfExecutable	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! s:StartIfExecutable(options, executable) abort$/;"	f
StartLSP	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! s:StartLSP(options, address, executable, command) abort$/;"	f
StartWithAddress	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! s:StartWithAddress(options, address) abort$/;"	f
StartWithCommand	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! s:StartWithCommand(options, executable, command) abort$/;"	f
StopCurrentJobs	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! s:StopCurrentJobs(buffer, clear_lint_file_jobs, linter_slots) abort$/;"	f
StopCursorTimer	vim/pack/plugins/start/ale/autoload/ale/cursor.vim	/^function! s:StopCursorTimer() abort$/;"	f
StopCursorTimer	vim/pack/plugins/start/ale/autoload/ale/virtualtext.vim	/^function! s:StopCursorTimer() abort$/;"	f
Subst	vim/pack/plugins/start/ale/ale_linters/prolog/swipl.vim	/^function! s:Subst(format, vars) abort$/;"	f
SynAttrJSX	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynAttrJSX(synattr)$/;"	f
SynEOL	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynEOL(lnum)$/;"	f
SynJSXCloseTag	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynJSXCloseTag(syns)$/;"	f
SynJSXContinues	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynJSXContinues(cursyn, prevsyn)$/;"	f
SynJSXDepth	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynJSXDepth(syns)$/;"	f
SynJsxEscapeJs	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynJsxEscapeJs(syns)$/;"	f
SynSOL	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynSOL(lnum)$/;"	f
SynXMLish	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynXMLish(syns)$/;"	f
SyntaxCheckers_kotlin_kotlinc_GetLocList	vim/pack/plugins/start/kotlin-vim/syntax_checkers/kotlin/kotlinc.vim	/^function! SyntaxCheckers_kotlin_kotlinc_GetLocList() dict$/;"	f
TAGS_FILE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TemporaryFilename	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! s:TemporaryFilename(buffer) abort$/;"	f
TemporaryPSScript	vim/pack/plugins/start/ale/autoload/ale/powershell.vim	/^function! s:TemporaryPSScript(buffer, input) abort$/;"	f
TimerHandler	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! s:TimerHandler(...) abort$/;"	f
ToggleByFname	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
ToggleFocus	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
ToggleKeyLoop	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
ToggleMRURelative	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleMRURelative()$/;"	f
ToggleRegex	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
ToggleTabTreeVCS	vim/pack/plugins/start/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:ToggleTabTreeVCS(name)$/;"	f
ToggleType	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
TreeDirNode.AbsoluteTreeRoot	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._glob	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
TreeDirNode._initChildren	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode.activate	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.displayString	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
TreeDirNode.findNode	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getCascade	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
TreeDirNode.getCascadeRoot	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
TreeDirNode.getChild	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getDirChildren	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
TreeDirNode.getVisibleChildCount	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.isCascadable	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
TreeDirNode.open	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
TreeFileNode.activate	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findSibling	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openExplorer	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openExplorer()$/;"	f
TreeFileNode.openInNewTab	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
Trim	vim/pack/plugins/start/ale/ale_linters/prolog/swipl.vim	/^function! s:Trim(str) abort$/;"	f
Trim	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:Trim(ln)$/;"	f
UI.IndentWid	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
UI.centerView	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
UI.getPath	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFiles	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.isMinimal	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
UI.render	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowHidden	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UPDATED_SOURCE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
Unlock	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Update	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f
UpdateCacheIfNecessary	vim/pack/plugins/start/ale/autoload/ale/statusline.vim	/^function! s:UpdateCacheIfNecessary(buffer) abort$/;"	f
UpdateCapabilities	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! s:UpdateCapabilities(conn, capabilities) abort$/;"	f
UpdateCursor	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! s:UpdateCursor(cursor, start, end, offset) abort$/;"	f
UpdateLineNumbers	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! s:UpdateLineNumbers(buffer, current_sign_list, loclist) abort$/;"	f
UpdateMenu	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! s:UpdateMenu(data, menu_items) abort$/;"	f
Usage	vim/pack/plugins/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
UserCmd	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
UsingModule	vim/pack/plugins/start/ale/ale_linters/python/flake8.vim	/^function! s:UsingModule(buffer) abort$/;"	f
VADER_OUTPUT_FILE	vim/pack/plugins/start/ale/run-tests.bat	/^set VADER_OUTPUT_FILE=%~dp0\\vader_output$/;"	v
VimCloseCallback	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! s:VimCloseCallback(channel) abort$/;"	f
VimErrorCallback	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! s:VimErrorCallback(channel, data) abort$/;"	f
VimExitCallback	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! s:VimExitCallback(job, exit_code) abort$/;"	f
VimOutputCallback	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
VimOutputCallback	vim/pack/plugins/start/ale/autoload/ale/socket.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
WinFindBuf	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^function! s:WinFindBuf(buffer) abort$/;"	f
XmlIndentGet	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:XmlIndentGet(lnum)$/;"	f
XmlIndentSum	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:XmlIndentSum(lnum, style, add)$/;"	f
XmlIndentWithPattern	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:XmlIndentWithPattern(line, pat)$/;"	f
__author__	vim/pack/plugins/start/ale/rplugin/python3/deoplete/sources/ale.py	/^__author__ = 'Joao Paulo, w0rp'$/;"	v
__git_aliased_command	git-completion.bash	/^__git_aliased_command ()$/;"	f
__git_aliases	git-completion.bash	/^__git_aliases ()$/;"	f
__git_commands	git-completion.bash	/^__git_commands () {$/;"	f
__git_complete	git-completion.bash	/^__git_complete ()$/;"	f
__git_complete_file	git-completion.bash	/^__git_complete_file ()$/;"	f
__git_complete_index_file	git-completion.bash	/^__git_complete_index_file ()$/;"	f
__git_complete_remote_or_refspec	git-completion.bash	/^__git_complete_remote_or_refspec ()$/;"	f
__git_complete_revlist	git-completion.bash	/^__git_complete_revlist ()$/;"	f
__git_complete_revlist_file	git-completion.bash	/^__git_complete_revlist_file ()$/;"	f
__git_complete_strategy	git-completion.bash	/^__git_complete_strategy ()$/;"	f
__git_compute_all_commands	git-completion.bash	/^__git_compute_all_commands ()$/;"	f
__git_compute_merge_strategies	git-completion.bash	/^__git_compute_merge_strategies ()$/;"	f
__git_compute_porcelain_commands	git-completion.bash	/^__git_compute_porcelain_commands ()$/;"	f
__git_config_get_set_variables	git-completion.bash	/^__git_config_get_set_variables ()$/;"	f
__git_count_arguments	git-completion.bash	/^__git_count_arguments ()$/;"	f
__git_find_on_cmdline	git-completion.bash	/^__git_find_on_cmdline ()$/;"	f
__git_func_wrap	git-completion.bash	/^__git_func_wrap ()$/;"	f
__git_has_doubledash	git-completion.bash	/^__git_has_doubledash ()$/;"	f
__git_heads	git-completion.bash	/^__git_heads ()$/;"	f
__git_index_files	git-completion.bash	/^__git_index_files ()$/;"	f
__git_list_all_commands	git-completion.bash	/^__git_list_all_commands ()$/;"	f
__git_list_merge_strategies	git-completion.bash	/^__git_list_merge_strategies ()$/;"	f
__git_list_porcelain_commands	git-completion.bash	/^__git_list_porcelain_commands ()$/;"	f
__git_ls_files_helper	git-completion.bash	/^__git_ls_files_helper ()$/;"	f
__git_main	git-completion.bash	/^__git_main ()$/;"	f
__git_match_ctag	git-completion.bash	/^__git_match_ctag() {$/;"	f
__git_pretty_aliases	git-completion.bash	/^__git_pretty_aliases ()$/;"	f
__git_reassemble_comp_words_by_ref	git-completion.bash	/^__git_reassemble_comp_words_by_ref()$/;"	f
__git_refs	git-completion.bash	/^__git_refs ()$/;"	f
__git_refs2	git-completion.bash	/^__git_refs2 ()$/;"	f
__git_refs_remotes	git-completion.bash	/^__git_refs_remotes ()$/;"	f
__git_remotes	git-completion.bash	/^__git_remotes ()$/;"	f
__git_tags	git-completion.bash	/^__git_tags ()$/;"	f
__gitcomp	git-completion.bash	/^	__gitcomp ()$/;"	f
__gitcomp	git-completion.bash	/^__gitcomp ()$/;"	f
__gitcomp_file	git-completion.bash	/^	__gitcomp_file ()$/;"	f
__gitcomp_file	git-completion.bash	/^__gitcomp_file ()$/;"	f
__gitcomp_nl	git-completion.bash	/^	__gitcomp_nl ()$/;"	f
__gitcomp_nl	git-completion.bash	/^__gitcomp_nl ()$/;"	f
__gitcompadd	git-completion.bash	/^__gitcompadd ()$/;"	f
__gitdir	git-completion.bash	/^__gitdir ()$/;"	f
__gitk_main	git-completion.bash	/^__gitk_main ()$/;"	f
__init__	vim/pack/plugins/start/ale/rplugin/python3/deoplete/sources/ale.py	/^        def __init__(self, vim):$/;"	m	class:Base
__init__	vim/pack/plugins/start/ale/rplugin/python3/deoplete/sources/ale.py	/^    def __init__(self, vim):$/;"	m	class:Source
_get_comp_words_by_ref	git-completion.bash	/^_get_comp_words_by_ref ()$/;"	f
_git	git-completion.bash	/^	_git ()$/;"	f
_git	git-completion.bash	/^_git ()$/;"	f
_git_add	git-completion.bash	/^_git_add ()$/;"	f
_git_am	git-completion.bash	/^_git_am ()$/;"	f
_git_apply	git-completion.bash	/^_git_apply ()$/;"	f
_git_archive	git-completion.bash	/^_git_archive ()$/;"	f
_git_bisect	git-completion.bash	/^_git_bisect ()$/;"	f
_git_branch	git-completion.bash	/^_git_branch ()$/;"	f
_git_bundle	git-completion.bash	/^_git_bundle ()$/;"	f
_git_checkout	git-completion.bash	/^_git_checkout ()$/;"	f
_git_cherry	git-completion.bash	/^_git_cherry ()$/;"	f
_git_cherry_pick	git-completion.bash	/^_git_cherry_pick ()$/;"	f
_git_clean	git-completion.bash	/^_git_clean ()$/;"	f
_git_clone	git-completion.bash	/^_git_clone ()$/;"	f
_git_commit	git-completion.bash	/^_git_commit ()$/;"	f
_git_config	git-completion.bash	/^_git_config ()$/;"	f
_git_describe	git-completion.bash	/^_git_describe ()$/;"	f
_git_diff	git-completion.bash	/^_git_diff ()$/;"	f
_git_difftool	git-completion.bash	/^_git_difftool ()$/;"	f
_git_fetch	git-completion.bash	/^_git_fetch ()$/;"	f
_git_format_patch	git-completion.bash	/^_git_format_patch ()$/;"	f
_git_fsck	git-completion.bash	/^_git_fsck ()$/;"	f
_git_gc	git-completion.bash	/^_git_gc ()$/;"	f
_git_gitk	git-completion.bash	/^_git_gitk ()$/;"	f
_git_grep	git-completion.bash	/^_git_grep ()$/;"	f
_git_help	git-completion.bash	/^_git_help ()$/;"	f
_git_init	git-completion.bash	/^_git_init ()$/;"	f
_git_log	git-completion.bash	/^_git_log ()$/;"	f
_git_ls_files	git-completion.bash	/^_git_ls_files ()$/;"	f
_git_ls_remote	git-completion.bash	/^_git_ls_remote ()$/;"	f
_git_ls_tree	git-completion.bash	/^_git_ls_tree ()$/;"	f
_git_merge	git-completion.bash	/^_git_merge ()$/;"	f
_git_merge_base	git-completion.bash	/^_git_merge_base ()$/;"	f
_git_mergetool	git-completion.bash	/^_git_mergetool ()$/;"	f
_git_mv	git-completion.bash	/^_git_mv ()$/;"	f
_git_name_rev	git-completion.bash	/^_git_name_rev ()$/;"	f
_git_notes	git-completion.bash	/^_git_notes ()$/;"	f
_git_pull	git-completion.bash	/^_git_pull ()$/;"	f
_git_push	git-completion.bash	/^_git_push ()$/;"	f
_git_rebase	git-completion.bash	/^_git_rebase ()$/;"	f
_git_reflog	git-completion.bash	/^_git_reflog ()$/;"	f
_git_remote	git-completion.bash	/^_git_remote ()$/;"	f
_git_replace	git-completion.bash	/^_git_replace ()$/;"	f
_git_reset	git-completion.bash	/^_git_reset ()$/;"	f
_git_revert	git-completion.bash	/^_git_revert ()$/;"	f
_git_rm	git-completion.bash	/^_git_rm ()$/;"	f
_git_send_email	git-completion.bash	/^_git_send_email ()$/;"	f
_git_shortlog	git-completion.bash	/^_git_shortlog ()$/;"	f
_git_show	git-completion.bash	/^_git_show ()$/;"	f
_git_show_branch	git-completion.bash	/^_git_show_branch ()$/;"	f
_git_stage	git-completion.bash	/^_git_stage ()$/;"	f
_git_stash	git-completion.bash	/^_git_stash ()$/;"	f
_git_submodule	git-completion.bash	/^_git_submodule ()$/;"	f
_git_svn	git-completion.bash	/^_git_svn ()$/;"	f
_git_tag	git-completion.bash	/^_git_tag ()$/;"	f
_git_whatchanged	git-completion.bash	/^_git_whatchanged ()$/;"	f
_gitk	git-completion.bash	/^_gitk ()$/;"	f
_handleOldOptions	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
a	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> a <NOP>$/;"	m
activateAll	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll() abort$/;"	f
activateBookmark	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm) abort$/;"	f
activateDirNode	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode, ...) abort$/;"	f
activateFileNode	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node) abort$/;"	f
add_db	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
addtomrufs	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
ale#Env	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! ale#Env(variable_name, value) abort$/;"	f
ale#Escape	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! ale#Escape(str) abort$/;"	f
ale#FileTooLarge	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! ale#FileTooLarge(buffer) abort$/;"	f
ale#GetFilenameMappings	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! ale#GetFilenameMappings(buffer, name) abort$/;"	f
ale#GetLocItemMessage	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! ale#GetLocItemMessage(item, format_string) abort$/;"	f
ale#Has	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! ale#Has(feature) abort$/;"	f
ale#Pad	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! ale#Pad(string) abort$/;"	f
ale#Queue	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! ale#Queue(delay, ...) abort$/;"	f
ale#Set	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! ale#Set(variable_name, default) abort$/;"	f
ale#ShouldDoNothing	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! ale#ShouldDoNothing(buffer) abort$/;"	f
ale#Var	vim/pack/plugins/start/ale/autoload/ale.vim	/^function! ale#Var(buffer, variable_name) abort$/;"	f
ale#ant#BuildClasspathCommand	vim/pack/plugins/start/ale/autoload/ale/ant.vim	/^function! ale#ant#BuildClasspathCommand(buffer) abort$/;"	f
ale#ant#FindExecutable	vim/pack/plugins/start/ale/autoload/ale/ant.vim	/^function! ale#ant#FindExecutable(buffer) abort$/;"	f
ale#ant#FindProjectRoot	vim/pack/plugins/start/ale/autoload/ale/ant.vim	/^function! ale#ant#FindProjectRoot(buffer) abort$/;"	f
ale#args#Parse	vim/pack/plugins/start/ale/autoload/ale/args.vim	/^function! ale#args#Parse(arg_list, string) abort$/;"	f
ale#assert#Fixer	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#Fixer(expected_result) abort$/;"	f
ale#assert#FixerCwd	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#FixerCwd(expected_cwd) abort$/;"	f
ale#assert#FixerNotExecuted	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#FixerNotExecuted() abort$/;"	f
ale#assert#GivenCommandOutput	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#GivenCommandOutput(...) abort$/;"	f
ale#assert#LSPAddress	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPAddress(expected_address) abort$/;"	f
ale#assert#LSPConfig	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPConfig(expected_config) abort$/;"	f
ale#assert#LSPLanguage	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPLanguage(expected_language) abort$/;"	f
ale#assert#LSPOptions	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPOptions(expected_options) abort$/;"	f
ale#assert#LSPProject	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPProject(expected_root) abort$/;"	f
ale#assert#Linter	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#Linter(expected_executable, expected_command) abort$/;"	f
ale#assert#LinterCwd	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#LinterCwd(expected_cwd) abort$/;"	f
ale#assert#LinterNotExecuted	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#LinterNotExecuted() abort$/;"	f
ale#assert#ResetVariables	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#ResetVariables(filetype, name, ...) abort$/;"	f
ale#assert#SetUpFixerTest	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpFixerTest(filetype, name, ...) abort$/;"	f
ale#assert#SetUpFixerTestCommands	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpFixerTestCommands() abort$/;"	f
ale#assert#SetUpLinterTest	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpLinterTest(filetype, name) abort$/;"	f
ale#assert#SetUpLinterTestCommands	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpLinterTestCommands() abort$/;"	f
ale#assert#TearDownFixerTest	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#TearDownFixerTest() abort$/;"	f
ale#assert#TearDownLinterTest	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^function! ale#assert#TearDownLinterTest() abort$/;"	f
ale#balloon#Disable	vim/pack/plugins/start/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Disable() abort$/;"	f
ale#balloon#Enable	vim/pack/plugins/start/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Enable() abort$/;"	f
ale#balloon#Expr	vim/pack/plugins/start/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Expr() abort$/;"	f
ale#balloon#MessageForPos	vim/pack/plugins/start/ale/autoload/ale/balloon.vim	/^function! ale#balloon#MessageForPos(bufnr, lnum, col) abort$/;"	f
ale#c#ExpandAtArgs	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#ExpandAtArgs(path_prefix, raw_split_lines) abort$/;"	f
ale#c#FindCompileCommands	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#FindCompileCommands(buffer) abort$/;"	f
ale#c#FindLocalHeaderPaths	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#FindLocalHeaderPaths(buffer) abort$/;"	f
ale#c#FindProjectRoot	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#FindProjectRoot(buffer) abort$/;"	f
ale#c#FlagsFromCompileCommands	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#FlagsFromCompileCommands(buffer, compile_commands_file) abort$/;"	f
ale#c#GetBuildDirectory	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#GetBuildDirectory(buffer) abort$/;"	f
ale#c#GetCFlags	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#GetCFlags(buffer, output) abort$/;"	f
ale#c#GetMakeCommand	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#GetMakeCommand(buffer) abort$/;"	f
ale#c#IncludeOptions	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#IncludeOptions(include_paths) abort$/;"	f
ale#c#ParseCFlags	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#ParseCFlags(path_prefix, should_quote, raw_arguments) abort$/;"	f
ale#c#ParseCFlagsFromMakeOutput	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#ParseCFlagsFromMakeOutput(buffer, make_output) abort$/;"	f
ale#c#ParseCompileCommandsFlags	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#ParseCompileCommandsFlags(buffer, file_lookup, dir_lookup) abort$/;"	f
ale#c#QuoteArg	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#QuoteArg(arg) abort$/;"	f
ale#c#ResetCompileCommandsCache	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#ResetCompileCommandsCache() abort$/;"	f
ale#c#RunMakeCommand	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#RunMakeCommand(buffer, Callback) abort$/;"	f
ale#c#ShellSplit	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^function! ale#c#ShellSplit(line) abort$/;"	f
ale#code_action#ApplyChanges	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! ale#code_action#ApplyChanges(filename, changes, should_save) abort$/;"	f
ale#code_action#BuildChangesList	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! ale#code_action#BuildChangesList(changes_map) abort$/;"	f
ale#code_action#DisablePopUpMenu	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! ale#code_action#DisablePopUpMenu() abort$/;"	f
ale#code_action#EnablePopUpMenu	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! ale#code_action#EnablePopUpMenu() abort$/;"	f
ale#code_action#GetChanges	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! ale#code_action#GetChanges(workspace_edit) abort$/;"	f
ale#code_action#GetCodeActions	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! ale#code_action#GetCodeActions(options) abort$/;"	f
ale#code_action#HandleCodeAction	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! ale#code_action#HandleCodeAction(code_action, options) abort$/;"	f
ale#code_action#ReloadBuffer	vim/pack/plugins/start/ale/autoload/ale/code_action.vim	/^function! ale#code_action#ReloadBuffer() abort$/;"	f
ale#codefix#ApplyLSPCodeAction	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! ale#codefix#ApplyLSPCodeAction(data, item) abort$/;"	f
ale#codefix#ApplyTSServerCodeAction	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! ale#codefix#ApplyTSServerCodeAction(data, item) abort$/;"	f
ale#codefix#ClearLSPData	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! ale#codefix#ClearLSPData() abort$/;"	f
ale#codefix#Execute	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! ale#codefix#Execute(range, ...) abort$/;"	f
ale#codefix#GetMap	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! ale#codefix#GetMap() abort$/;"	f
ale#codefix#HandleLSPResponse	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! ale#codefix#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#codefix#HandleTSServerResponse	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! ale#codefix#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#codefix#SetMap	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! ale#codefix#SetMap(map) abort$/;"	f
ale#command#CdString	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#CdString(directory) abort$/;"	f
ale#command#ClearData	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#ClearData() abort$/;"	f
ale#command#CreateDirectory	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#CreateDirectory(buffer) abort$/;"	f
ale#command#CreateFile	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#CreateFile(buffer) abort$/;"	f
ale#command#CreateTempFile	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#CreateTempFile(buffer, temporary_file, input) abort$/;"	f
ale#command#EscapeCommandPart	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#EscapeCommandPart(command_part) abort$/;"	f
ale#command#FormatCommand	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#FormatCommand($/;"	f
ale#command#GetData	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#GetData() abort$/;"	f
ale#command#InitData	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#InitData(buffer) abort$/;"	f
ale#command#IsDeferred	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#IsDeferred(value) abort$/;"	f
ale#command#ManageDirectory	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#ManageDirectory(buffer, directory) abort$/;"	f
ale#command#ManageFile	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#ManageFile(buffer, file) abort$/;"	f
ale#command#RemoveManagedFiles	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#RemoveManagedFiles(buffer) abort$/;"	f
ale#command#ResetCwd	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#ResetCwd(buffer) abort$/;"	f
ale#command#Run	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#Run(buffer, command, Callback, ...) abort$/;"	f
ale#command#SetCwd	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#SetCwd(buffer, cwd) abort$/;"	f
ale#command#StopJobs	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^function! ale#command#StopJobs(buffer, job_type) abort$/;"	f
ale#completion#AutomaticOmniFunc	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#AutomaticOmniFunc(findstart, base) abort$/;"	f
ale#completion#CanProvideCompletions	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#CanProvideCompletions() abort$/;"	f
ale#completion#Disable	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#Disable() abort$/;"	f
ale#completion#Done	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#Done() abort$/;"	f
ale#completion#Enable	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#Enable() abort$/;"	f
ale#completion#Filter	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#Filter($/;"	f
ale#completion#GetAllTriggers	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#GetAllTriggers() abort$/;"	f
ale#completion#GetCompletionKind	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionKind(kind) abort$/;"	f
ale#completion#GetCompletionPosition	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionPosition() abort$/;"	f
ale#completion#GetCompletionPositionForDeoplete	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionPositionForDeoplete(input) abort$/;"	f
ale#completion#GetCompletionResult	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionResult() abort$/;"	f
ale#completion#GetCompletionSymbols	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionSymbols(kind) abort$/;"	f
ale#completion#GetCompletions	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletions(...) abort$/;"	f
ale#completion#GetPrefix	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#GetPrefix(filetype, line, column) abort$/;"	f
ale#completion#GetTriggerCharacter	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#GetTriggerCharacter(filetype, prefix) abort$/;"	f
ale#completion#HandleLSPResponse	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#completion#HandleTSServerResponse	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#completion#HandleUserData	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#HandleUserData(completed_item) abort$/;"	f
ale#completion#Import	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#Import() abort$/;"	f
ale#completion#NullFilter	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#NullFilter(buffer, item) abort$/;"	f
ale#completion#OmniFunc	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#OmniFunc(findstart, base) abort$/;"	f
ale#completion#ParseLSPCompletions	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseLSPCompletions(response) abort$/;"	f
ale#completion#ParseTSServerCompletionEntryDetails	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletionEntryDetails(response) abort$/;"	f
ale#completion#ParseTSServerCompletions	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletions(response) abort$/;"	f
ale#completion#Queue	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#Queue() abort$/;"	f
ale#completion#RestoreCompletionOptions	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#RestoreCompletionOptions() abort$/;"	f
ale#completion#Show	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#Show(result) abort$/;"	f
ale#completion#StopTimer	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! ale#completion#StopTimer() abort$/;"	f
ale#completion#python#CompletionItemFilter	vim/pack/plugins/start/ale/autoload/ale/completion/python.vim	/^function! ale#completion#python#CompletionItemFilter(buffer, item) abort$/;"	f
ale#cursor#EchoCursorWarning	vim/pack/plugins/start/ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarning(...) abort$/;"	f
ale#cursor#EchoCursorWarningWithDelay	vim/pack/plugins/start/ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarningWithDelay() abort$/;"	f
ale#cursor#ShowCursorDetail	vim/pack/plugins/start/ale/autoload/ale/cursor.vim	/^function! ale#cursor#ShowCursorDetail() abort$/;"	f
ale#cursor#TruncatedEcho	vim/pack/plugins/start/ale/autoload/ale/cursor.vim	/^function! ale#cursor#TruncatedEcho(original_message) abort$/;"	f
ale#d#FindDUBConfig	vim/pack/plugins/start/ale/autoload/ale/d.vim	/^function! ale#d#FindDUBConfig(buffer) abort$/;"	f
ale#debugging#Info	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! ale#debugging#Info() abort$/;"	f
ale#debugging#InfoToClipboard	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToClipboard() abort$/;"	f
ale#debugging#InfoToFile	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToFile(filename) abort$/;"	f
ale#definition#ClearLSPData	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^function! ale#definition#ClearLSPData() abort$/;"	f
ale#definition#GetMap	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^function! ale#definition#GetMap() abort$/;"	f
ale#definition#GoTo	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^function! ale#definition#GoTo(options) abort$/;"	f
ale#definition#GoToCommandHandler	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^function! ale#definition#GoToCommandHandler(command, ...) abort$/;"	f
ale#definition#GoToType	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^function! ale#definition#GoToType(options) abort$/;"	f
ale#definition#HandleLSPResponse	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^function! ale#definition#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#definition#HandleTSServerResponse	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^function! ale#definition#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#definition#SetMap	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^function! ale#definition#SetMap(map) abort$/;"	f
ale#definition#UpdateTagStack	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^function! ale#definition#UpdateTagStack() abort$/;"	f
ale#dhall#GetCommand	vim/pack/plugins/start/ale/autoload/ale/dhall.vim	/^function! ale#dhall#GetCommand(buffer) abort$/;"	f
ale#dhall#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/dhall.vim	/^function! ale#dhall#GetExecutable(buffer) abort$/;"	f
ale#dhall#GetExecutableWithOptions	vim/pack/plugins/start/ale/autoload/ale/dhall.vim	/^function! ale#dhall#GetExecutableWithOptions(buffer) abort$/;"	f
ale#engine#Cleanup	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#Cleanup(buffer) abort$/;"	f
ale#engine#CleanupEveryBuffer	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#CleanupEveryBuffer() abort$/;"	f
ale#engine#EscapeCommandPart	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#EscapeCommandPart(command_part) abort$/;"	f
ale#engine#FixLocList	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#FixLocList(buffer, linter_name, from_other_source, loclist) abort$/;"	f
ale#engine#GetLoclist	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#GetLoclist(buffer) abort$/;"	f
ale#engine#HandleLoclist	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#HandleLoclist(linter_name, buffer, loclist, from_other_source) abort$/;"	f
ale#engine#InitBufferInfo	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#InitBufferInfo(buffer) abort$/;"	f
ale#engine#IsCheckingBuffer	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#IsCheckingBuffer(buffer) abort$/;"	f
ale#engine#IsExecutable	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#IsExecutable(buffer, executable) abort$/;"	f
ale#engine#MarkLinterActive	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#MarkLinterActive(info, linter) abort$/;"	f
ale#engine#MarkLinterInactive	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#MarkLinterInactive(info, linter_name) abort$/;"	f
ale#engine#ResetExecutableCache	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#ResetExecutableCache() abort$/;"	f
ale#engine#RunLinters	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#RunLinters(buffer, linters, should_lint_file) abort$/;"	f
ale#engine#SetResults	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#SetResults(buffer, loclist) abort$/;"	f
ale#engine#Stop	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^function! ale#engine#Stop(buffer) abort$/;"	f
ale#engine#ignore#Exclude	vim/pack/plugins/start/ale/autoload/ale/engine/ignore.vim	/^function! ale#engine#ignore#Exclude(filetype, all_linters, config, disable_lsp) abort$/;"	f
ale#engine#ignore#GetList	vim/pack/plugins/start/ale/autoload/ale/engine/ignore.vim	/^function! ale#engine#ignore#GetList(filetype, config) abort$/;"	f
ale#events#ClockMilliseconds	vim/pack/plugins/start/ale/autoload/ale/events.vim	/^function! ale#events#ClockMilliseconds() abort$/;"	f
ale#events#FileChangedEvent	vim/pack/plugins/start/ale/autoload/ale/events.vim	/^function! ale#events#FileChangedEvent(buffer) abort$/;"	f
ale#events#FileTypeEvent	vim/pack/plugins/start/ale/autoload/ale/events.vim	/^function! ale#events#FileTypeEvent(buffer, new_filetype) abort$/;"	f
ale#events#Init	vim/pack/plugins/start/ale/autoload/ale/events.vim	/^function! ale#events#Init() abort$/;"	f
ale#events#LintOnEnter	vim/pack/plugins/start/ale/autoload/ale/events.vim	/^function! ale#events#LintOnEnter(buffer) abort$/;"	f
ale#events#QuitEvent	vim/pack/plugins/start/ale/autoload/ale/events.vim	/^function! ale#events#QuitEvent(buffer) abort$/;"	f
ale#events#QuitRecently	vim/pack/plugins/start/ale/autoload/ale/events.vim	/^function! ale#events#QuitRecently(buffer) abort$/;"	f
ale#events#ReadOrEnterEvent	vim/pack/plugins/start/ale/autoload/ale/events.vim	/^function! ale#events#ReadOrEnterEvent(buffer) abort$/;"	f
ale#events#SaveEvent	vim/pack/plugins/start/ale/autoload/ale/events.vim	/^function! ale#events#SaveEvent(buffer) abort$/;"	f
ale#filename_mapping#Invert	vim/pack/plugins/start/ale/autoload/ale/filename_mapping.vim	/^function! ale#filename_mapping#Invert(filename_mappings) abort$/;"	f
ale#filename_mapping#Map	vim/pack/plugins/start/ale/autoload/ale/filename_mapping.vim	/^function! ale#filename_mapping#Map(filename, filename_mappings) abort$/;"	f
ale#filetypes#GuessExtension	vim/pack/plugins/start/ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#GuessExtension(filetype) abort$/;"	f
ale#filetypes#LoadExtensionMap	vim/pack/plugins/start/ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#LoadExtensionMap() abort$/;"	f
ale#fix#ApplyFixes	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyFixes(buffer, output) abort$/;"	f
ale#fix#ApplyQueuedFixes	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyQueuedFixes(buffer) abort$/;"	f
ale#fix#Fix	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^function! ale#fix#Fix(buffer, fixing_flag, ...) abort$/;"	f
ale#fix#InitBufferData	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^function! ale#fix#InitBufferData(buffer, fixing_flag) abort$/;"	f
ale#fix#registry#Add	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Add(name, func, filetypes, desc, ...) abort$/;"	f
ale#fix#registry#Clear	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Clear() abort$/;"	f
ale#fix#registry#CompleteFixers	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#CompleteFixers(ArgLead, CmdLine, CursorPos) abort$/;"	f
ale#fix#registry#GetApplicableFixers	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetApplicableFixers(filetype) abort$/;"	f
ale#fix#registry#GetFunc	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetFunc(name) abort$/;"	f
ale#fix#registry#ResetToDefaults	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#ResetToDefaults() abort$/;"	f
ale#fix#registry#Suggest	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Suggest(filetype) abort$/;"	f
ale#fix#registry#SuggestedFixers	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#SuggestedFixers(filetype) abort$/;"	f
ale#fixers#appleswiftformat#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/appleswiftformat.vim	/^function! ale#fixers#appleswiftformat#Fix(buffer) abort$/;"	f
ale#fixers#astyle#FindProjectOptions	vim/pack/plugins/start/ale/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#FindProjectOptions(buffer) abort$/;"	f
ale#fixers#astyle#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#Fix(buffer) abort$/;"	f
ale#fixers#astyle#Var	vim/pack/plugins/start/ale/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#Var(buffer, name) abort$/;"	f
ale#fixers#autoimport#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/autoimport.vim	/^function! ale#fixers#autoimport#Fix(buffer) abort$/;"	f
ale#fixers#autopep8#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/autopep8.vim	/^function! ale#fixers#autopep8#Fix(buffer) abort$/;"	f
ale#fixers#bibclean#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/bibclean.vim	/^function! ale#fixers#bibclean#Fix(buffer) abort$/;"	f
ale#fixers#black#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/black.vim	/^function! ale#fixers#black#Fix(buffer) abort$/;"	f
ale#fixers#black#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/black.vim	/^function! ale#fixers#black#GetExecutable(buffer) abort$/;"	f
ale#fixers#brittany#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/brittany.vim	/^function! ale#fixers#brittany#Fix(buffer) abort$/;"	f
ale#fixers#brittany#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/brittany.vim	/^function! ale#fixers#brittany#GetExecutable(buffer) abort$/;"	f
ale#fixers#buildifier#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/buildifier.vim	/^function! ale#fixers#buildifier#Fix(buffer) abort$/;"	f
ale#fixers#buildifier#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/buildifier.vim	/^function! ale#fixers#buildifier#GetExecutable(buffer) abort$/;"	f
ale#fixers#clangformat#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#Fix(buffer) abort$/;"	f
ale#fixers#clangformat#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#clangtidy#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#Fix(buffer) abort$/;"	f
ale#fixers#clangtidy#GetCommand	vim/pack/plugins/start/ale/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#GetCommand(buffer) abort$/;"	f
ale#fixers#clangtidy#Var	vim/pack/plugins/start/ale/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#Var(buffer, name) abort$/;"	f
ale#fixers#cmakeformat#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/cmakeformat.vim	/^function! ale#fixers#cmakeformat#Fix(buffer) abort$/;"	f
ale#fixers#dartfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/dartfmt.vim	/^function! ale#fixers#dartfmt#Fix(buffer) abort$/;"	f
ale#fixers#deno#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/deno.vim	/^function! ale#fixers#deno#Fix(buffer) abort$/;"	f
ale#fixers#dfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/dfmt.vim	/^function! ale#fixers#dfmt#Fix(buffer) abort$/;"	f
ale#fixers#dhall_format#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/dhall_format.vim	/^function! ale#fixers#dhall_format#Fix(buffer) abort$/;"	f
ale#fixers#dhall_freeze#Freeze	vim/pack/plugins/start/ale/autoload/ale/fixers/dhall_freeze.vim	/^function! ale#fixers#dhall_freeze#Freeze(buffer) abort$/;"	f
ale#fixers#dhall_lint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/dhall_lint.vim	/^function! ale#fixers#dhall_lint#Fix(buffer) abort$/;"	f
ale#fixers#elm_format#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/elm_format.vim	/^function! ale#fixers#elm_format#Fix(buffer) abort$/;"	f
ale#fixers#elm_format#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/elm_format.vim	/^function! ale#fixers#elm_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#erlfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/erlfmt.vim	/^function! ale#fixers#erlfmt#Fix(buffer) abort$/;"	f
ale#fixers#erlfmt#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/erlfmt.vim	/^function! ale#fixers#erlfmt#GetExecutable(buffer) abort$/;"	f
ale#fixers#eslint#ApplyFixForVersion	vim/pack/plugins/start/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#eslint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#Fix(buffer) abort$/;"	f
ale#fixers#eslint#ProcessEslintDOutput	vim/pack/plugins/start/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessEslintDOutput(buffer, output) abort$/;"	f
ale#fixers#eslint#ProcessFixDryRunOutput	vim/pack/plugins/start/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessFixDryRunOutput(buffer, output) abort$/;"	f
ale#fixers#fecs#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/fecs.vim	/^function! ale#fixers#fecs#Fix(buffer) abort$/;"	f
ale#fixers#fish_indent#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/fish_indent.vim	/^function! ale#fixers#fish_indent#Fix(buffer) abort$/;"	f
ale#fixers#fixjson#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/fixjson.vim	/^function! ale#fixers#fixjson#Fix(buffer) abort$/;"	f
ale#fixers#fixjson#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/fixjson.vim	/^function! ale#fixers#fixjson#GetExecutable(buffer) abort$/;"	f
ale#fixers#floskell#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/floskell.vim	/^function! ale#fixers#floskell#Fix(buffer) abort$/;"	f
ale#fixers#floskell#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/floskell.vim	/^function! ale#fixers#floskell#GetExecutable(buffer) abort$/;"	f
ale#fixers#generic#RemoveTrailingBlankLines	vim/pack/plugins/start/ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#RemoveTrailingBlankLines(buffer, lines) abort$/;"	f
ale#fixers#generic#TrimWhitespace	vim/pack/plugins/start/ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#TrimWhitespace(buffer, lines) abort$/;"	f
ale#fixers#generic_python#AddLinesBeforeControlStatements	vim/pack/plugins/start/ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#AddLinesBeforeControlStatements(buffer, lines) abort$/;"	f
ale#fixers#generic_python#BreakUpLongLines	vim/pack/plugins/start/ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#BreakUpLongLines(buffer, lines) abort$/;"	f
ale#fixers#gnatpp#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/gnatpp.vim	/^function! ale#fixers#gnatpp#Fix(buffer) abort$/;"	f
ale#fixers#gofmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/gofmt.vim	/^function! ale#fixers#gofmt#Fix(buffer) abort$/;"	f
ale#fixers#goimports#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/goimports.vim	/^function! ale#fixers#goimports#Fix(buffer) abort$/;"	f
ale#fixers#gomod#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/gomod.vim	/^function! ale#fixers#gomod#Fix(buffer) abort$/;"	f
ale#fixers#google_java_format#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/google_java_format.vim	/^function! ale#fixers#google_java_format#Fix(buffer) abort$/;"	f
ale#fixers#hackfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/hackfmt.vim	/^function! ale#fixers#hackfmt#Fix(buffer) abort$/;"	f
ale#fixers#help#AlignTags	vim/pack/plugins/start/ale/autoload/ale/fixers/help.vim	/^function! ale#fixers#help#AlignTags(buffer, lines) abort$/;"	f
ale#fixers#hfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/hfmt.vim	/^function! ale#fixers#hfmt#Fix(buffer) abort$/;"	f
ale#fixers#hindent#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/hindent.vim	/^function! ale#fixers#hindent#Fix(buffer) abort$/;"	f
ale#fixers#hindent#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/hindent.vim	/^function! ale#fixers#hindent#GetExecutable(buffer) abort$/;"	f
ale#fixers#hlint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/hlint.vim	/^function! ale#fixers#hlint#Fix(buffer) abort$/;"	f
ale#fixers#html_beautify#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/html_beautify.vim	/^function! ale#fixers#html_beautify#Fix(buffer) abort$/;"	f
ale#fixers#importjs#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#Fix(buffer) abort$/;"	f
ale#fixers#importjs#ProcessOutput	vim/pack/plugins/start/ale/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#ProcessOutput(buffer, output) abort$/;"	f
ale#fixers#isort#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#Fix(buffer) abort$/;"	f
ale#fixers#isort#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#GetExecutable(buffer) abort$/;"	f
ale#fixers#jq#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/jq.vim	/^function! ale#fixers#jq#Fix(buffer) abort$/;"	f
ale#fixers#jq#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/jq.vim	/^function! ale#fixers#jq#GetExecutable(buffer) abort$/;"	f
ale#fixers#ktlint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/ktlint.vim	/^function! ale#fixers#ktlint#Fix(buffer) abort$/;"	f
ale#fixers#latexindent#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/latexindent.vim	/^function! ale#fixers#latexindent#Fix(buffer) abort$/;"	f
ale#fixers#luafmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/luafmt.vim	/^function! ale#fixers#luafmt#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#GetCommand	vim/pack/plugins/start/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetCommand(buffer) abort$/;"	f
ale#fixers#mix_format#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#nimpretty#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/nimpretty.vim	/^function! ale#fixers#nimpretty#Fix(buffer) abort$/;"	f
ale#fixers#nixfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/nixfmt.vim	/^function! ale#fixers#nixfmt#Fix(buffer) abort$/;"	f
ale#fixers#nixpkgsfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/nixpkgsfmt.vim	/^function! ale#fixers#nixpkgsfmt#Fix(buffer) abort$/;"	f
ale#fixers#ocamlformat#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/ocamlformat.vim	/^function! ale#fixers#ocamlformat#Fix(buffer) abort$/;"	f
ale#fixers#ocp_indent#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/ocp_indent.vim	/^function! ale#fixers#ocp_indent#Fix(buffer) abort$/;"	f
ale#fixers#ormolu#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/ormolu.vim	/^function! ale#fixers#ormolu#Fix(buffer) abort$/;"	f
ale#fixers#perltidy#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/perltidy.vim	/^function! ale#fixers#perltidy#Fix(buffer) abort$/;"	f
ale#fixers#pgformatter#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/pgformatter.vim	/^function! ale#fixers#pgformatter#Fix(buffer) abort$/;"	f
ale#fixers#php_cs_fixer#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/php_cs_fixer.vim	/^function! ale#fixers#php_cs_fixer#Fix(buffer) abort$/;"	f
ale#fixers#php_cs_fixer#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/php_cs_fixer.vim	/^function! ale#fixers#php_cs_fixer#GetExecutable(buffer) abort$/;"	f
ale#fixers#phpcbf#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#Fix(buffer) abort$/;"	f
ale#fixers#phpcbf#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#ApplyFixForVersion	vim/pack/plugins/start/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#prettier#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#Fix(buffer) abort$/;"	f
ale#fixers#prettier#GetCwd	vim/pack/plugins/start/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#GetCwd(buffer) abort$/;"	f
ale#fixers#prettier#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#ProcessPrettierDOutput	vim/pack/plugins/start/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#ProcessPrettierDOutput(buffer, output) abort$/;"	f
ale#fixers#prettier_eslint#ApplyFixForVersion	vim/pack/plugins/start/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#prettier_eslint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#Fix(buffer) abort$/;"	f
ale#fixers#prettier_eslint#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier_standard#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#Fix(buffer) abort$/;"	f
ale#fixers#prettier_standard#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#protolint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/protolint.vim	/^function! ale#fixers#protolint#Fix(buffer) abort$/;"	f
ale#fixers#protolint#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/protolint.vim	/^function! ale#fixers#protolint#GetExecutable(buffer) abort$/;"	f
ale#fixers#ptop#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/ptop.vim	/^function! ale#fixers#ptop#Fix(buffer) abort$/;"	f
ale#fixers#puppetlint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/puppetlint.vim	/^function! ale#fixers#puppetlint#Fix(buffer) abort$/;"	f
ale#fixers#purty#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/purty.vim	/^function! ale#fixers#purty#Fix(buffer) abort$/;"	f
ale#fixers#purty#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/purty.vim	/^function! ale#fixers#purty#GetExecutable(buffer) abort$/;"	f
ale#fixers#qmlfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/qmlfmt.vim	/^function! ale#fixers#qmlfmt#Fix(buffer) abort$/;"	f
ale#fixers#qmlfmt#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/qmlfmt.vim	/^function! ale#fixers#qmlfmt#GetExecutable(buffer) abort$/;"	f
ale#fixers#refmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/refmt.vim	/^function! ale#fixers#refmt#Fix(buffer) abort$/;"	f
ale#fixers#remark_lint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/remark_lint.vim	/^function! ale#fixers#remark_lint#Fix(buffer) abort$/;"	f
ale#fixers#remark_lint#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/remark_lint.vim	/^function! ale#fixers#remark_lint#GetExecutable(buffer) abort$/;"	f
ale#fixers#reorder_python_imports#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/reorder_python_imports.vim	/^function! ale#fixers#reorder_python_imports#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#GetCommand	vim/pack/plugins/start/ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#GetCommand(buffer) abort$/;"	f
ale#fixers#rubocop#PostProcess	vim/pack/plugins/start/ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#PostProcess(buffer, output) abort$/;"	f
ale#fixers#rufo#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/rufo.vim	/^function! ale#fixers#rufo#Fix(buffer) abort$/;"	f
ale#fixers#rufo#GetCommand	vim/pack/plugins/start/ale/autoload/ale/fixers/rufo.vim	/^function! ale#fixers#rufo#GetCommand(buffer) abort$/;"	f
ale#fixers#rustfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/rustfmt.vim	/^function! ale#fixers#rustfmt#Fix(buffer) abort$/;"	f
ale#fixers#scalafmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/scalafmt.vim	/^function! ale#fixers#scalafmt#Fix(buffer) abort$/;"	f
ale#fixers#scalafmt#GetCommand	vim/pack/plugins/start/ale/autoload/ale/fixers/scalafmt.vim	/^function! ale#fixers#scalafmt#GetCommand(buffer) abort$/;"	f
ale#fixers#shfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/shfmt.vim	/^function! ale#fixers#shfmt#Fix(buffer) abort$/;"	f
ale#fixers#sorbet#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/sorbet.vim	/^function! ale#fixers#sorbet#Fix(buffer) abort$/;"	f
ale#fixers#sorbet#GetCommand	vim/pack/plugins/start/ale/autoload/ale/fixers/sorbet.vim	/^function! ale#fixers#sorbet#GetCommand(buffer) abort$/;"	f
ale#fixers#sqlfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/sqlfmt.vim	/^function! ale#fixers#sqlfmt#Fix(buffer) abort$/;"	f
ale#fixers#sqlformat#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/sqlformat.vim	/^function! ale#fixers#sqlformat#Fix(buffer) abort$/;"	f
ale#fixers#standard#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#Fix(buffer) abort$/;"	f
ale#fixers#standard#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#standardrb#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/standardrb.vim	/^function! ale#fixers#standardrb#Fix(buffer) abort$/;"	f
ale#fixers#standardrb#GetCommand	vim/pack/plugins/start/ale/autoload/ale/fixers/standardrb.vim	/^function! ale#fixers#standardrb#GetCommand(buffer) abort$/;"	f
ale#fixers#stylelint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#Fix(buffer) abort$/;"	f
ale#fixers#stylelint#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#GetExecutable(buffer) abort$/;"	f
ale#fixers#styler#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/styler.vim	/^function! ale#fixers#styler#Fix(buffer) abort$/;"	f
ale#fixers#stylish_haskell#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/stylish_haskell.vim	/^function! ale#fixers#stylish_haskell#Fix(buffer) abort$/;"	f
ale#fixers#stylish_haskell#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/stylish_haskell.vim	/^function! ale#fixers#stylish_haskell#GetExecutable(buffer) abort$/;"	f
ale#fixers#swiftformat#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#Fix(buffer) abort$/;"	f
ale#fixers#swiftformat#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#terraform#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/terraform.vim	/^function! ale#fixers#terraform#Fix(buffer) abort$/;"	f
ale#fixers#textlint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/textlint.vim	/^function! ale#fixers#textlint#Fix(buffer) abort$/;"	f
ale#fixers#tidy#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/tidy.vim	/^function! ale#fixers#tidy#Fix(buffer) abort$/;"	f
ale#fixers#tslint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/tslint.vim	/^function! ale#fixers#tslint#Fix(buffer) abort$/;"	f
ale#fixers#uncrustify#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/uncrustify.vim	/^function! ale#fixers#uncrustify#Fix(buffer) abort$/;"	f
ale#fixers#vfmt#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/vfmt.vim	/^function! ale#fixers#vfmt#Fix(buffer) abort$/;"	f
ale#fixers#xmllint#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/xmllint.vim	/^function! ale#fixers#xmllint#Fix(buffer) abort$/;"	f
ale#fixers#xo#ApplyFixForVersion	vim/pack/plugins/start/ale/autoload/ale/fixers/xo.vim	/^function! ale#fixers#xo#ApplyFixForVersion(buffer, version, executable, options) abort$/;"	f
ale#fixers#xo#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/xo.vim	/^function! ale#fixers#xo#Fix(buffer) abort$/;"	f
ale#fixers#yamlfix#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/yamlfix.vim	/^function! ale#fixers#yamlfix#Fix(buffer) abort$/;"	f
ale#fixers#yapf#Fix	vim/pack/plugins/start/ale/autoload/ale/fixers/yapf.vim	/^function! ale#fixers#yapf#Fix(buffer) abort$/;"	f
ale#floating_preview#Show	vim/pack/plugins/start/ale/autoload/ale/floating_preview.vim	/^function! ale#floating_preview#Show(lines, ...) abort$/;"	f
ale#go#EnvString	vim/pack/plugins/start/ale/autoload/ale/go.vim	/^function! ale#go#EnvString(buffer) abort$/;"	f
ale#go#FindProjectRoot	vim/pack/plugins/start/ale/autoload/ale/go.vim	/^function! ale#go#FindProjectRoot(buffer) abort$/;"	f
ale#gradle#BuildClasspathCommand	vim/pack/plugins/start/ale/autoload/ale/gradle.vim	/^function! ale#gradle#BuildClasspathCommand(buffer) abort$/;"	f
ale#gradle#FindExecutable	vim/pack/plugins/start/ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindExecutable(buffer) abort$/;"	f
ale#gradle#FindProjectRoot	vim/pack/plugins/start/ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindProjectRoot(buffer) abort$/;"	f
ale#gradle#GetInitPath	vim/pack/plugins/start/ale/autoload/ale/gradle.vim	/^function! ale#gradle#GetInitPath() abort$/;"	f
ale#handlers#alex#CreateCommandCallback	vim/pack/plugins/start/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#CreateCommandCallback(flags) abort$/;"	f
ale#handlers#alex#DefineLinter	vim/pack/plugins/start/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#DefineLinter(filetype, flags) abort$/;"	f
ale#handlers#alex#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#GetExecutable(buffer) abort$/;"	f
ale#handlers#alex#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#Handle(buffer, lines) abort$/;"	f
ale#handlers#atools#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/atools.vim	/^function! ale#handlers#atools#Handle(buffer, lines) abort$/;"	f
ale#handlers#ccls#GetInitOpts	vim/pack/plugins/start/ale/autoload/ale/handlers/ccls.vim	/^function! ale#handlers#ccls#GetInitOpts(buffer, init_options_var) abort$/;"	f
ale#handlers#ccls#GetProjectRoot	vim/pack/plugins/start/ale/autoload/ale/handlers/ccls.vim	/^function! ale#handlers#ccls#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#cppcheck#GetBufferPathIncludeOptions	vim/pack/plugins/start/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetBufferPathIncludeOptions(buffer) abort$/;"	f
ale#handlers#cppcheck#GetCompileCommandsOptions	vim/pack/plugins/start/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetCompileCommandsOptions(buffer) abort$/;"	f
ale#handlers#cppcheck#GetCwd	vim/pack/plugins/start/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetCwd(buffer) abort$/;"	f
ale#handlers#cppcheck#HandleCppCheckFormat	vim/pack/plugins/start/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#HandleCppCheckFormat(buffer, lines) abort$/;"	f
ale#handlers#cpplint#HandleCppLintFormat	vim/pack/plugins/start/ale/autoload/ale/handlers/cpplint.vim	/^function! ale#handlers#cpplint#HandleCppLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleCSSLintFormat	vim/pack/plugins/start/ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleCSSLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleStyleLintFormat	vim/pack/plugins/start/ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleStyleLintFormat(buffer, lines) abort$/;"	f
ale#handlers#deno#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/deno.vim	/^function! ale#handlers#deno#GetExecutable(buffer) abort$/;"	f
ale#handlers#deno#GetProjectRoot	vim/pack/plugins/start/ale/autoload/ale/handlers/deno.vim	/^function! ale#handlers#deno#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#elixir#FindMixProjectRoot	vim/pack/plugins/start/ale/autoload/ale/handlers/elixir.vim	/^function! ale#handlers#elixir#FindMixProjectRoot(buffer) abort$/;"	f
ale#handlers#elixir#FindMixUmbrellaRoot	vim/pack/plugins/start/ale/autoload/ale/handlers/elixir.vim	/^function! ale#handlers#elixir#FindMixUmbrellaRoot(buffer) abort$/;"	f
ale#handlers#eslint#FindConfig	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#FindConfig(buffer) abort$/;"	f
ale#handlers#eslint#GetCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetCommand(buffer) abort$/;"	f
ale#handlers#eslint#GetCwd	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetCwd(buffer) abort$/;"	f
ale#handlers#eslint#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#eslint#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#Handle(buffer, lines) abort$/;"	f
ale#handlers#eslint#HandleJSON	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#HandleJSON(buffer, lines) abort$/;"	f
ale#handlers#fecs#GetCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#GetCommand(buffer) abort$/;"	f
ale#handlers#fecs#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#GetExecutable(buffer) abort$/;"	f
ale#handlers#fecs#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#Handle(buffer, lines) abort$/;"	f
ale#handlers#flawfinder#HandleFlawfinderFormat	vim/pack/plugins/start/ale/autoload/ale/handlers/flawfinder.vim	/^function! ale#handlers#flawfinder#HandleFlawfinderFormat(buffer, lines) abort$/;"	f
ale#handlers#gawk#HandleGawkFormat	vim/pack/plugins/start/ale/autoload/ale/handlers/gawk.vim	/^function! ale#handlers#gawk#HandleGawkFormat(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormat	vim/pack/plugins/start/ale/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormat(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormatWithIncludes	vim/pack/plugins/start/ale/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormatWithIncludes(buffer, lines) abort$/;"	f
ale#handlers#go#Handler	vim/pack/plugins/start/ale/autoload/ale/handlers/go.vim	/^function! ale#handlers#go#Handler(buffer, lines) abort$/;"	f
ale#handlers#haskell#GetStackExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#GetStackExecutable(bufnr) abort$/;"	f
ale#handlers#haskell#HandleGHCFormat	vim/pack/plugins/start/ale/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#HandleGHCFormat(buffer, lines) abort$/;"	f
ale#handlers#haskell_stack#EscapeExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/haskell_stack.vim	/^function! ale#handlers#haskell_stack#EscapeExecutable(executable, stack_exec) abort$/;"	f
ale#handlers#hdl_checker#DefineLinter	vim/pack/plugins/start/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#DefineLinter(filetype) abort$/;"	f
ale#handlers#hdl_checker#GetCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetCommand(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetExecutable(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetInitOptions	vim/pack/plugins/start/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetInitOptions(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetProjectRoot	vim/pack/plugins/start/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#hdl_checker#IsDotGit	vim/pack/plugins/start/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#IsDotGit(path) abort$/;"	f
ale#handlers#hlint#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/hlint.vim	/^function! ale#handlers#hlint#GetExecutable(buffer) abort$/;"	f
ale#handlers#inko#GetType	vim/pack/plugins/start/ale/autoload/ale/handlers/inko.vim	/^function! ale#handlers#inko#GetType(severity) abort$/;"	f
ale#handlers#inko#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/inko.vim	/^function! ale#handlers#inko#Handle(buffer, lines) abort$/;"	f
ale#handlers#ktlint#GetCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#GetCommand(buffer) abort$/;"	f
ale#handlers#ktlint#GetRulesets	vim/pack/plugins/start/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#GetRulesets(buffer) abort$/;"	f
ale#handlers#ktlint#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#Handle(buffer, lines) abort$/;"	f
ale#handlers#languagetool#DefineLinter	vim/pack/plugins/start/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#DefineLinter(filetype) abort$/;"	f
ale#handlers#languagetool#GetCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#GetCommand(buffer) abort$/;"	f
ale#handlers#languagetool#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#GetExecutable(buffer) abort$/;"	f
ale#handlers#languagetool#HandleOutput	vim/pack/plugins/start/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#HandleOutput(buffer, lines) abort$/;"	f
ale#handlers#markdownlint#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/markdownlint.vim	/^function! ale#handlers#markdownlint#Handle(buffer, lines) abort$/;"	f
ale#handlers#ocamllsp#GetCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetCommand(buffer) abort$/;"	f
ale#handlers#ocamllsp#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetExecutable(buffer) abort$/;"	f
ale#handlers#ocamllsp#GetLanguage	vim/pack/plugins/start/ale/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetLanguage(buffer) abort$/;"	f
ale#handlers#ocamllsp#GetProjectRoot	vim/pack/plugins/start/ale/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#ols#GetCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetCommand(buffer) abort$/;"	f
ale#handlers#ols#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetExecutable(buffer) abort$/;"	f
ale#handlers#ols#GetLanguage	vim/pack/plugins/start/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetLanguage(buffer) abort$/;"	f
ale#handlers#ols#GetProjectRoot	vim/pack/plugins/start/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#pony#HandlePonycFormat	vim/pack/plugins/start/ale/autoload/ale/handlers/pony.vim	/^function! ale#handlers#pony#HandlePonycFormat(buffer, lines) abort$/;"	f
ale#handlers#redpen#HandleRedpenOutput	vim/pack/plugins/start/ale/autoload/ale/handlers/redpen.vim	/^function! ale#handlers#redpen#HandleRedpenOutput(buffer, lines) abort$/;"	f
ale#handlers#ruby#HandleSyntaxErrors	vim/pack/plugins/start/ale/autoload/ale/handlers/ruby.vim	/^function! ale#handlers#ruby#HandleSyntaxErrors(buffer, lines) abort$/;"	f
ale#handlers#rust#HandleRustErrors	vim/pack/plugins/start/ale/autoload/ale/handlers/rust.vim	/^function! ale#handlers#rust#HandleRustErrors(buffer, lines) abort$/;"	f
ale#handlers#scala#HandleScalacLintFormat	vim/pack/plugins/start/ale/autoload/ale/handlers/scala.vim	/^function! ale#handlers#scala#HandleScalacLintFormat(buffer, lines) abort$/;"	f
ale#handlers#sh#GetShellType	vim/pack/plugins/start/ale/autoload/ale/handlers/sh.vim	/^function! ale#handlers#sh#GetShellType(buffer) abort$/;"	f
ale#handlers#shellcheck#DefineLinter	vim/pack/plugins/start/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#DefineLinter(filetype) abort$/;"	f
ale#handlers#shellcheck#GetCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetCommand(buffer, version) abort$/;"	f
ale#handlers#shellcheck#GetCwd	vim/pack/plugins/start/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetCwd(buffer) abort$/;"	f
ale#handlers#shellcheck#GetDialectArgument	vim/pack/plugins/start/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetDialectArgument(buffer) abort$/;"	f
ale#handlers#shellcheck#GetShellcheckDialectDirective	vim/pack/plugins/start/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetShellcheckDialectDirective(buffer) abort$/;"	f
ale#handlers#shellcheck#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#Handle(buffer, lines) abort$/;"	f
ale#handlers#sml#GetCmFile	vim/pack/plugins/start/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetCmFile(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjCm	vim/pack/plugins/start/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjCm(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjFile	vim/pack/plugins/start/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjFile(buffer) abort$/;"	f
ale#handlers#sml#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#Handle(buffer, lines) abort$/;"	f
ale#handlers#spectral#HandleSpectralOutput	vim/pack/plugins/start/ale/autoload/ale/handlers/spectral.vim	/^function! ale#handlers#spectral#HandleSpectralOutput(buffer, lines) abort$/;"	f
ale#handlers#textlint#GetCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#GetCommand(buffer) abort$/;"	f
ale#handlers#textlint#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#GetExecutable(buffer) abort$/;"	f
ale#handlers#textlint#HandleTextlintOutput	vim/pack/plugins/start/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#HandleTextlintOutput(buffer, lines) abort$/;"	f
ale#handlers#tslint#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/tslint.vim	/^function! ale#handlers#tslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#tslint#InitVariables	vim/pack/plugins/start/ale/autoload/ale/handlers/tslint.vim	/^function! ale#handlers#tslint#InitVariables() abort$/;"	f
ale#handlers#tsserver#GetProjectRoot	vim/pack/plugins/start/ale/autoload/ale/handlers/tsserver.vim	/^function! ale#handlers#tsserver#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#unix#HandleAsError	vim/pack/plugins/start/ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsError(buffer, lines) abort$/;"	f
ale#handlers#unix#HandleAsWarning	vim/pack/plugins/start/ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsWarning(buffer, lines) abort$/;"	f
ale#handlers#vale#GetType	vim/pack/plugins/start/ale/autoload/ale/handlers/vale.vim	/^function! ale#handlers#vale#GetType(severity) abort$/;"	f
ale#handlers#vale#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/vale.vim	/^function! ale#handlers#vale#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#DefineLinter	vim/pack/plugins/start/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#DefineLinter(filetype) abort$/;"	f
ale#handlers#writegood#GetCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetCommand(buffer) abort$/;"	f
ale#handlers#writegood#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetExecutable(buffer) abort$/;"	f
ale#handlers#writegood#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#ResetOptions	vim/pack/plugins/start/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#ResetOptions() abort$/;"	f
ale#handlers#xo#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetExecutable(buffer) abort$/;"	f
ale#handlers#xo#GetLintCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetLintCommand(buffer) abort$/;"	f
ale#handlers#xo#GetOptions	vim/pack/plugins/start/ale/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetOptions(buffer) abort$/;"	f
ale#handlers#xo#GetType	vim/pack/plugins/start/ale/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetType(buffer) abort$/;"	f
ale#handlers#xo#HandleJSON	vim/pack/plugins/start/ale/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#HandleJSON(buffer, lines) abort$/;"	f
ale#handlers#yamllint#GetCommand	vim/pack/plugins/start/ale/autoload/ale/handlers/yamllint.vim	/^function! ale#handlers#yamllint#GetCommand(buffer) abort$/;"	f
ale#handlers#yamllint#Handle	vim/pack/plugins/start/ale/autoload/ale/handlers/yamllint.vim	/^function! ale#handlers#yamllint#Handle(buffer, lines) abort$/;"	f
ale#highlight#BufferHidden	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^function! ale#highlight#BufferHidden(buffer) abort$/;"	f
ale#highlight#CreatePositions	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^function! ale#highlight#CreatePositions(line, col, end_line, end_col) abort$/;"	f
ale#highlight#RemoveHighlights	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^function! ale#highlight#RemoveHighlights() abort$/;"	f
ale#highlight#SetHighlights	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^function! ale#highlight#SetHighlights(buffer, loclist) abort$/;"	f
ale#highlight#UpdateHighlights	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^function! ale#highlight#UpdateHighlights() abort$/;"	f
ale#highlight#nvim_buf_add_highlight	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^function! ale#highlight#nvim_buf_add_highlight(buffer, ns_id, hl_group, line, col_start, col_end) abort$/;"	f
ale#highlight#nvim_buf_clear_namespace	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^function! ale#highlight#nvim_buf_clear_namespace(buffer, ns_id, line_start, line_end) abort$/;"	f
ale#history#Add	vim/pack/plugins/start/ale/autoload/ale/history.vim	/^function! ale#history#Add(buffer, status, job_id, command) abort$/;"	f
ale#history#Get	vim/pack/plugins/start/ale/autoload/ale/history.vim	/^function! ale#history#Get(buffer) abort$/;"	f
ale#history#RememberOutput	vim/pack/plugins/start/ale/autoload/ale/history.vim	/^function! ale#history#RememberOutput(buffer, job_id, output) abort$/;"	f
ale#history#SetExitCode	vim/pack/plugins/start/ale/autoload/ale/history.vim	/^function! ale#history#SetExitCode(buffer, job_id, exit_code) abort$/;"	f
ale#hover#ClearLSPData	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! ale#hover#ClearLSPData() abort$/;"	f
ale#hover#GetMap	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! ale#hover#GetMap() abort$/;"	f
ale#hover#HandleLSPResponse	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! ale#hover#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#hover#HandleTSServerResponse	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! ale#hover#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#hover#ParseLSPResult	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! ale#hover#ParseLSPResult(contents) abort$/;"	f
ale#hover#SetMap	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! ale#hover#SetMap(map) abort$/;"	f
ale#hover#Show	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! ale#hover#Show(buffer, line, col, opt) abort$/;"	f
ale#hover#ShowAtCursor	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! ale#hover#ShowAtCursor() abort$/;"	f
ale#hover#ShowDocumentationAtCursor	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! ale#hover#ShowDocumentationAtCursor() abort$/;"	f
ale#hover#ShowTruncatedMessageAtCursor	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^function! ale#hover#ShowTruncatedMessageAtCursor() abort$/;"	f
ale#java#FindProjectRoot	vim/pack/plugins/start/ale/autoload/ale/java.vim	/^function! ale#java#FindProjectRoot(buffer) abort$/;"	f
ale#job#HasOpenChannel	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! ale#job#HasOpenChannel(job_id) abort$/;"	f
ale#job#IsRunning	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! ale#job#IsRunning(job_id) abort$/;"	f
ale#job#ParseVim8ProcessID	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! ale#job#ParseVim8ProcessID(job_string) abort$/;"	f
ale#job#PrepareCommand	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! ale#job#PrepareCommand(buffer, command) abort$/;"	f
ale#job#SendRaw	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! ale#job#SendRaw(job_id, string) abort$/;"	f
ale#job#Start	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! ale#job#Start(command, options) abort$/;"	f
ale#job#StartWithCmd	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! ale#job#StartWithCmd(command, options) abort$/;"	f
ale#job#Stop	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! ale#job#Stop(job_id) abort$/;"	f
ale#job#ValidateArguments	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^function! ale#job#ValidateArguments(command, options) abort$/;"	f
ale#julia#FindProjectRoot	vim/pack/plugins/start/ale/autoload/ale/julia.vim	/^function! ale#julia#FindProjectRoot(buffer) abort$/;"	f
ale#linter#Define	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#Define(filetype, linter) abort$/;"	f
ale#linter#Get	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#Get(original_filetypes) abort$/;"	f
ale#linter#GetAddress	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#GetAddress(buffer, linter) abort$/;"	f
ale#linter#GetAll	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#GetAll(filetypes) abort$/;"	f
ale#linter#GetCommand	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#GetCommand(buffer, linter) abort$/;"	f
ale#linter#GetCwd	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#GetCwd(buffer, linter) abort$/;"	f
ale#linter#GetExecutable	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#GetExecutable(buffer, linter) abort$/;"	f
ale#linter#GetLanguage	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#GetLanguage(buffer, linter) abort$/;"	f
ale#linter#GetLintersLoaded	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#GetLintersLoaded() abort$/;"	f
ale#linter#PreProcess	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#PreProcess(filetype, linter) abort$/;"	f
ale#linter#PreventLoading	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#PreventLoading(filetype) abort$/;"	f
ale#linter#RemoveIgnored	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#RemoveIgnored(buffer, filetype, linters) abort$/;"	f
ale#linter#Reset	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#Reset() abort$/;"	f
ale#linter#ResolveFiletype	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^function! ale#linter#ResolveFiletype(original_filetype) abort$/;"	f
ale#list#GetCombinedList	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^function! ale#list#GetCombinedList() abort$/;"	f
ale#list#IsQuickfixOpen	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^function! ale#list#IsQuickfixOpen() abort$/;"	f
ale#list#SetLists	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^function! ale#list#SetLists(buffer, loclist) abort$/;"	f
ale#loclist_jumping#FindNearest	vim/pack/plugins/start/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#FindNearest(direction, wrap, ...) abort$/;"	f
ale#loclist_jumping#Jump	vim/pack/plugins/start/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#Jump(direction, ...) abort$/;"	f
ale#loclist_jumping#JumpToIndex	vim/pack/plugins/start/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#JumpToIndex(index) abort$/;"	f
ale#loclist_jumping#WrapJump	vim/pack/plugins/start/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#WrapJump(direction, sargs) abort$/;"	f
ale#lsp#CloseDocument	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#CloseDocument(buffer) abort$/;"	f
ale#lsp#CloseDocument	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#CloseDocument(conn_id) abort$/;"	f
ale#lsp#ConnectToAddress	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ConnectToAddress(conn_id, address) abort$/;"	f
ale#lsp#CreateMessageData	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#CreateMessageData(message) abort$/;"	f
ale#lsp#GetConnections	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetConnections() abort$/;"	f
ale#lsp#GetNextMessageID	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetNextMessageID() abort$/;"	f
ale#lsp#HandleInitResponse	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleInitResponse(conn, response) abort$/;"	f
ale#lsp#HandleMessage	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleMessage(conn_id, message) abort$/;"	f
ale#lsp#HasCapability	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HasCapability(conn_id, capability) abort$/;"	f
ale#lsp#MarkConnectionAsTsserver	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#MarkConnectionAsTsserver(conn_id) abort$/;"	f
ale#lsp#MarkDocumentAsOpen	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#MarkDocumentAsOpen(id, buffer) abort$/;"	f
ale#lsp#NotifyForChanges	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#NotifyForChanges(conn_id, buffer) abort$/;"	f
ale#lsp#OnInit	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#OnInit(conn_id, Callback) abort$/;"	f
ale#lsp#OpenDocument	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#OpenDocument(conn_id, buffer, language_id) abort$/;"	f
ale#lsp#ReadMessageData	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ReadMessageData(data) abort$/;"	f
ale#lsp#Register	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Register(executable_or_address, project, init_options) abort$/;"	f
ale#lsp#RegisterCallback	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#RegisterCallback(conn_id, callback) abort$/;"	f
ale#lsp#RemoveConnectionWithID	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#RemoveConnectionWithID(id) abort$/;"	f
ale#lsp#ResetConnections	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ResetConnections() abort$/;"	f
ale#lsp#Send	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Send(conn_id, message) abort$/;"	f
ale#lsp#StartProgram	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#StartProgram(conn_id, executable, command) abort$/;"	f
ale#lsp#Stop	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Stop(conn_id) abort$/;"	f
ale#lsp#StopAll	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#StopAll() abort$/;"	f
ale#lsp#UpdateConfig	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^function! ale#lsp#UpdateConfig(conn_id, buffer, config) abort$/;"	f
ale#lsp#message#CodeAction	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#CodeAction(buffer, line, column, end_line, end_column, diagnostics) abort$/;"	f
ale#lsp#message#Completion	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Completion(buffer, line, column, trigger_character) abort$/;"	f
ale#lsp#message#Definition	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#message#DidChange	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChange(buffer) abort$/;"	f
ale#lsp#message#DidChangeConfiguration	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChangeConfiguration(buffer, config) abort$/;"	f
ale#lsp#message#DidClose	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidClose(buffer) abort$/;"	f
ale#lsp#message#DidOpen	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidOpen(buffer, language_id) abort$/;"	f
ale#lsp#message#DidSave	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidSave(buffer) abort$/;"	f
ale#lsp#message#ExecuteCommand	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#ExecuteCommand(command, arguments) abort$/;"	f
ale#lsp#message#Exit	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Exit() abort$/;"	f
ale#lsp#message#GetNextVersionID	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#GetNextVersionID() abort$/;"	f
ale#lsp#message#Hover	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Hover(buffer, line, column) abort$/;"	f
ale#lsp#message#Initialize	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialize(root_path, options, capabilities) abort$/;"	f
ale#lsp#message#Initialized	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialized() abort$/;"	f
ale#lsp#message#References	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#References(buffer, line, column) abort$/;"	f
ale#lsp#message#Rename	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Rename(buffer, line, column, new_name) abort$/;"	f
ale#lsp#message#Shutdown	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Shutdown() abort$/;"	f
ale#lsp#message#Symbol	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Symbol(query) abort$/;"	f
ale#lsp#message#TypeDefinition	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#TypeDefinition(buffer, line, column) abort$/;"	f
ale#lsp#reset#StopAllLSPs	vim/pack/plugins/start/ale/autoload/ale/lsp/reset.vim	/^function! ale#lsp#reset#StopAllLSPs() abort$/;"	f
ale#lsp#response#GetErrorMessage	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#GetErrorMessage(response) abort$/;"	f
ale#lsp#response#ReadDiagnostics	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadDiagnostics(response) abort$/;"	f
ale#lsp#response#ReadTSServerDiagnostics	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadTSServerDiagnostics(response) abort$/;"	f
ale#lsp#tsserver_message#Change	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Change(buffer) abort$/;"	f
ale#lsp#tsserver_message#Close	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Close(buffer) abort$/;"	f
ale#lsp#tsserver_message#CompletionEntryDetails	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#CompletionEntryDetails(buffer, line, column, entry_names) abort$/;"	f
ale#lsp#tsserver_message#Completions	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Completions($/;"	f
ale#lsp#tsserver_message#Definition	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#GetApplicableRefactors	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetApplicableRefactors(buffer, line, column, end_line, end_column) abort$/;"	f
ale#lsp#tsserver_message#GetCodeFixes	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetCodeFixes(buffer, line, column, end_line, end_column, error_codes) abort$/;"	f
ale#lsp#tsserver_message#GetEditsForRefactor	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetEditsForRefactor(buffer, line, column, end_line, end_column, refactor, action) abort$/;"	f
ale#lsp#tsserver_message#Geterr	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Geterr(buffer) abort$/;"	f
ale#lsp#tsserver_message#Open	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Open(buffer) abort$/;"	f
ale#lsp#tsserver_message#OrganizeImports	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#OrganizeImports(buffer) abort$/;"	f
ale#lsp#tsserver_message#Quickinfo	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Quickinfo(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#References	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#References(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#Rename	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Rename($/;"	f
ale#lsp#tsserver_message#TypeDefinition	vim/pack/plugins/start/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#TypeDefinition(buffer, line, column) abort$/;"	f
ale#lsp_linter#CheckWithLSP	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#CheckWithLSP(buffer, linter) abort$/;"	f
ale#lsp_linter#ClearLSPData	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#ClearLSPData() abort$/;"	f
ale#lsp_linter#FindProjectRoot	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#FindProjectRoot(buffer, linter) abort$/;"	f
ale#lsp_linter#GetConfig	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#GetConfig(buffer, linter) abort$/;"	f
ale#lsp_linter#GetOptions	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#GetOptions(buffer, linter) abort$/;"	f
ale#lsp_linter#HandleLSPResponse	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#lsp_linter#OnInit	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#OnInit(linter, details, Callback) abort$/;"	f
ale#lsp_linter#SendRequest	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#SendRequest(buffer, linter_name, message, ...) abort$/;"	f
ale#lsp_linter#SetLSPLinterMap	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#SetLSPLinterMap(replacement_map) abort$/;"	f
ale#lsp_linter#StartLSP	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#StartLSP(buffer, linter, Callback) abort$/;"	f
ale#lsp_window#HandleShowMessage	vim/pack/plugins/start/ale/autoload/ale/lsp_window.vim	/^function! ale#lsp_window#HandleShowMessage(linter_name, format, params) abort$/;"	f
ale#maven#BuildClasspathCommand	vim/pack/plugins/start/ale/autoload/ale/maven.vim	/^function! ale#maven#BuildClasspathCommand(buffer) abort$/;"	f
ale#maven#FindExecutable	vim/pack/plugins/start/ale/autoload/ale/maven.vim	/^function! ale#maven#FindExecutable(buffer) abort$/;"	f
ale#maven#FindProjectRoot	vim/pack/plugins/start/ale/autoload/ale/maven.vim	/^function! ale#maven#FindProjectRoot(buffer) abort$/;"	f
ale#node#Executable	vim/pack/plugins/start/ale/autoload/ale/node.vim	/^function! ale#node#Executable(buffer, executable) abort$/;"	f
ale#node#FindExecutable	vim/pack/plugins/start/ale/autoload/ale/node.vim	/^function! ale#node#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#node#FindNearestExecutable	vim/pack/plugins/start/ale/autoload/ale/node.vim	/^function! ale#node#FindNearestExecutable(buffer, path_list) abort$/;"	f
ale#organize_imports#Execute	vim/pack/plugins/start/ale/autoload/ale/organize_imports.vim	/^function! ale#organize_imports#Execute() abort$/;"	f
ale#organize_imports#HandleTSServerResponse	vim/pack/plugins/start/ale/autoload/ale/organize_imports.vim	/^function! ale#organize_imports#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#other_source#ShowResults	vim/pack/plugins/start/ale/autoload/ale/other_source.vim	/^function! ale#other_source#ShowResults(buffer, linter_name, loclist) abort$/;"	f
ale#other_source#StartChecking	vim/pack/plugins/start/ale/autoload/ale/other_source.vim	/^function! ale#other_source#StartChecking(buffer, linter_name) abort$/;"	f
ale#path#Dirname	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#Dirname(path) abort$/;"	f
ale#path#FindNearestDirectory	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#FindNearestDirectory(buffer, directory_name) abort$/;"	f
ale#path#FindNearestFile	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#FindNearestFile(buffer, filename) abort$/;"	f
ale#path#FromURI	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#FromURI(uri) abort$/;"	f
ale#path#GetAbsPath	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#GetAbsPath(base_directory, filename) abort$/;"	f
ale#path#IsAbsolute	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#IsAbsolute(filename) abort$/;"	f
ale#path#IsBufferPath	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#IsBufferPath(buffer, complex_filename) abort$/;"	f
ale#path#IsTempName	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#IsTempName(filename) abort$/;"	f
ale#path#RemoveDriveLetter	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#RemoveDriveLetter(path) abort$/;"	f
ale#path#ResolveLocalPath	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#ResolveLocalPath(buffer, search_string, global_fallback) abort$/;"	f
ale#path#Simplify	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#Simplify(path) abort$/;"	f
ale#path#ToURI	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#ToURI(path) abort$/;"	f
ale#path#Upwards	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^function! ale#path#Upwards(path) abort$/;"	f
ale#pattern_options#SetOptions	vim/pack/plugins/start/ale/autoload/ale/pattern_options.vim	/^function! ale#pattern_options#SetOptions(buffer) abort$/;"	f
ale#powershell#RunPowerShell	vim/pack/plugins/start/ale/autoload/ale/powershell.vim	/^function! ale#powershell#RunPowerShell(buffer, base_var_name, command) abort$/;"	f
ale#preview#CloseIfTypeMatches	vim/pack/plugins/start/ale/autoload/ale/preview.vim	/^function! ale#preview#CloseIfTypeMatches(filetype) abort$/;"	f
ale#preview#OpenSelection	vim/pack/plugins/start/ale/autoload/ale/preview.vim	/^function! ale#preview#OpenSelection() abort$/;"	f
ale#preview#OpenSelectionInTab	vim/pack/plugins/start/ale/autoload/ale/preview.vim	/^function! ale#preview#OpenSelectionInTab() abort$/;"	f
ale#preview#RepeatSelection	vim/pack/plugins/start/ale/autoload/ale/preview.vim	/^function! ale#preview#RepeatSelection() abort$/;"	f
ale#preview#SetLastSelection	vim/pack/plugins/start/ale/autoload/ale/preview.vim	/^function! ale#preview#SetLastSelection(item_list, options) abort$/;"	f
ale#preview#Show	vim/pack/plugins/start/ale/autoload/ale/preview.vim	/^function! ale#preview#Show(lines, ...) abort$/;"	f
ale#preview#ShowSelection	vim/pack/plugins/start/ale/autoload/ale/preview.vim	/^function! ale#preview#ShowSelection(item_list, ...) abort$/;"	f
ale#python#FindExecutable	vim/pack/plugins/start/ale/autoload/ale/python.vim	/^function! ale#python#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#python#FindProjectRoot	vim/pack/plugins/start/ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRoot(buffer) abort$/;"	f
ale#python#FindProjectRootIni	vim/pack/plugins/start/ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRootIni(buffer) abort$/;"	f
ale#python#FindVirtualenv	vim/pack/plugins/start/ale/autoload/ale/python.vim	/^function! ale#python#FindVirtualenv(buffer) abort$/;"	f
ale#python#HandleTraceback	vim/pack/plugins/start/ale/autoload/ale/python.vim	/^function! ale#python#HandleTraceback(lines, limit) abort$/;"	f
ale#python#PipenvPresent	vim/pack/plugins/start/ale/autoload/ale/python.vim	/^function! ale#python#PipenvPresent(buffer) abort$/;"	f
ale#references#ClearLSPData	vim/pack/plugins/start/ale/autoload/ale/references.vim	/^function! ale#references#ClearLSPData() abort$/;"	f
ale#references#Find	vim/pack/plugins/start/ale/autoload/ale/references.vim	/^function! ale#references#Find(...) abort$/;"	f
ale#references#GetMap	vim/pack/plugins/start/ale/autoload/ale/references.vim	/^function! ale#references#GetMap() abort$/;"	f
ale#references#HandleLSPResponse	vim/pack/plugins/start/ale/autoload/ale/references.vim	/^function! ale#references#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#references#HandleTSServerResponse	vim/pack/plugins/start/ale/autoload/ale/references.vim	/^function! ale#references#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#references#SetMap	vim/pack/plugins/start/ale/autoload/ale/references.vim	/^function! ale#references#SetMap(map) abort$/;"	f
ale#rename#ClearLSPData	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^function! ale#rename#ClearLSPData() abort$/;"	f
ale#rename#Execute	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^function! ale#rename#Execute() abort$/;"	f
ale#rename#GetMap	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^function! ale#rename#GetMap() abort$/;"	f
ale#rename#HandleLSPResponse	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^function! ale#rename#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#rename#HandleTSServerResponse	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^function! ale#rename#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#rename#SetMap	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^function! ale#rename#SetMap(map) abort$/;"	f
ale#ruby#EscapeExecutable	vim/pack/plugins/start/ale/autoload/ale/ruby.vim	/^function! ale#ruby#EscapeExecutable(executable, bundle_exec) abort$/;"	f
ale#ruby#FindProjectRoot	vim/pack/plugins/start/ale/autoload/ale/ruby.vim	/^function! ale#ruby#FindProjectRoot(buffer) abort$/;"	f
ale#ruby#FindRailsRoot	vim/pack/plugins/start/ale/autoload/ale/ruby.vim	/^function! ale#ruby#FindRailsRoot(buffer) abort$/;"	f
ale#ruby#HandleRubocopOutput	vim/pack/plugins/start/ale/autoload/ale/ruby.vim	/^function! ale#ruby#HandleRubocopOutput(buffer, lines) abort$/;"	f
ale#semver#GTE	vim/pack/plugins/start/ale/autoload/ale/semver.vim	/^function! ale#semver#GTE(lhs, rhs) abort$/;"	f
ale#semver#ParseVersion	vim/pack/plugins/start/ale/autoload/ale/semver.vim	/^function! ale#semver#ParseVersion(version_lines) abort$/;"	f
ale#semver#ResetVersionCache	vim/pack/plugins/start/ale/autoload/ale/semver.vim	/^function! ale#semver#ResetVersionCache() abort$/;"	f
ale#semver#RunWithVersionCheck	vim/pack/plugins/start/ale/autoload/ale/semver.vim	/^function! ale#semver#RunWithVersionCheck(buffer, executable, command, Callback) abort$/;"	f
ale#sign#Clear	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! ale#sign#Clear() abort$/;"	f
ale#sign#FindCurrentSigns	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! ale#sign#FindCurrentSigns(buffer) abort$/;"	f
ale#sign#GetSignCommands	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignCommands(buffer, was_sign_set, sign_map) abort$/;"	f
ale#sign#GetSignName	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignName(sublist) abort$/;"	f
ale#sign#ParsePattern	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! ale#sign#ParsePattern() abort$/;"	f
ale#sign#ParseSigns	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! ale#sign#ParseSigns(line_list) abort$/;"	f
ale#sign#ReadSigns	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! ale#sign#ReadSigns(buffer) abort$/;"	f
ale#sign#SetSigns	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! ale#sign#SetSigns(buffer, loclist) abort$/;"	f
ale#sign#SetUpDefaultColumnWithoutErrorsHighlight	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^function! ale#sign#SetUpDefaultColumnWithoutErrorsHighlight() abort$/;"	f
ale#socket#Close	vim/pack/plugins/start/ale/autoload/ale/socket.vim	/^function! ale#socket#Close(channel_id) abort$/;"	f
ale#socket#GetAddress	vim/pack/plugins/start/ale/autoload/ale/socket.vim	/^function! ale#socket#GetAddress(channel_id) abort$/;"	f
ale#socket#IsOpen	vim/pack/plugins/start/ale/autoload/ale/socket.vim	/^function! ale#socket#IsOpen(channel_id) abort$/;"	f
ale#socket#Open	vim/pack/plugins/start/ale/autoload/ale/socket.vim	/^function! ale#socket#Open(address, options) abort$/;"	f
ale#socket#Send	vim/pack/plugins/start/ale/autoload/ale/socket.vim	/^function! ale#socket#Send(channel_id, data) abort$/;"	f
ale#statusline#Count	vim/pack/plugins/start/ale/autoload/ale/statusline.vim	/^function! ale#statusline#Count(buffer) abort$/;"	f
ale#statusline#FirstProblem	vim/pack/plugins/start/ale/autoload/ale/statusline.vim	/^function! ale#statusline#FirstProblem(buffer, type) abort$/;"	f
ale#statusline#Update	vim/pack/plugins/start/ale/autoload/ale/statusline.vim	/^function! ale#statusline#Update(buffer, loclist) abort$/;"	f
ale#swift#FindProjectRoot	vim/pack/plugins/start/ale/autoload/ale/swift.vim	/^function! ale#swift#FindProjectRoot(buffer) abort$/;"	f
ale#swift#GetAppleSwiftFormatCommand	vim/pack/plugins/start/ale/autoload/ale/swift.vim	/^function! ale#swift#GetAppleSwiftFormatCommand(buffer) abort$/;"	f
ale#swift#GetAppleSwiftFormatConfigArgs	vim/pack/plugins/start/ale/autoload/ale/swift.vim	/^function! ale#swift#GetAppleSwiftFormatConfigArgs(buffer) abort$/;"	f
ale#swift#GetAppleSwiftFormatExecutable	vim/pack/plugins/start/ale/autoload/ale/swift.vim	/^function! ale#swift#GetAppleSwiftFormatExecutable(buffer) abort$/;"	f
ale#symbol#ClearLSPData	vim/pack/plugins/start/ale/autoload/ale/symbol.vim	/^function! ale#symbol#ClearLSPData() abort$/;"	f
ale#symbol#GetMap	vim/pack/plugins/start/ale/autoload/ale/symbol.vim	/^function! ale#symbol#GetMap() abort$/;"	f
ale#symbol#HandleLSPResponse	vim/pack/plugins/start/ale/autoload/ale/symbol.vim	/^function! ale#symbol#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#symbol#Search	vim/pack/plugins/start/ale/autoload/ale/symbol.vim	/^function! ale#symbol#Search(args) abort$/;"	f
ale#symbol#SetMap	vim/pack/plugins/start/ale/autoload/ale/symbol.vim	/^function! ale#symbol#SetMap(map) abort$/;"	f
ale#test#FlushJobs	vim/pack/plugins/start/ale/autoload/ale/test.vim	/^function! ale#test#FlushJobs() abort$/;"	f
ale#test#GetFilename	vim/pack/plugins/start/ale/autoload/ale/test.vim	/^function! ale#test#GetFilename(path) abort$/;"	f
ale#test#GetLoclistWithoutModule	vim/pack/plugins/start/ale/autoload/ale/test.vim	/^function! ale#test#GetLoclistWithoutModule() abort$/;"	f
ale#test#GetPreviewWindowText	vim/pack/plugins/start/ale/autoload/ale/test.vim	/^function! ale#test#GetPreviewWindowText() abort$/;"	f
ale#test#GetQflistWithoutModule	vim/pack/plugins/start/ale/autoload/ale/test.vim	/^function! ale#test#GetQflistWithoutModule() abort$/;"	f
ale#test#RestoreDirectory	vim/pack/plugins/start/ale/autoload/ale/test.vim	/^function! ale#test#RestoreDirectory() abort$/;"	f
ale#test#SetDirectory	vim/pack/plugins/start/ale/autoload/ale/test.vim	/^function! ale#test#SetDirectory(docker_path) abort$/;"	f
ale#test#SetFilename	vim/pack/plugins/start/ale/autoload/ale/test.vim	/^function! ale#test#SetFilename(path) abort$/;"	f
ale#test#WaitForJobs	vim/pack/plugins/start/ale/autoload/ale/test.vim	/^function! ale#test#WaitForJobs(deadline) abort$/;"	f
ale#toggle#Disable	vim/pack/plugins/start/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Disable() abort$/;"	f
ale#toggle#DisableBuffer	vim/pack/plugins/start/ale/autoload/ale/toggle.vim	/^function! ale#toggle#DisableBuffer(buffer) abort$/;"	f
ale#toggle#Enable	vim/pack/plugins/start/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Enable() abort$/;"	f
ale#toggle#EnableBuffer	vim/pack/plugins/start/ale/autoload/ale/toggle.vim	/^function! ale#toggle#EnableBuffer(buffer) abort$/;"	f
ale#toggle#Reset	vim/pack/plugins/start/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Reset() abort$/;"	f
ale#toggle#ResetBuffer	vim/pack/plugins/start/ale/autoload/ale/toggle.vim	/^function! ale#toggle#ResetBuffer(buffer) abort$/;"	f
ale#toggle#Toggle	vim/pack/plugins/start/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Toggle() abort$/;"	f
ale#toggle#ToggleBuffer	vim/pack/plugins/start/ale/autoload/ale/toggle.vim	/^function! ale#toggle#ToggleBuffer(buffer) abort$/;"	f
ale#uri#Decode	vim/pack/plugins/start/ale/autoload/ale/uri.vim	/^function! ale#uri#Decode(value) abort$/;"	f
ale#uri#Encode	vim/pack/plugins/start/ale/autoload/ale/uri.vim	/^function! ale#uri#Encode(value) abort$/;"	f
ale#util#BinarySearch	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#BinarySearch(loclist, buffer, line, column) abort$/;"	f
ale#util#Col	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#Col(str, chr) abort$/;"	f
ale#util#EscapePCRE	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#EscapePCRE(unsafe_string) abort$/;"	f
ale#util#EscapeVim	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#EscapeVim(unsafe_string) abort$/;"	f
ale#util#Execute	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#Execute(expr) abort$/;"	f
ale#util#FeedKeys	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#FeedKeys(...) abort$/;"	f
ale#util#FindItemAtCursor	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#FindItemAtCursor(buffer) abort$/;"	f
ale#util#FunctionArgCount	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#FunctionArgCount(function) abort$/;"	f
ale#util#FuzzyJSONDecode	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#FuzzyJSONDecode(data, default) abort$/;"	f
ale#util#GetFunction	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#GetFunction(string_or_ref) abort$/;"	f
ale#util#GetItemPriority	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#GetItemPriority(item) abort$/;"	f
ale#util#GetLineCount	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#GetLineCount(buffer) abort$/;"	f
ale#util#GetMatches	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#GetMatches(lines, patterns) abort$/;"	f
ale#util#HasBuflineApi	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#HasBuflineApi() abort$/;"	f
ale#util#InSandbox	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#InSandbox() abort$/;"	f
ale#util#Input	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#Input(message, value) abort$/;"	f
ale#util#JoinNeovimOutput	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#JoinNeovimOutput(job, last_line, data, mode, callback) abort$/;"	f
ale#util#LocItemCompare	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompare(left, right) abort$/;"	f
ale#util#LocItemCompareWithText	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompareWithText(left, right) abort$/;"	f
ale#util#MapMatches	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#MapMatches(lines, patterns, Callback) abort$/;"	f
ale#util#Mode	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#Mode(...) abort$/;"	f
ale#util#Open	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#Open(filename, line, column, options) abort$/;"	f
ale#util#SetBufferContents	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#SetBufferContents(buffer, lines) abort$/;"	f
ale#util#ShowMessage	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#ShowMessage(string, ...) abort$/;"	f
ale#util#StartPartialTimer	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#StartPartialTimer(delay, callback, args) abort$/;"	f
ale#util#StopPartialTimer	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#StopPartialTimer(timer_id) abort$/;"	f
ale#util#Tempname	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#Tempname() abort$/;"	f
ale#util#Writefile	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^function! ale#util#Writefile(buffer, lines, filename) abort$/;"	f
ale#virtualtext#Clear	vim/pack/plugins/start/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#Clear() abort$/;"	f
ale#virtualtext#ShowCursorWarning	vim/pack/plugins/start/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowCursorWarning(...) abort$/;"	f
ale#virtualtext#ShowCursorWarningWithDelay	vim/pack/plugins/start/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowCursorWarningWithDelay() abort$/;"	f
ale#virtualtext#ShowMessage	vim/pack/plugins/start/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowMessage(message, hl_group) abort$/;"	f
ale_linters#ada#adals#GetAdaLSConfig	vim/pack/plugins/start/ale/ale_linters/ada/adals.vim	/^function! ale_linters#ada#adals#GetAdaLSConfig(buffer) abort$/;"	f
ale_linters#ada#adals#GetRootDirectory	vim/pack/plugins/start/ale/ale_linters/ada/adals.vim	/^function! ale_linters#ada#adals#GetRootDirectory(buffer) abort$/;"	f
ale_linters#ada#gcc#GetCommand	vim/pack/plugins/start/ale/ale_linters/ada/gcc.vim	/^function! ale_linters#ada#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#ada#gcc#Handle	vim/pack/plugins/start/ale/ale_linters/ada/gcc.vim	/^function! ale_linters#ada#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#ansible#ansible_lint#GetCommand	vim/pack/plugins/start/ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#GetCommand(buffer, version) abort$/;"	f
ale_linters#ansible#ansible_lint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#GetExecutable(buffer) abort$/;"	f
ale_linters#ansible#ansible_lint#Handle	vim/pack/plugins/start/ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#Handle(buffer, version, lines) abort$/;"	f
ale_linters#apiblueprint#drafter#HandleErrors	vim/pack/plugins/start/ale/ale_linters/apiblueprint/drafter.vim	/^function! ale_linters#apiblueprint#drafter#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#asm#gcc#GetCommand	vim/pack/plugins/start/ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#asm#gcc#Handle	vim/pack/plugins/start/ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#awk#gawk#GetCommand	vim/pack/plugins/start/ale/ale_linters/awk/gawk.vim	/^function! ale_linters#awk#gawk#GetCommand(buffer) abort$/;"	f
ale_linters#bib#bibclean#GetCommand	vim/pack/plugins/start/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#GetCommand(buffer) abort$/;"	f
ale_linters#bib#bibclean#Handle	vim/pack/plugins/start/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#Handle(buffer, lines) abort$/;"	f
ale_linters#bib#bibclean#get_type	vim/pack/plugins/start/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#get_type(str) abort$/;"	f
ale_linters#bib#bibclean#match_entry	vim/pack/plugins/start/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_entry(line) abort$/;"	f
ale_linters#bib#bibclean#match_msg	vim/pack/plugins/start/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_msg(line) abort$/;"	f
ale_linters#bib#bibclean#match_value	vim/pack/plugins/start/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_value(line) abort$/;"	f
ale_linters#c#cc#GetCommand	vim/pack/plugins/start/ale/ale_linters/c/cc.vim	/^function! ale_linters#c#cc#GetCommand(buffer, output) abort$/;"	f
ale_linters#c#cc#GetExecutable	vim/pack/plugins/start/ale/ale_linters/c/cc.vim	/^function! ale_linters#c#cc#GetExecutable(buffer) abort$/;"	f
ale_linters#c#clangd#GetCommand	vim/pack/plugins/start/ale/ale_linters/c/clangd.vim	/^function! ale_linters#c#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#c#clangtidy#GetCommand	vim/pack/plugins/start/ale/ale_linters/c/clangtidy.vim	/^function! ale_linters#c#clangtidy#GetCommand(buffer, output) abort$/;"	f
ale_linters#c#cppcheck#GetCommand	vim/pack/plugins/start/ale/ale_linters/c/cppcheck.vim	/^function! ale_linters#c#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#c#cquery#GetInitializationOptions	vim/pack/plugins/start/ale/ale_linters/c/cquery.vim	/^function! ale_linters#c#cquery#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#c#cquery#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/c/cquery.vim	/^function! ale_linters#c#cquery#GetProjectRoot(buffer) abort$/;"	f
ale_linters#c#flawfinder#GetCommand	vim/pack/plugins/start/ale/ale_linters/c/flawfinder.vim	/^function! ale_linters#c#flawfinder#GetCommand(buffer) abort$/;"	f
ale_linters#chef#cookstyle#GetCommand	vim/pack/plugins/start/ale/ale_linters/chef/cookstyle.vim	/^function! ale_linters#chef#cookstyle#GetCommand(buffer) abort$/;"	f
ale_linters#chef#cookstyle#Handle	vim/pack/plugins/start/ale/ale_linters/chef/cookstyle.vim	/^function! ale_linters#chef#cookstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#chef#foodcritic#GetCommand	vim/pack/plugins/start/ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#GetCommand(buffer) abort$/;"	f
ale_linters#chef#foodcritic#Handle	vim/pack/plugins/start/ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#clojure#clj_kondo#HandleCljKondoFormat	vim/pack/plugins/start/ale/ale_linters/clojure/clj_kondo.vim	/^function! ale_linters#clojure#clj_kondo#HandleCljKondoFormat(buffer, lines) abort$/;"	f
ale_linters#clojure#joker#HandleJokerFormat	vim/pack/plugins/start/ale/ale_linters/clojure/joker.vim	/^function! ale_linters#clojure#joker#HandleJokerFormat(buffer, lines) abort$/;"	f
ale_linters#cloudformation#cfn_python_lint#Handle	vim/pack/plugins/start/ale/ale_linters/cloudformation/cfn_python_lint.vim	/^function! ale_linters#cloudformation#cfn_python_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#cmake#cmakelint#Command	vim/pack/plugins/start/ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Command(buffer) abort$/;"	f
ale_linters#cmake#cmakelint#Executable	vim/pack/plugins/start/ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Executable(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetCommand	vim/pack/plugins/start/ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetExecutable	vim/pack/plugins/start/ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetCommand	vim/pack/plugins/start/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#Handle	vim/pack/plugins/start/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#Handle(buffer, lines) abort$/;"	f
ale_linters#cpp#cc#GetCommand	vim/pack/plugins/start/ale/ale_linters/cpp/cc.vim	/^function! ale_linters#cpp#cc#GetCommand(buffer, output) abort$/;"	f
ale_linters#cpp#cc#GetExecutable	vim/pack/plugins/start/ale/ale_linters/cpp/cc.vim	/^function! ale_linters#cpp#cc#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#clangcheck#GetCommand	vim/pack/plugins/start/ale/ale_linters/cpp/clangcheck.vim	/^function! ale_linters#cpp#clangcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangd#GetCommand	vim/pack/plugins/start/ale/ale_linters/cpp/clangd.vim	/^function! ale_linters#cpp#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangtidy#GetCommand	vim/pack/plugins/start/ale/ale_linters/cpp/clangtidy.vim	/^function! ale_linters#cpp#clangtidy#GetCommand(buffer, output) abort$/;"	f
ale_linters#cpp#clazy#GetCommand	vim/pack/plugins/start/ale/ale_linters/cpp/clazy.vim	/^function! ale_linters#cpp#clazy#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cppcheck#GetCommand	vim/pack/plugins/start/ale/ale_linters/cpp/cppcheck.vim	/^function! ale_linters#cpp#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cpplint#GetCommand	vim/pack/plugins/start/ale/ale_linters/cpp/cpplint.vim	/^function! ale_linters#cpp#cpplint#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cquery#GetInitializationOptions	vim/pack/plugins/start/ale/ale_linters/cpp/cquery.vim	/^function! ale_linters#cpp#cquery#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#cpp#cquery#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/cpp/cquery.vim	/^function! ale_linters#cpp#cquery#GetProjectRoot(buffer) abort$/;"	f
ale_linters#cpp#flawfinder#GetCommand	vim/pack/plugins/start/ale/ale_linters/cpp/flawfinder.vim	/^function! ale_linters#cpp#flawfinder#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#ameba#GetCommand	vim/pack/plugins/start/ale/ale_linters/crystal/ameba.vim	/^function! ale_linters#crystal#ameba#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#ameba#HandleAmebaOutput	vim/pack/plugins/start/ale/ale_linters/crystal/ameba.vim	/^function! ale_linters#crystal#ameba#HandleAmebaOutput(buffer, lines) abort$/;"	f
ale_linters#crystal#crystal#GetCommand	vim/pack/plugins/start/ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#crystal#Handle	vim/pack/plugins/start/ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#csc#GetCommand	vim/pack/plugins/start/ale/ale_linters/cs/csc.vim	/^function! ale_linters#cs#csc#GetCommand(buffer) abort$/;"	f
ale_linters#cs#csc#GetCwd	vim/pack/plugins/start/ale/ale_linters/cs/csc.vim	/^function! ale_linters#cs#csc#GetCwd(buffer) abort$/;"	f
ale_linters#cs#csc#Handle	vim/pack/plugins/start/ale/ale_linters/cs/csc.vim	/^function! ale_linters#cs#csc#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcs#GetCommand	vim/pack/plugins/start/ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcs#Handle	vim/pack/plugins/start/ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcsc#GetCommand	vim/pack/plugins/start/ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcsc#GetCwd	vim/pack/plugins/start/ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#GetCwd(buffer) abort$/;"	f
ale_linters#cs#mcsc#Handle	vim/pack/plugins/start/ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#Handle(buffer, lines) abort$/;"	f
ale_linters#css#csslint#GetCommand	vim/pack/plugins/start/ale/ale_linters/css/csslint.vim	/^function! ale_linters#css#csslint#GetCommand(buffer) abort$/;"	f
ale_linters#css#stylelint#GetCommand	vim/pack/plugins/start/ale/ale_linters/css/stylelint.vim	/^function! ale_linters#css#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#cucumber#cucumber#GetCommand	vim/pack/plugins/start/ale/ale_linters/cucumber/cucumber.vim	/^function! ale_linters#cucumber#cucumber#GetCommand(buffer) abort$/;"	f
ale_linters#cucumber#cucumber#Handle	vim/pack/plugins/start/ale/ale_linters/cucumber/cucumber.vim	/^function! ale_linters#cucumber#cucumber#Handle(buffer, lines) abort$/;"	f
ale_linters#cuda#clangd#GetCommand	vim/pack/plugins/start/ale/ale_linters/cuda/clangd.vim	/^function! ale_linters#cuda#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#cuda#nvcc#GetCommand	vim/pack/plugins/start/ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#GetCommand(buffer) abort$/;"	f
ale_linters#cuda#nvcc#HandleNVCCFormat	vim/pack/plugins/start/ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#HandleNVCCFormat(buffer, lines) abort$/;"	f
ale_linters#cypher#cypher_lint#Handle	vim/pack/plugins/start/ale/ale_linters/cypher/cypher_lint.vim	/^function! ale_linters#cypher#cypher_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#d#dls#FindProjectRoot	vim/pack/plugins/start/ale/ale_linters/d/dls.vim	/^function! ale_linters#d#dls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#d#dls#GetExecutable	vim/pack/plugins/start/ale/ale_linters/d/dls.vim	/^function! ale_linters#d#dls#GetExecutable(buffer) abort$/;"	f
ale_linters#d#dmd#DMDCommand	vim/pack/plugins/start/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#DMDCommand(buffer, dub_output, meta) abort$/;"	f
ale_linters#d#dmd#Handle	vim/pack/plugins/start/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#Handle(buffer, lines) abort$/;"	f
ale_linters#d#dmd#RunDUBCommand	vim/pack/plugins/start/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#RunDUBCommand(buffer) abort$/;"	f
ale_linters#dafny#dafny#GetCommand	vim/pack/plugins/start/ale/ale_linters/dafny/dafny.vim	/^function! ale_linters#dafny#dafny#GetCommand(buffer) abort$/;"	f
ale_linters#dafny#dafny#Handle	vim/pack/plugins/start/ale/ale_linters/dafny/dafny.vim	/^function! ale_linters#dafny#dafny#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#analysis_server#GetCommand	vim/pack/plugins/start/ale/ale_linters/dart/analysis_server.vim	/^function! ale_linters#dart#analysis_server#GetCommand(buffer) abort$/;"	f
ale_linters#dart#analysis_server#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/dart/analysis_server.vim	/^function! ale_linters#dart#analysis_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#dart#dartanalyzer#GetCommand	vim/pack/plugins/start/ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#GetCommand(buffer) abort$/;"	f
ale_linters#dart#dartanalyzer#Handle	vim/pack/plugins/start/ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#language_server#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/dart/language_server.vim	/^function! ale_linters#dart#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#desktop#desktop_file_validate#Handle	vim/pack/plugins/start/ale/ale_linters/desktop/desktop_file_validate.vim	/^function! ale_linters#desktop#desktop_file_validate#Handle(buffer, lines) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#GetCommand	vim/pack/plugins/start/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#GetType	vim/pack/plugins/start/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#GetType(type) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#Handle	vim/pack/plugins/start/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#dockerfile#hadolint#GetCommand	vim/pack/plugins/start/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetExecutable(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#Handle	vim/pack/plugins/start/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#credo#GetCommand	vim/pack/plugins/start/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#credo#GetConfigFile	vim/pack/plugins/start/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetConfigFile() abort$/;"	f
ale_linters#elixir#credo#GetMode	vim/pack/plugins/start/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetMode() abort$/;"	f
ale_linters#elixir#credo#Handle	vim/pack/plugins/start/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dialyxir#Handle	vim/pack/plugins/start/ale/ale_linters/elixir/dialyxir.vim	/^function! ale_linters#elixir#dialyxir#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dogma#Handle	vim/pack/plugins/start/ale/ale_linters/elixir/dogma.vim	/^function! ale_linters#elixir#dogma#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#elixir_ls#GetExecutable	vim/pack/plugins/start/ale/ale_linters/elixir/elixir_ls.vim	/^function! ale_linters#elixir#elixir_ls#GetExecutable(buffer) abort$/;"	f
ale_linters#elixir#mix#GetCommand	vim/pack/plugins/start/ale/ale_linters/elixir/mix.vim	/^function! ale_linters#elixir#mix#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#mix#Handle	vim/pack/plugins/start/ale/ale_linters/elixir/mix.vim	/^function! ale_linters#elixir#mix#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#FileIsBuffer	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#FileIsBuffer(path) abort$/;"	f
ale_linters#elm#make#GetCommand	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetCommand(buffer) abort$/;"	f
ale_linters#elm#make#GetCwd	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetCwd(buffer) abort$/;"	f
ale_linters#elm#make#GetExecutable	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetExecutable(buffer) abort$/;"	f
ale_linters#elm#make#GetPackageFile	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetPackageFile(buffer) abort$/;"	f
ale_linters#elm#make#GetRootDir	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetRootDir(buffer) abort$/;"	f
ale_linters#elm#make#Handle	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#HandleElm018Line	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#HandleElm018Line(line, output) abort$/;"	f
ale_linters#elm#make#HandleElm019Line	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#HandleElm019Line(line, output) abort$/;"	f
ale_linters#elm#make#IsTest	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#IsTest(buffer) abort$/;"	f
ale_linters#elm#make#IsVersionGte19	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#IsVersionGte19(buffer) abort$/;"	f
ale_linters#elm#make#ParseMessage	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#ParseMessage(message) abort$/;"	f
ale_linters#elm#make#ParseMessageItem	vim/pack/plugins/start/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#ParseMessageItem(item) abort$/;"	f
ale_linters#erlang#dialyzer#FindPlt	vim/pack/plugins/start/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#FindPlt(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetCommand	vim/pack/plugins/start/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetCommand(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetExecutable	vim/pack/plugins/start/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetExecutable(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetPlt	vim/pack/plugins/start/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetPlt(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetRebar3Profile	vim/pack/plugins/start/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetRebar3Profile(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#Handle	vim/pack/plugins/start/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#elvis#Handle	vim/pack/plugins/start/ale/ale_linters/erlang/elvis.vim	/^function! ale_linters#erlang#elvis#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#erlc#GetCommand	vim/pack/plugins/start/ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#GetCommand(buffer) abort$/;"	f
ale_linters#erlang#erlc#GetExecutable	vim/pack/plugins/start/ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#GetExecutable(buffer) abort$/;"	f
ale_linters#erlang#erlc#Handle	vim/pack/plugins/start/ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#GetCommand	vim/pack/plugins/start/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#GetCommand(buffer, output, meta) abort$/;"	f
ale_linters#erlang#syntaxerl#Handle	vim/pack/plugins/start/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#RunHelpCommand	vim/pack/plugins/start/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#RunHelpCommand(buffer) abort$/;"	f
ale_linters#eruby#erb#GetCommand	vim/pack/plugins/start/ale/ale_linters/eruby/erb.vim	/^function! ale_linters#eruby#erb#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#erubi#GetCommand	vim/pack/plugins/start/ale/ale_linters/eruby/erubi.vim	/^function! ale_linters#eruby#erubi#GetCommand(buffer, output, meta) abort$/;"	f
ale_linters#eruby#erubis#GetCommand	vim/pack/plugins/start/ale/ale_linters/eruby/erubis.vim	/^function! ale_linters#eruby#erubis#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#ruumba#GetCommand	vim/pack/plugins/start/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#ruumba#GetType	vim/pack/plugins/start/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#GetType(severity) abort$/;"	f
ale_linters#eruby#ruumba#Handle	vim/pack/plugins/start/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#Handle(buffer, lines) abort$/;"	f
ale_linters#fish#fish#Handle	vim/pack/plugins/start/ale/ale_linters/fish/fish.vim	/^function! ale_linters#fish#fish#Handle(buffer, lines) abort$/;"	f
ale_linters#fortran#gcc#GetCommand	vim/pack/plugins/start/ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#fortran#gcc#Handle	vim/pack/plugins/start/ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#fortran#language_server#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/fortran/language_server.vim	/^function! ale_linters#fortran#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#GetCommand	vim/pack/plugins/start/ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#GetCommand(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#Handle	vim/pack/plugins/start/ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#Handle(buffer, lines) abort$/;"	f
ale_linters#gitcommit#gitlint#GetCommand	vim/pack/plugins/start/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#GetCommand(buffer) abort$/;"	f
ale_linters#gitcommit#gitlint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#GetExecutable(buffer) abort$/;"	f
ale_linters#gitcommit#gitlint#Handle	vim/pack/plugins/start/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslang#GetCommand	vim/pack/plugins/start/ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslang#Handle	vim/pack/plugins/start/ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslls#GetCommand	vim/pack/plugins/start/ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslls#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#go#bingo#FindProjectRoot	vim/pack/plugins/start/ale/ale_linters/go/bingo.vim	/^function! ale_linters#go#bingo#FindProjectRoot(buffer) abort$/;"	f
ale_linters#go#bingo#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/bingo.vim	/^function! ale_linters#go#bingo#GetCommand(buffer) abort$/;"	f
ale_linters#go#gobuild#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetCommand(buffer) abort$/;"	f
ale_linters#go#gobuild#GetMatches	vim/pack/plugins/start/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetMatches(lines) abort$/;"	f
ale_linters#go#gobuild#Handler	vim/pack/plugins/start/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#Handler(buffer, lines) abort$/;"	f
ale_linters#go#gofmt#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/gofmt.vim	/^function! ale_linters#go#gofmt#GetCommand(buffer) abort$/;"	f
ale_linters#go#golangci_lint#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#GetCommand(buffer) abort$/;"	f
ale_linters#go#golangci_lint#GetMatches	vim/pack/plugins/start/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#GetMatches(lines) abort$/;"	f
ale_linters#go#golangci_lint#Handler	vim/pack/plugins/start/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#Handler(buffer, lines) abort$/;"	f
ale_linters#go#golint#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/golint.vim	/^function! ale_linters#go#golint#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetMatches	vim/pack/plugins/start/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetMatches(lines) abort$/;"	f
ale_linters#go#gometalinter#Handler	vim/pack/plugins/start/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#Handler(buffer, lines) abort$/;"	f
ale_linters#go#gopls#FindProjectRoot	vim/pack/plugins/start/ale/ale_linters/go/gopls.vim	/^function! ale_linters#go#gopls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#go#gopls#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/gopls.vim	/^function! ale_linters#go#gopls#GetCommand(buffer) abort$/;"	f
ale_linters#go#gotype#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/gotype.vim	/^function! ale_linters#go#gotype#GetCommand(buffer) abort$/;"	f
ale_linters#go#gotype#GetExecutable	vim/pack/plugins/start/ale/ale_linters/go/gotype.vim	/^function! ale_linters#go#gotype#GetExecutable(buffer) abort$/;"	f
ale_linters#go#govet#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/govet.vim	/^function! ale_linters#go#govet#GetCommand(buffer) abort$/;"	f
ale_linters#go#langserver#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/langserver.vim	/^function! ale_linters#go#langserver#GetCommand(buffer) abort$/;"	f
ale_linters#go#revive#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/revive.vim	/^function! ale_linters#go#revive#GetCommand(buffer) abort$/;"	f
ale_linters#go#staticcheck#GetCommand	vim/pack/plugins/start/ale/ale_linters/go/staticcheck.vim	/^function! ale_linters#go#staticcheck#GetCommand(buffer) abort$/;"	f
ale_linters#hack#hack#GetExecutable	vim/pack/plugins/start/ale/ale_linters/hack/hack.vim	/^function! ale_linters#hack#hack#GetExecutable(buffer) abort$/;"	f
ale_linters#hack#hack#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/hack/hack.vim	/^function! ale_linters#hack#hack#GetProjectRoot(buffer) abort$/;"	f
ale_linters#hack#hhast#GetExecutable	vim/pack/plugins/start/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetExecutable(buffer) abort$/;"	f
ale_linters#hack#hhast#GetInitializationOptions	vim/pack/plugins/start/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#hack#hhast#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haml#hamllint#GetCommand	vim/pack/plugins/start/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetCommand(buffer) abort$/;"	f
ale_linters#haml#hamllint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetExecutable(buffer) abort$/;"	f
ale_linters#haml#hamllint#Handle	vim/pack/plugins/start/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#Handle(buffer, lines) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetCommand	vim/pack/plugins/start/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetCommand(buffer, version) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetCommandWithVersionCheck	vim/pack/plugins/start/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetCommandWithVersionCheck(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetExecutable(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#Handle	vim/pack/plugins/start/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#cabal_ghc#GetCommand	vim/pack/plugins/start/ale/ale_linters/haskell/cabal_ghc.vim	/^function! ale_linters#haskell#cabal_ghc#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#ghc#GetCommand	vim/pack/plugins/start/ale/ale_linters/haskell/ghc.vim	/^function! ale_linters#haskell#ghc#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#ghc_mod#GetCommand	vim/pack/plugins/start/ale/ale_linters/haskell/ghc_mod.vim	/^function! ale_linters#haskell#ghc_mod#GetCommand (buffer) abort$/;"	f
ale_linters#haskell#hdevtools#GetCommand	vim/pack/plugins/start/ale/ale_linters/haskell/hdevtools.vim	/^function! ale_linters#haskell#hdevtools#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hie#GetCommand	vim/pack/plugins/start/ale/ale_linters/haskell/hie.vim	/^function! ale_linters#haskell#hie#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hie#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/haskell/hie.vim	/^function! ale_linters#haskell#hie#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haskell#hlint#GetCommand	vim/pack/plugins/start/ale/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hlint#Handle	vim/pack/plugins/start/ale/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#hls#FindRootFile	vim/pack/plugins/start/ale/ale_linters/haskell/hls.vim	/^function! ale_linters#haskell#hls#FindRootFile(buffer) abort$/;"	f
ale_linters#haskell#hls#GetCommand	vim/pack/plugins/start/ale/ale_linters/haskell/hls.vim	/^function! ale_linters#haskell#hls#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hls#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/haskell/hls.vim	/^function! ale_linters#haskell#hls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haskell#stack_build#GetCommand	vim/pack/plugins/start/ale/ale_linters/haskell/stack_build.vim	/^function! ale_linters#haskell#stack_build#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#stack_ghc#GetCommand	vim/pack/plugins/start/ale/ale_linters/haskell/stack_ghc.vim	/^function! ale_linters#haskell#stack_ghc#GetCommand(buffer) abort$/;"	f
ale_linters#html#angular#GetCommand	vim/pack/plugins/start/ale/ale_linters/html/angular.vim	/^function! ale_linters#html#angular#GetCommand(buffer) abort$/;"	f
ale_linters#html#angular#GetExecutable	vim/pack/plugins/start/ale/ale_linters/html/angular.vim	/^function! ale_linters#html#angular#GetExecutable(buffer) abort$/;"	f
ale_linters#html#angular#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/html/angular.vim	/^function! ale_linters#html#angular#GetProjectRoot(buffer) abort$/;"	f
ale_linters#html#htmlhint#GetCommand	vim/pack/plugins/start/ale/ale_linters/html/htmlhint.vim	/^function! ale_linters#html#htmlhint#GetCommand(buffer) abort$/;"	f
ale_linters#html#stylelint#GetCommand	vim/pack/plugins/start/ale/ale_linters/html/stylelint.vim	/^function! ale_linters#html#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#html#stylelint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/html/stylelint.vim	/^function! ale_linters#html#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#html#tidy#GetCommand	vim/pack/plugins/start/ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#GetCommand(buffer) abort$/;"	f
ale_linters#html#tidy#Handle	vim/pack/plugins/start/ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#Handle(buffer, lines) abort$/;"	f
ale_linters#idris#idris#GetCommand	vim/pack/plugins/start/ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#GetCommand(buffer) abort$/;"	f
ale_linters#idris#idris#Handle	vim/pack/plugins/start/ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#Handle(buffer, lines) abort$/;"	f
ale_linters#ink#ls#FindProjectRoot	vim/pack/plugins/start/ale/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#ink#ls#GetCommand	vim/pack/plugins/start/ale/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#GetCommand(buffer) abort$/;"	f
ale_linters#ink#ls#GetExecutable	vim/pack/plugins/start/ale/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#GetExecutable(buffer) abort$/;"	f
ale_linters#inko#inko#GetCommand	vim/pack/plugins/start/ale/ale_linters/inko/inko.vim	/^function! ale_linters#inko#inko#GetCommand(buffer) abort$/;"	f
ale_linters#ispc#ispc#GetCommand	vim/pack/plugins/start/ale/ale_linters/ispc/ispc.vim	/^function! ale_linters#ispc#ispc#GetCommand(buffer) abort$/;"	f
ale_linters#ispc#ispc#Handle	vim/pack/plugins/start/ale/ale_linters/ispc/ispc.vim	/^function! ale_linters#ispc#ispc#Handle(buffer, lines) abort$/;"	f
ale_linters#java#checkstyle#GetCommand	vim/pack/plugins/start/ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#GetCommand(buffer) abort$/;"	f
ale_linters#java#checkstyle#Handle	vim/pack/plugins/start/ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#java#eclipselsp#Command	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Command(buffer, version) abort$/;"	f
ale_linters#java#eclipselsp#CommandWithVersion	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#CommandWithVersion(buffer, version_lines, meta) abort$/;"	f
ale_linters#java#eclipselsp#ConfigurationPath	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#ConfigurationPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#Executable	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Executable(buffer) abort$/;"	f
ale_linters#java#eclipselsp#JarPath	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#JarPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#Javaagent	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Javaagent(buffer) abort$/;"	f
ale_linters#java#eclipselsp#RunWithVersionCheck	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#java#eclipselsp#TargetPath	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#TargetPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#VersionCheck	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#VersionCheck(version_lines) abort$/;"	f
ale_linters#java#eclipselsp#WorkspacePath	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#WorkspacePath(buffer) abort$/;"	f
ale_linters#java#javac#GetCommand	vim/pack/plugins/start/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#GetCommand(buffer, import_paths, meta) abort$/;"	f
ale_linters#java#javac#Handle	vim/pack/plugins/start/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#Handle(buffer, lines) abort$/;"	f
ale_linters#java#javac#RunWithImportPaths	vim/pack/plugins/start/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#RunWithImportPaths(buffer) abort$/;"	f
ale_linters#java#javalsp#Command	vim/pack/plugins/start/ale/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Command(buffer) abort$/;"	f
ale_linters#java#javalsp#Config	vim/pack/plugins/start/ale/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Config(buffer) abort$/;"	f
ale_linters#java#javalsp#Executable	vim/pack/plugins/start/ale/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Executable(buffer) abort$/;"	f
ale_linters#java#pmd#GetCommand	vim/pack/plugins/start/ale/ale_linters/java/pmd.vim	/^function! ale_linters#java#pmd#GetCommand(buffer) abort$/;"	f
ale_linters#java#pmd#Handle	vim/pack/plugins/start/ale/ale_linters/java/pmd.vim	/^function! ale_linters#java#pmd#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow#GetCommand	vim/pack/plugins/start/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetCommand(buffer, version) abort$/;"	f
ale_linters#javascript#flow#GetExecutable	vim/pack/plugins/start/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#flow#Handle	vim/pack/plugins/start/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow_ls#FindProjectRoot	vim/pack/plugins/start/ale/ale_linters/javascript/flow_ls.vim	/^function! ale_linters#javascript#flow_ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#javascript#jscs#GetCommand	vim/pack/plugins/start/ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#jscs#Handle	vim/pack/plugins/start/ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#jshint#GetCommand	vim/pack/plugins/start/ale/ale_linters/javascript/jshint.vim	/^function! ale_linters#javascript#jshint#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetCommand	vim/pack/plugins/start/ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetExecutable	vim/pack/plugins/start/ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jq#Handle	vim/pack/plugins/start/ale/ale_linters/json/jq.vim	/^function! ale_linters#json#jq#Handle(buffer, lines) abort$/;"	f
ale_linters#json#jsonlint#GetCommand	vim/pack/plugins/start/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#GetCommand(buffer) abort$/;"	f
ale_linters#json#jsonlint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jsonlint#Handle	vim/pack/plugins/start/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#Handle(buffer, lines) abort$/;"	f
ale_linters#julia#languageserver#GetCommand	vim/pack/plugins/start/ale/ale_linters/julia/languageserver.vim	/^function! ale_linters#julia#languageserver#GetCommand(buffer) abort$/;"	f
ale_linters#kotlin#kotlinc#GetCommand	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#GetCommand(buffer, import_paths, meta) abort$/;"	f
ale_linters#kotlin#kotlinc#Handle	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#Handle(buffer, lines) abort$/;"	f
ale_linters#kotlin#kotlinc#RunWithImportPaths	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#RunWithImportPaths(buffer) abort$/;"	f
ale_linters#kotlin#languageserver#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/kotlin/languageserver.vim	/^function! ale_linters#kotlin#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#less#lessc#GetCommand	vim/pack/plugins/start/ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#GetCommand(buffer) abort$/;"	f
ale_linters#less#lessc#Handle	vim/pack/plugins/start/ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#Handle(buffer, lines) abort$/;"	f
ale_linters#less#stylelint#GetCommand	vim/pack/plugins/start/ale/ale_linters/less/stylelint.vim	/^function! ale_linters#less#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#llvm#llc#HandleErrors	vim/pack/plugins/start/ale/ale_linters/llvm/llc.vim	/^function! ale_linters#llvm#llc#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#lua#luac#Handle	vim/pack/plugins/start/ale/ale_linters/lua/luac.vim	/^function! ale_linters#lua#luac#Handle(buffer, lines) abort$/;"	f
ale_linters#lua#luacheck#GetCommand	vim/pack/plugins/start/ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#GetCommand(buffer) abort$/;"	f
ale_linters#lua#luacheck#Handle	vim/pack/plugins/start/ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#make#checkmake#Handle	vim/pack/plugins/start/ale/ale_linters/make/checkmake.vim	/^function! ale_linters#make#checkmake#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#markdownlint#GetCommand	vim/pack/plugins/start/ale/ale_linters/markdown/markdownlint.vim	/^function! ale_linters#markdown#markdownlint#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#mdl#GetCommand	vim/pack/plugins/start/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#mdl#GetExecutable	vim/pack/plugins/start/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#GetExecutable(buffer) abort$/;"	f
ale_linters#markdown#mdl#Handle	vim/pack/plugins/start/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#remark_lint#GetCommand	vim/pack/plugins/start/ale/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#remark_lint#Handle	vim/pack/plugins/start/ale/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#vale#GetCommand	vim/pack/plugins/start/ale/ale_linters/markdown/vale.vim	/^function! ale_linters#markdown#vale#GetCommand(buffer) abort$/;"	f
ale_linters#matlab#mlint#Handle	vim/pack/plugins/start/ale/ale_linters/matlab/mlint.vim	/^function! ale_linters#matlab#mlint#Handle(buffer, lines) abort$/;"	f
ale_linters#mercury#mmc#GetCommand	vim/pack/plugins/start/ale/ale_linters/mercury/mmc.vim	/^function! ale_linters#mercury#mmc#GetCommand(buffer) abort$/;"	f
ale_linters#mercury#mmc#Handle	vim/pack/plugins/start/ale/ale_linters/mercury/mmc.vim	/^function! ale_linters#mercury#mmc#Handle(buffer, lines) abort$/;"	f
ale_linters#nasm#nasm#GetCommand	vim/pack/plugins/start/ale/ale_linters/nasm/nasm.vim	/^function! ale_linters#nasm#nasm#GetCommand(buffer) abort$/;"	f
ale_linters#nasm#nasm#Handle	vim/pack/plugins/start/ale/ale_linters/nasm/nasm.vim	/^function! ale_linters#nasm#nasm#Handle(buffer, lines) abort$/;"	f
ale_linters#nim#nimcheck#GetCommand	vim/pack/plugins/start/ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#GetCommand(buffer) abort$/;"	f
ale_linters#nim#nimcheck#Handle	vim/pack/plugins/start/ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#nim#nimlsp#GetCommand	vim/pack/plugins/start/ale/ale_linters/nim/nimlsp.vim	/^function! ale_linters#nim#nimlsp#GetCommand(buffer) abort$/;"	f
ale_linters#nim#nimlsp#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/nim/nimlsp.vim	/^function! ale_linters#nim#nimlsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#nix#nix#Command	vim/pack/plugins/start/ale/ale_linters/nix/nix.vim	/^function! ale_linters#nix#nix#Command(buffer, output, meta) abort$/;"	f
ale_linters#nix#nix#Handle	vim/pack/plugins/start/ale/ale_linters/nix/nix.vim	/^function! ale_linters#nix#nix#Handle(buffer, lines) abort$/;"	f
ale_linters#nix#rnix_lsp#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/nix/rnix_lsp.vim	/^function! ale_linters#nix#rnix_lsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#objc#clang#GetCommand	vim/pack/plugins/start/ale/ale_linters/objc/clang.vim	/^function! ale_linters#objc#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objc#clangd#GetCommand	vim/pack/plugins/start/ale/ale_linters/objc/clangd.vim	/^function! ale_linters#objc#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clang#GetCommand	vim/pack/plugins/start/ale/ale_linters/objcpp/clang.vim	/^function! ale_linters#objcpp#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clangd#GetCommand	vim/pack/plugins/start/ale/ale_linters/objcpp/clangd.vim	/^function! ale_linters#objcpp#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#ocaml#merlin#Handle	vim/pack/plugins/start/ale/ale_linters/ocaml/merlin.vim	/^function! ale_linters#ocaml#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#openapi#ibm_validator#GetCommand	vim/pack/plugins/start/ale/ale_linters/openapi/ibm_validator.vim	/^function! ale_linters#openapi#ibm_validator#GetCommand(buffer) abort$/;"	f
ale_linters#openapi#ibm_validator#Handle	vim/pack/plugins/start/ale/ale_linters/openapi/ibm_validator.vim	/^function! ale_linters#openapi#ibm_validator#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perl#GetCommand	vim/pack/plugins/start/ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perl#Handle	vim/pack/plugins/start/ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perlcritic#GetCommand	vim/pack/plugins/start/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perlcritic#GetProfile	vim/pack/plugins/start/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetProfile(buffer) abort$/;"	f
ale_linters#perl#perlcritic#Handle	vim/pack/plugins/start/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#perl6#perl6#ExtractError	vim/pack/plugins/start/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#ExtractError(dict, item, type, buffer) abort$/;"	f
ale_linters#perl6#perl6#GetCommand	vim/pack/plugins/start/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#GetCommand(buffer) abort$/;"	f
ale_linters#perl6#perl6#GetExecutable	vim/pack/plugins/start/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#GetExecutable(buffer) abort$/;"	f
ale_linters#perl6#perl6#Handle	vim/pack/plugins/start/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#Handle(buffer, lines) abort$/;"	f
ale_linters#php#intelephense#GetInitializationOptions	vim/pack/plugins/start/ale/ale_linters/php/intelephense.vim	/^function! ale_linters#php#intelephense#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#php#intelephense#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/php/intelephense.vim	/^function! ale_linters#php#intelephense#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#langserver#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#phan#GetCommand	vim/pack/plugins/start/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetCommand(buffer) abort$/;"	f
ale_linters#php#phan#GetExecutable	vim/pack/plugins/start/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetExecutable(buffer) abort$/;"	f
ale_linters#php#phan#Handle	vim/pack/plugins/start/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#php#Handle	vim/pack/plugins/start/ale/ale_linters/php/php.vim	/^function! ale_linters#php#php#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpcs#GetCommand	vim/pack/plugins/start/ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpcs#Handle	vim/pack/plugins/start/ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpmd#GetCommand	vim/pack/plugins/start/ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpmd#Handle	vim/pack/plugins/start/ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpstan#GetCommand	vim/pack/plugins/start/ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#GetCommand(buffer, version) abort$/;"	f
ale_linters#php#phpstan#Handle	vim/pack/plugins/start/ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#psalm#GetCommand	vim/pack/plugins/start/ale/ale_linters/php/psalm.vim	/^function! ale_linters#php#psalm#GetCommand(buffer) abort$/;"	f
ale_linters#php#psalm#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/php/psalm.vim	/^function! ale_linters#php#psalm#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#tlint#GetCommand	vim/pack/plugins/start/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetCommand(buffer) abort$/;"	f
ale_linters#php#tlint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetExecutable(buffer) abort$/;"	f
ale_linters#php#tlint#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#tlint#Handle	vim/pack/plugins/start/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#Handle(buffer, lines) abort$/;"	f
ale_linters#po#msgfmt#Handle	vim/pack/plugins/start/ale/ale_linters/po/msgfmt.vim	/^function! ale_linters#po#msgfmt#Handle(buffer, lines) abort$/;"	f
ale_linters#pony#ponyc#GetCommand	vim/pack/plugins/start/ale/ale_linters/pony/ponyc.vim	/^function! ale_linters#pony#ponyc#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#powershell#GetCommand	vim/pack/plugins/start/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#powershell#GetExecutable	vim/pack/plugins/start/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#GetExecutable(buffer) abort$/;"	f
ale_linters#powershell#powershell#Handle	vim/pack/plugins/start/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#Handle(buffer, lines) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#GetCommand	vim/pack/plugins/start/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#GetExecutable	vim/pack/plugins/start/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#GetExecutable(buffer) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#Handle	vim/pack/plugins/start/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#prolog#swipl#GetCommand	vim/pack/plugins/start/ale/ale_linters/prolog/swipl.vim	/^function! ale_linters#prolog#swipl#GetCommand(buffer) abort$/;"	f
ale_linters#prolog#swipl#Handle	vim/pack/plugins/start/ale/ale_linters/prolog/swipl.vim	/^function! ale_linters#prolog#swipl#Handle(buffer, lines) abort$/;"	f
ale_linters#proto#protoc_gen_lint#GetCommand	vim/pack/plugins/start/ale/ale_linters/proto/protoc_gen_lint.vim	/^function! ale_linters#proto#protoc_gen_lint#GetCommand(buffer) abort$/;"	f
ale_linters#proto#protolint#GetCommand	vim/pack/plugins/start/ale/ale_linters/proto/protolint.vim	/^function! ale_linters#proto#protolint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#GetCommand	vim/pack/plugins/start/ale/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#Handle	vim/pack/plugins/start/ale/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#Handle(buffer, lines) abort$/;"	f
ale_linters#puppet#languageserver#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/puppet/languageserver.vim	/^function! ale_linters#puppet#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#puppet#puppet#GetCommand	vim/pack/plugins/start/ale/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#GetCommand(buffer) abort$/;"	f
ale_linters#puppet#puppet#Handle	vim/pack/plugins/start/ale/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#Handle(buffer, lines) abort$/;"	f
ale_linters#puppet#puppetlint#GetCommand	vim/pack/plugins/start/ale/ale_linters/puppet/puppetlint.vim	/^function! ale_linters#puppet#puppetlint#GetCommand(buffer) abort$/;"	f
ale_linters#purescript#ls#FindProjectRoot	vim/pack/plugins/start/ale/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#purescript#ls#GetCommand	vim/pack/plugins/start/ale/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#GetCommand(buffer) abort$/;"	f
ale_linters#purescript#ls#GetExecutable	vim/pack/plugins/start/ale/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#GetExecutable(buffer) abort$/;"	f
ale_linters#pyrex#cython#GetCommand	vim/pack/plugins/start/ale/ale_linters/pyrex/cython.vim	/^function! ale_linters#pyrex#cython#GetCommand(buffer) abort$/;"	f
ale_linters#pyrex#cython#Handle	vim/pack/plugins/start/ale/ale_linters/pyrex/cython.vim	/^function! ale_linters#pyrex#cython#Handle(buffer, lines) abort$/;"	f
ale_linters#python#bandit#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#GetCommand(buffer) abort$/;"	f
ale_linters#python#bandit#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#GetExecutable(buffer) abort$/;"	f
ale_linters#python#bandit#Handle	vim/pack/plugins/start/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetCommand(buffer, version) abort$/;"	f
ale_linters#python#flake8#GetCwd	vim/pack/plugins/start/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetCwd(buffer) abort$/;"	f
ale_linters#python#flake8#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetExecutable(buffer) abort$/;"	f
ale_linters#python#flake8#Handle	vim/pack/plugins/start/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#RunWithVersionCheck	vim/pack/plugins/start/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#python#jedils#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/jedils.vim	/^function! ale_linters#python#jedils#GetCommand(buffer) abort$/;"	f
ale_linters#python#jedils#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/jedils.vim	/^function! ale_linters#python#jedils#GetExecutable(buffer) abort$/;"	f
ale_linters#python#mypy#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetCommand(buffer) abort$/;"	f
ale_linters#python#mypy#GetCwd	vim/pack/plugins/start/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetCwd(buffer) abort$/;"	f
ale_linters#python#mypy#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetExecutable(buffer) abort$/;"	f
ale_linters#python#mypy#Handle	vim/pack/plugins/start/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#Handle(buffer, lines) abort$/;"	f
ale_linters#python#prospector#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetCommand(buffer) abort$/;"	f
ale_linters#python#prospector#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetExecutable(buffer) abort$/;"	f
ale_linters#python#prospector#Handle	vim/pack/plugins/start/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pycodestyle#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pycodestyle#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pycodestyle#Handle	vim/pack/plugins/start/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pydocstyle#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pydocstyle#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pydocstyle#Handle	vim/pack/plugins/start/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyflakes#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyflakes#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyflakes#Handle	vim/pack/plugins/start/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylama#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetCommand(buffer) abort$/;"	f
ale_linters#python#pylama#GetCwd	vim/pack/plugins/start/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetCwd(buffer) abort$/;"	f
ale_linters#python#pylama#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylama#Handle	vim/pack/plugins/start/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylint#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetCommand(buffer, version) abort$/;"	f
ale_linters#python#pylint#GetCwd	vim/pack/plugins/start/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetCwd(buffer) abort$/;"	f
ale_linters#python#pylint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylint#Handle	vim/pack/plugins/start/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyls#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyls#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyre#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/pyre.vim	/^function! ale_linters#python#pyre#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyre#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/pyre.vim	/^function! ale_linters#python#pyre#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyright#GetConfig	vim/pack/plugins/start/ale/ale_linters/python/pyright.vim	/^function! ale_linters#python#pyright#GetConfig(buffer) abort$/;"	f
ale_linters#python#vulture#GetCommand	vim/pack/plugins/start/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetCommand(buffer) abort$/;"	f
ale_linters#python#vulture#GetCwd	vim/pack/plugins/start/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetCwd(buffer) abort$/;"	f
ale_linters#python#vulture#GetExecutable	vim/pack/plugins/start/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetExecutable(buffer) abort$/;"	f
ale_linters#python#vulture#Handle	vim/pack/plugins/start/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#Handle(buffer, lines) abort$/;"	f
ale_linters#qml#qmlfmt#Handle	vim/pack/plugins/start/ale/ale_linters/qml/qmlfmt.vim	/^function! ale_linters#qml#qmlfmt#Handle(buffer, lines) abort$/;"	f
ale_linters#qml#qmllint#Handle	vim/pack/plugins/start/ale/ale_linters/qml/qmllint.vim	/^function! ale_linters#qml#qmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#r#languageserver#GetCommand	vim/pack/plugins/start/ale/ale_linters/r/languageserver.vim	/^function! ale_linters#r#languageserver#GetCommand(buffer) abort$/;"	f
ale_linters#r#languageserver#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/r/languageserver.vim	/^function! ale_linters#r#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#r#lintr#GetCommand	vim/pack/plugins/start/ale/ale_linters/r/lintr.vim	/^function! ale_linters#r#lintr#GetCommand(buffer) abort$/;"	f
ale_linters#racket#raco#Handle	vim/pack/plugins/start/ale/ale_linters/racket/raco.vim	/^function! ale_linters#racket#raco#Handle(buffer, lines) abort$/;"	f
ale_linters#reason#ls#FindProjectRoot	vim/pack/plugins/start/ale/ale_linters/reason/ls.vim	/^function! ale_linters#reason#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#reason#merlin#Handle	vim/pack/plugins/start/ale/ale_linters/reason/merlin.vim	/^function! ale_linters#reason#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#rst#rstcheck#Handle	vim/pack/plugins/start/ale/ale_linters/rst/rstcheck.vim	/^function! ale_linters#rst#rstcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#brakeman#GetCommand	vim/pack/plugins/start/ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#brakeman#Handle	vim/pack/plugins/start/ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#debride#GetCommand	vim/pack/plugins/start/ale/ale_linters/ruby/debride.vim	/^function! ale_linters#ruby#debride#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#debride#HandleOutput	vim/pack/plugins/start/ale/ale_linters/ruby/debride.vim	/^function! ale_linters#ruby#debride#HandleOutput(buffer, lines) abort$/;"	f
ale_linters#ruby#rails_best_practices#GetCommand	vim/pack/plugins/start/ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rails_best_practices#Handle	vim/pack/plugins/start/ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#reek#GetCommand	vim/pack/plugins/start/ale/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#GetCommand(buffer, version) abort$/;"	f
ale_linters#ruby#reek#Handle	vim/pack/plugins/start/ale/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#rubocop#GetCommand	vim/pack/plugins/start/ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rubocop#GetType	vim/pack/plugins/start/ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetType(severity) abort$/;"	f
ale_linters#ruby#solargraph#GetCommand	vim/pack/plugins/start/ale/ale_linters/ruby/solargraph.vim	/^function! ale_linters#ruby#solargraph#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#sorbet#GetCommand	vim/pack/plugins/start/ale/ale_linters/ruby/sorbet.vim	/^function! ale_linters#ruby#sorbet#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#standardrb#GetCommand	vim/pack/plugins/start/ale/ale_linters/ruby/standardrb.vim	/^function! ale_linters#ruby#standardrb#GetCommand(buffer) abort$/;"	f
ale_linters#rust#analyzer#GetCommand	vim/pack/plugins/start/ale/ale_linters/rust/analyzer.vim	/^function! ale_linters#rust#analyzer#GetCommand(buffer) abort$/;"	f
ale_linters#rust#analyzer#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/rust/analyzer.vim	/^function! ale_linters#rust#analyzer#GetProjectRoot(buffer) abort$/;"	f
ale_linters#rust#cargo#GetCargoExecutable	vim/pack/plugins/start/ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCargoExecutable(bufnr) abort$/;"	f
ale_linters#rust#cargo#GetCommand	vim/pack/plugins/start/ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCommand(buffer, version) abort$/;"	f
ale_linters#rust#cargo#GetCwd	vim/pack/plugins/start/ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCwd(buffer) abort$/;"	f
ale_linters#rust#rls#GetCommand	vim/pack/plugins/start/ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetCommand(buffer) abort$/;"	f
ale_linters#rust#rls#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#rust#rustc#RustcCommand	vim/pack/plugins/start/ale/ale_linters/rust/rustc.vim	/^function! ale_linters#rust#rustc#RustcCommand(buffer) abort$/;"	f
ale_linters#salt#salt_lint#GetCommand	vim/pack/plugins/start/ale/ale_linters/salt/salt_lint.vim	/^function! ale_linters#salt#salt_lint#GetCommand(buffer) abort$/;"	f
ale_linters#salt#salt_lint#Handle	vim/pack/plugins/start/ale/ale_linters/salt/salt_lint.vim	/^function! ale_linters#salt#salt_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#sass#sasslint#GetCommand	vim/pack/plugins/start/ale/ale_linters/sass/sasslint.vim	/^function! ale_linters#sass#sasslint#GetCommand(buffer) abort$/;"	f
ale_linters#sass#sasslint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/sass/sasslint.vim	/^function! ale_linters#sass#sasslint#GetExecutable(buffer) abort$/;"	f
ale_linters#scala#metals#GetCommand	vim/pack/plugins/start/ale/ale_linters/scala/metals.vim	/^function! ale_linters#scala#metals#GetCommand(buffer) abort$/;"	f
ale_linters#scala#metals#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/scala/metals.vim	/^function! ale_linters#scala#metals#GetProjectRoot(buffer) abort$/;"	f
ale_linters#scala#sbtserver#GetAddress	vim/pack/plugins/start/ale/ale_linters/scala/sbtserver.vim	/^function! ale_linters#scala#sbtserver#GetAddress(buffer) abort$/;"	f
ale_linters#scala#sbtserver#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/scala/sbtserver.vim	/^function! ale_linters#scala#sbtserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#scala#scalastyle#GetCommand	vim/pack/plugins/start/ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#GetCommand(buffer) abort$/;"	f
ale_linters#scala#scalastyle#Handle	vim/pack/plugins/start/ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#sasslint#GetCommand	vim/pack/plugins/start/ale/ale_linters/scss/sasslint.vim	/^function! ale_linters#scss#sasslint#GetCommand(buffer) abort$/;"	f
ale_linters#scss#sasslint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/scss/sasslint.vim	/^function! ale_linters#scss#sasslint#GetExecutable(buffer) abort$/;"	f
ale_linters#scss#scsslint#Handle	vim/pack/plugins/start/ale/ale_linters/scss/scsslint.vim	/^function! ale_linters#scss#scsslint#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#stylelint#GetCommand	vim/pack/plugins/start/ale/ale_linters/scss/stylelint.vim	/^function! ale_linters#scss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sh#bashate#GetCommand	vim/pack/plugins/start/ale/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#GetCommand(buffer) abort$/;"	f
ale_linters#sh#bashate#GetExecutable	vim/pack/plugins/start/ale/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#bashate#Handle	vim/pack/plugins/start/ale/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#Handle(buffer, lines) abort$/;"	f
ale_linters#sh#language_server#GetCommand	vim/pack/plugins/start/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetCommand(buffer) abort$/;"	f
ale_linters#sh#language_server#GetExecutable	vim/pack/plugins/start/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#language_server#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#sh#shell#GetCommand	vim/pack/plugins/start/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetCommand(buffer) abort$/;"	f
ale_linters#sh#shell#GetExecutable	vim/pack/plugins/start/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#shell#Handle	vim/pack/plugins/start/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#Handle(buffer, lines) abort$/;"	f
ale_linters#slim#slimlint#GetCommand	vim/pack/plugins/start/ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#GetCommand(buffer) abort$/;"	f
ale_linters#slim#slimlint#Handle	vim/pack/plugins/start/ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sml#smlnj_cm#GetCommand	vim/pack/plugins/start/ale/ale_linters/sml/smlnj_cm.vim	/^function! ale_linters#sml#smlnj_cm#GetCommand(buffer) abort$/;"	f
ale_linters#solidity#solc#GetCommand	vim/pack/plugins/start/ale/ale_linters/solidity/solc.vim	/^function! ale_linters#solidity#solc#GetCommand(buffer) abort$/;"	f
ale_linters#solidity#solc#Handle	vim/pack/plugins/start/ale/ale_linters/solidity/solc.vim	/^function! ale_linters#solidity#solc#Handle(buffer, lines) abort$/;"	f
ale_linters#solidity#solhint#Handle	vim/pack/plugins/start/ale/ale_linters/solidity/solhint.vim	/^function! ale_linters#solidity#solhint#Handle(buffer, lines) abort$/;"	f
ale_linters#spec#rpmlint#GetCommand	vim/pack/plugins/start/ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#GetCommand(buffer) abort$/;"	f
ale_linters#spec#rpmlint#Handle	vim/pack/plugins/start/ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sql#sqlint#Handle	vim/pack/plugins/start/ale/ale_linters/sql/sqlint.vim	/^function! ale_linters#sql#sqlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sql#sqllint#Handle	vim/pack/plugins/start/ale/ale_linters/sql/sqllint.vim	/^function! ale_linters#sql#sqllint#Handle(buffer, lines) abort$/;"	f
ale_linters#stylus#stylelint#GetCommand	vim/pack/plugins/start/ale/ale_linters/stylus/stylelint.vim	/^function! ale_linters#stylus#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sugarss#stylelint#GetCommand	vim/pack/plugins/start/ale/ale_linters/sugarss/stylelint.vim	/^function! ale_linters#sugarss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#svelte#svelteserver#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/svelte/svelteserver.vim	/^function! ale_linters#svelte#svelteserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#swift#appleswiftformat#GetLinterCommand	vim/pack/plugins/start/ale/ale_linters/swift/appleswiftformat.vim	/^function! ale_linters#swift#appleswiftformat#GetLinterCommand(buffer) abort$/;"	f
ale_linters#swift#appleswiftformat#Handle	vim/pack/plugins/start/ale/ale_linters/swift/appleswiftformat.vim	/^function! ale_linters#swift#appleswiftformat#Handle(buffer, lines) abort$/;"	f
ale_linters#swift#swiftlint#GetCommand	vim/pack/plugins/start/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#GetCommand(buffer) abort$/;"	f
ale_linters#swift#swiftlint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#GetExecutable(buffer) abort$/;"	f
ale_linters#swift#swiftlint#Handle	vim/pack/plugins/start/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#Handle(buffer, lines) abort$/;"	f
ale_linters#systemd#systemd_analyze#Handle	vim/pack/plugins/start/ale/ale_linters/systemd/systemd_analyze.vim	/^function! ale_linters#systemd#systemd_analyze#Handle(buffer, lines) abort$/;"	f
ale_linters#tcl#nagelfar#GetCommand	vim/pack/plugins/start/ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#GetCommand(buffer) abort$/;"	f
ale_linters#tcl#nagelfar#Handle	vim/pack/plugins/start/ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#terraform#GetCommand	vim/pack/plugins/start/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#terraform#GetDetail	vim/pack/plugins/start/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetDetail(error) abort$/;"	f
ale_linters#terraform#terraform#GetExecutable	vim/pack/plugins/start/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetExecutable(buffer) abort$/;"	f
ale_linters#terraform#terraform#GetType	vim/pack/plugins/start/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetType(severity) abort$/;"	f
ale_linters#terraform#terraform#Handle	vim/pack/plugins/start/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#terraform_ls#GetCommand	vim/pack/plugins/start/ale/ale_linters/terraform/terraform_ls.vim	/^function! ale_linters#terraform#terraform_ls#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#terraform_ls#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/terraform/terraform_ls.vim	/^function! ale_linters#terraform#terraform_ls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#terraform#terraform_ls#GetTerraformExecutable	vim/pack/plugins/start/ale/ale_linters/terraform/terraform_ls.vim	/^function! ale_linters#terraform#terraform_ls#GetTerraformExecutable(buffer) abort$/;"	f
ale_linters#terraform#terraform_lsp#GetCommand	vim/pack/plugins/start/ale/ale_linters/terraform/terraform_lsp.vim	/^function! ale_linters#terraform#terraform_lsp#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#terraform_lsp#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/terraform/terraform_lsp.vim	/^function! ale_linters#terraform#terraform_lsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#terraform#tflint#GetCommand	vim/pack/plugins/start/ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#tflint#Handle	vim/pack/plugins/start/ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#chktex#GetCommand	vim/pack/plugins/start/ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#GetCommand(buffer) abort$/;"	f
ale_linters#tex#chktex#Handle	vim/pack/plugins/start/ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#lacheck#Handle	vim/pack/plugins/start/ale/ale_linters/tex/lacheck.vim	/^function! ale_linters#tex#lacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#texlab#GetCommand	vim/pack/plugins/start/ale/ale_linters/tex/texlab.vim	/^function! ale_linters#tex#texlab#GetCommand(buffer) abort$/;"	f
ale_linters#tex#texlab#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/tex/texlab.vim	/^function! ale_linters#tex#texlab#GetProjectRoot(buffer) abort$/;"	f
ale_linters#thrift#thrift#GetCommand	vim/pack/plugins/start/ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#GetCommand(buffer) abort$/;"	f
ale_linters#thrift#thrift#Handle	vim/pack/plugins/start/ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#deno#GetInitializationOptions	vim/pack/plugins/start/ale/ale_linters/typescript/deno.vim	/^function! ale_linters#typescript#deno#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#typescript#standard#GetCommand	vim/pack/plugins/start/ale/ale_linters/typescript/standard.vim	/^function! ale_linters#typescript#standard#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#standard#GetExecutable	vim/pack/plugins/start/ale/ale_linters/typescript/standard.vim	/^function! ale_linters#typescript#standard#GetExecutable(buffer) abort$/;"	f
ale_linters#typescript#tslint#GetCommand	vim/pack/plugins/start/ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#tslint#Handle	vim/pack/plugins/start/ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#typecheck#Handle	vim/pack/plugins/start/ale/ale_linters/typescript/typecheck.vim	/^function! ale_linters#typescript#typecheck#Handle(buffer, lines) abort$/;"	f
ale_linters#v#v#GetCommand	vim/pack/plugins/start/ale/ale_linters/v/v.vim	/^function! ale_linters#v#v#GetCommand(buffer) abort$/;"	f
ale_linters#v#v#Handler	vim/pack/plugins/start/ale/ale_linters/v/v.vim	/^function! ale_linters#v#v#Handler(buffer, lines) abort$/;"	f
ale_linters#vala#vala_lint#GetCommand	vim/pack/plugins/start/ale/ale_linters/vala/vala_lint.vim	/^function! ale_linters#vala#vala_lint#GetCommand(buffer) abort$/;"	f
ale_linters#vala#vala_lint#GetExecutable	vim/pack/plugins/start/ale/ale_linters/vala/vala_lint.vim	/^function! ale_linters#vala#vala_lint#GetExecutable(buffer) abort$/;"	f
ale_linters#vala#vala_lint#Handle	vim/pack/plugins/start/ale/ale_linters/vala/vala_lint.vim	/^function! ale_linters#vala#vala_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#iverilog#GetCommand	vim/pack/plugins/start/ale/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#iverilog#Handle	vim/pack/plugins/start/ale/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#verilator#GetCommand	vim/pack/plugins/start/ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#verilator#Handle	vim/pack/plugins/start/ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#vlog#GetCommand	vim/pack/plugins/start/ale/ale_linters/verilog/vlog.vim	/^function! ale_linters#verilog#vlog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#vlog#Handle	vim/pack/plugins/start/ale/ale_linters/verilog/vlog.vim	/^function! ale_linters#verilog#vlog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#xvlog#GetCommand	vim/pack/plugins/start/ale/ale_linters/verilog/xvlog.vim	/^function! ale_linters#verilog#xvlog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#xvlog#Handle	vim/pack/plugins/start/ale/ale_linters/verilog/xvlog.vim	/^function! ale_linters#verilog#xvlog#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#ghdl#GetCommand	vim/pack/plugins/start/ale/ale_linters/vhdl/ghdl.vim	/^function! ale_linters#vhdl#ghdl#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#ghdl#Handle	vim/pack/plugins/start/ale/ale_linters/vhdl/ghdl.vim	/^function! ale_linters#vhdl#ghdl#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#vcom#GetCommand	vim/pack/plugins/start/ale/ale_linters/vhdl/vcom.vim	/^function! ale_linters#vhdl#vcom#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#vcom#Handle	vim/pack/plugins/start/ale/ale_linters/vhdl/vcom.vim	/^function! ale_linters#vhdl#vcom#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#xvhdl#GetCommand	vim/pack/plugins/start/ale/ale_linters/vhdl/xvhdl.vim	/^function! ale_linters#vhdl#xvhdl#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#xvhdl#Handle	vim/pack/plugins/start/ale/ale_linters/vhdl/xvhdl.vim	/^function! ale_linters#vhdl#xvhdl#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetCommand	vim/pack/plugins/start/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetCommand(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetCwd	vim/pack/plugins/start/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetCwd(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetExecutable	vim/pack/plugins/start/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetExecutable(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#Handle	vim/pack/plugins/start/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#vimls#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/vim/vimls.vim	/^function! ale_linters#vim#vimls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#vim#vint#GetCommand	vim/pack/plugins/start/ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#GetCommand(buffer, version) abort$/;"	f
ale_linters#vim#vint#Handle	vim/pack/plugins/start/ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#Handle(buffer, lines) abort$/;"	f
ale_linters#vue#vls#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/vue/vls.vim	/^function! ale_linters#vue#vls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#xml#xmllint#GetCommand	vim/pack/plugins/start/ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#GetCommand(buffer) abort$/;"	f
ale_linters#xml#xmllint#Handle	vim/pack/plugins/start/ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#swaglint#Handle	vim/pack/plugins/start/ale/ale_linters/yaml/swaglint.vim	/^function! ale_linters#yaml#swaglint#Handle(buffer, lines) abort$/;"	f
ale_linters#yang#yang_lsp#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/yang/yang_lsp.vim	/^function! ale_linters#yang#yang_lsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#zig#zls#GetProjectRoot	vim/pack/plugins/start/ale/ale_linters/zig/zls.vim	/^function! ale_linters#zig#zls#GetProjectRoot(buffer) abort$/;"	f
alternatePair	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:alternatePair(stop)$/;"	f
argmaps	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
asyncomplete#sources#ale#completor	vim/pack/plugins/start/ale/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#completor(options, context) abort$/;"	f
asyncomplete#sources#ale#get_source_options	vim/pack/plugins/start/ale/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#get_source_options(...) abort$/;"	f
asyncomplete#sources#ale#get_triggers	vim/pack/plugins/start/ale/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#get_triggers() abort$/;"	f
at	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f
autocmds	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f
b:current_syntax	vim/pack/plugins/start/ale/syntax/ale-fix-suggest.vim	/^let b:current_syntax = 'ale-fix-suggest'$/;"	v
b:current_syntax	vim/pack/plugins/start/ale/syntax/ale-preview-selection.vim	/^let b:current_syntax = 'ale-preview-selection'$/;"	v
b:current_syntax	vim/pack/plugins/start/kotlin-vim/syntax/kotlin.vim	/^let b:current_syntax = 'kotlin'$/;"	v
b:current_syntax	vim/pack/plugins/start/typescript-vim/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	vim/pack/plugins/start/vim-jsx-typescript/after/syntax/typescriptreact.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	vim/pack/plugins/start/vim-jsx-typescript/after/syntax/typescriptreact.vim	/^let b:current_syntax = 'typescriptreact'$/;"	v
b:did_ftplugin	vim/pack/plugins/start/kotlin-vim/ftplugin/kotlin.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim/pack/plugins/start/typescript-vim/ftplugin/typescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	vim/pack/plugins/start/kotlin-vim/indent/kotlin.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^let b:did_indent = 1$/;"	v
b:match_ignorecase	vim/pack/plugins/start/vim-jsx-typescript/after/ftplugin/typescriptreact.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	vim/pack/plugins/start/vim-jsx-typescript/after/ftplugin/typescriptreact.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:undo_ftplugin	vim/pack/plugins/start/typescript-vim/ftplugin/typescript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<"$/;"	v
b:undo_indent	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:xml_indent_close	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^let b:xml_indent_close = '.\\{-}<\/'$/;"	v
b:xml_indent_open	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^let b:xml_indent_open = '.\\{-}<\\a'$/;"	v
buffunc	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
buftab	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
bufwins	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
buildpat	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
byfname	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:byfname()$/;"	f
cache_project_root	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
cachefile	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
cancel_tests	vim/pack/plugins/start/ale/run-tests	/^cancel_tests() {$/;"	f
chCwd	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node) abort$/;"	f
chRoot	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node) abort$/;"	f
changelist	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f
checkbuf	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f
chknearby	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
choices	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
chop	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
closeChildren	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node) abort$/;"	f
closeCurrentDir	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node) abort$/;"	f
closeTreeWindow	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow() abort$/;"	f
code	vim/pack/plugins/start/ale/run-tests.bat	/^set code=%ERRORLEVEL%$/;"	v
colors_name	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let colors_name = "NeoSolarized"$/;"	v
comparent	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f
compfnlen	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
compmatlen	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
compmreb	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
compmref	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f
comptime	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f
compval	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f
compval	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f
continues	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:continues(ln,con)$/;"	f
ctrlp#acceptfile	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(...)$/;"	f
ctrlp#bookmarkdir#accept	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(dir, ...)$/;"	f
ctrlp#bookmarkdir#id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clr	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#getvar	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getvar(var)$/;"	f
ctrlp#hicheck	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#j2l	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(mode, str)$/;"	f
ctrlp#line#cmd	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#cmd(mode, ...)$/;"	f
ctrlp#line#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init(bufnr)$/;"	f
ctrlp#mixed#id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#mrufiles#tgrel	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#tgrel()$/;"	f
ctrlp#normcmd	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#statusline	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#utils#cachedir	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
current_compiler	vim/pack/plugins/start/typescript-vim/compiler/typescript.vim	/^let current_compiler = "typescript"$/;"	v
customOpenBookmark	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenBookmark(node) abort$/;"	f
customOpenDir	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenDir(node) abort$/;"	f
customOpenFile	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenFile(node) abort$/;"	f
delent	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
deleteBookmark	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark) abort$/;"	f
dict2list	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f
dictindex	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
did_typescript_syn_inits	vim/pack/plugins/start/typescript-vim/syntax/typescript.vim	/^    let did_typescript_syn_inits = 1$/;"	v
dircompl	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
dismrk	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f
displayHelp	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp() abort$/;"	f
dohighlight	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f
dosigns	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f
elapsed	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f
elm_ls#GetOptions	vim/pack/plugins/start/ale/ale_linters/elm/elm_ls.vim	/^function! elm_ls#GetOptions(buffer) abort$/;"	f
elm_ls#GetRootDir	vim/pack/plugins/start/ale/ale_linters/elm/elm_ls.vim	/^function! elm_ls#GetRootDir(buffer) abort$/;"	f
esctagscmd	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
excl	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f
execextvar	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
exectags	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
exectagsonfile	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
filter	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f
findAndRevealPath	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr) abort$/;"	f
findcommon	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
findcount	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:findcount(str)$/;"	f
findroot	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
flatten	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
fnesc	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
format	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f
formatline	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f
formatul	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f
g:NERDTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoCenter	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenter            = get(g:, 'NERDTreeAutoCenter',            1)$/;"	v
g:NERDTreeAutoCenterThreshold	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenterThreshold   = get(g:, 'NERDTreeAutoCenterThreshold',   3)$/;"	v
g:NERDTreeAutoDeleteBuffer	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarksFile	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksFile         = get(g:, 'NERDTreeBookmarksFile',         expand('$HOME') . '\/.NERDTreeBookmarks')$/;"	v
g:NERDTreeBookmarksSort	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksSort         = get(g:, 'NERDTreeBookmarksSort',         1)$/;"	v
g:NERDTreeCascadeOpenSingleChildDir	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeOpenSingleChildDir = get(g:, 'NERDTreeCascadeOpenSingleChildDir', 1)$/;"	v
g:NERDTreeCascadeSingleChildDir	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeSingleChildDir     = get(g:, 'NERDTreeCascadeSingleChildDir',     1)$/;"	v
g:NERDTreeCaseSensitiveSort	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCaseSensitiveSort     = get(g:, 'NERDTreeCaseSensitiveSort',     0)$/;"	v
g:NERDTreeChDirMode	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeChDirMode             = get(g:, 'NERDTreeChDirMode',             0)$/;"	v
g:NERDTreeCopyCmd	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyCmd      = get(g:, 'NERDTreeCopyCmd',      'cp -r ')$/;"	v
g:NERDTreeCopyDirCmd	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyDirCmd   = get(g:, 'NERDTreeCopyDirCmd',   'xcopy \/s \/e \/i \/y \/q ')$/;"	v
g:NERDTreeCopyFileCmd	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyFileCmd  = get(g:, 'NERDTreeCopyFileCmd',  'copy \/y ')$/;"	v
g:NERDTreeCreatePrefix	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCreatePrefix          = get(g:, 'NERDTreeCreatePrefix',          'silent')$/;"	v
g:NERDTreeCreator	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirArrowCollapsible	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '~')$/;"	v
g:NERDTreeDirArrowCollapsible	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '▾')$/;"	v
g:NERDTreeDirArrowExpandable	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '+')$/;"	v
g:NERDTreeDirArrowExpandable	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '▸')$/;"	v
g:NERDTreeDirNode	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	vim/pack/plugins/start/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	vim/pack/plugins/start/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeGlyphReadOnly	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeGlyphReadOnly = get(g:, 'NERDTreeGlyphReadOnly', 'RO')$/;"	v
g:NERDTreeHighlightCursorline	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHighlightCursorline   = get(g:, 'NERDTreeHighlightCursorline',   1)$/;"	v
g:NERDTreeHijackNetrw	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHijackNetrw           = get(g:, 'NERDTreeHijackNetrw',           1)$/;"	v
g:NERDTreeIgnore	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeIgnore                = get(g:, 'NERDTreeIgnore',                ['\\~$'])$/;"	v
g:NERDTreeKeyMap	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapActivateNode	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapActivateNode    = get(g:, 'NERDTreeMapActivateNode',    'o')$/;"	v
g:NERDTreeMapCWD	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCWD             = get(g:, 'NERDTreeMapCWD',             'CD')$/;"	v
g:NERDTreeMapChangeRoot	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChangeRoot      = get(g:, 'NERDTreeMapChangeRoot',      'C')$/;"	v
g:NERDTreeMapChdir	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChdir           = get(g:, 'NERDTreeMapChdir',           'cd')$/;"	v
g:NERDTreeMapCloseChildren	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseChildren   = get(g:, 'NERDTreeMapCloseChildren',   'X')$/;"	v
g:NERDTreeMapCloseDir	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseDir        = get(g:, 'NERDTreeMapCloseDir',        'x')$/;"	v
g:NERDTreeMapCustomOpen	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCustomOpen      = get(g:, 'NERDTreeMapCustomOpen',      '<CR>')$/;"	v
g:NERDTreeMapDeleteBookmark	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapDeleteBookmark  = get(g:, 'NERDTreeMapDeleteBookmark',  'D')$/;"	v
g:NERDTreeMapHelp	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapHelp            = get(g:, 'NERDTreeMapHelp',            '?')$/;"	v
g:NERDTreeMapJumpFirstChild	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpFirstChild  = get(g:, 'NERDTreeMapJumpFirstChild',  'K')$/;"	v
g:NERDTreeMapJumpLastChild	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpLastChild   = get(g:, 'NERDTreeMapJumpLastChild',   'J')$/;"	v
g:NERDTreeMapJumpNextSibling	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpNextSibling = get(g:, 'NERDTreeMapJumpNextSibling', '<C-j>')$/;"	v
g:NERDTreeMapJumpParent	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpParent      = get(g:, 'NERDTreeMapJumpParent',      'p')$/;"	v
g:NERDTreeMapJumpPrevSibling	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpPrevSibling = get(g:, 'NERDTreeMapJumpPrevSibling', '<C-k>')$/;"	v
g:NERDTreeMapJumpRoot	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpRoot        = get(g:, 'NERDTreeMapJumpRoot',        'P')$/;"	v
g:NERDTreeMapMenu	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapMenu            = get(g:, 'NERDTreeMapMenu',            'm')$/;"	v
g:NERDTreeMapOpenExpl	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenExpl        = get(g:, 'NERDTreeMapOpenExpl',        'e')$/;"	v
g:NERDTreeMapOpenInTab	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTab       = get(g:, 'NERDTreeMapOpenInTab',       't')$/;"	v
g:NERDTreeMapOpenInTabSilent	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTabSilent = get(g:, 'NERDTreeMapOpenInTabSilent', 'T')$/;"	v
g:NERDTreeMapOpenRecursively	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenRecursively = get(g:, 'NERDTreeMapOpenRecursively', 'O')$/;"	v
g:NERDTreeMapOpenSplit	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenSplit       = get(g:, 'NERDTreeMapOpenSplit',       'i')$/;"	v
g:NERDTreeMapOpenVSplit	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenVSplit      = get(g:, 'NERDTreeMapOpenVSplit',      's')$/;"	v
g:NERDTreeMapPreview	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreview         = get(g:, 'NERDTreeMapPreview',         'g'.NERDTreeMapActivateNode)$/;"	v
g:NERDTreeMapPreviewSplit	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewSplit    = get(g:, 'NERDTreeMapPreviewSplit',    'g'.NERDTreeMapOpenSplit)$/;"	v
g:NERDTreeMapPreviewVSplit	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewVSplit   = get(g:, 'NERDTreeMapPreviewVSplit',   'g'.NERDTreeMapOpenVSplit)$/;"	v
g:NERDTreeMapQuit	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapQuit            = get(g:, 'NERDTreeMapQuit',            'q')$/;"	v
g:NERDTreeMapRefresh	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefresh         = get(g:, 'NERDTreeMapRefresh',         'r')$/;"	v
g:NERDTreeMapRefreshRoot	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefreshRoot     = get(g:, 'NERDTreeMapRefreshRoot',     'R')$/;"	v
g:NERDTreeMapToggleBookmarks	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleBookmarks = get(g:, 'NERDTreeMapToggleBookmarks', 'B')$/;"	v
g:NERDTreeMapToggleFiles	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFiles     = get(g:, 'NERDTreeMapToggleFiles',     'F')$/;"	v
g:NERDTreeMapToggleFilters	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFilters   = get(g:, 'NERDTreeMapToggleFilters',   'f')$/;"	v
g:NERDTreeMapToggleHidden	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleHidden    = get(g:, 'NERDTreeMapToggleHidden',    'I')$/;"	v
g:NERDTreeMapToggleZoom	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleZoom      = get(g:, 'NERDTreeMapToggleZoom',      'A')$/;"	v
g:NERDTreeMapUpdir	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdir           = get(g:, 'NERDTreeMapUpdir',           'u')$/;"	v
g:NERDTreeMapUpdirKeepOpen	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdirKeepOpen   = get(g:, 'NERDTreeMapUpdirKeepOpen',   'U')$/;"	v
g:NERDTreeMarkBookmarks	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMarkBookmarks         = get(g:, 'NERDTreeMarkBookmarks',         1)$/;"	v
g:NERDTreeMenuController	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuDown	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuDown           = get(g:, 'NERDTreeMenuDown',           'j')$/;"	v
g:NERDTreeMenuItem	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMenuUp	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuUp             = get(g:, 'NERDTreeMenuUp',             'k')$/;"	v
g:NERDTreeMinimalMenu	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalMenu           = get(g:, 'NERDTreeMinimalMenu',           0)$/;"	v
g:NERDTreeMinimalUI	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalUI             = get(g:, 'NERDTreeMinimalUI',             0)$/;"	v
g:NERDTreeMouseMode	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMouseMode             = get(g:, 'NERDTreeMouseMode',             1)$/;"	v
g:NERDTreeNaturalSort	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNaturalSort           = get(g:, 'NERDTreeNaturalSort',           0)$/;"	v
g:NERDTreeNodeDelimiter	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00a0")$/;"	v
g:NERDTreeNodeDelimiter	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00b7")$/;"	v
g:NERDTreeNodeDelimiter	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\x07")$/;"	v
g:NERDTreeNotificationThreshold	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNotificationThreshold = get(g:, 'NERDTreeNotificationThreshold', 100)$/;"	v
g:NERDTreeOldSortOrder	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	vim/pack/plugins/start/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeQuitOnOpen	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeQuitOnOpen            = get(g:, 'NERDTreeQuitOnOpen',            0)$/;"	v
g:NERDTreeRemoveDirCmd	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rm -rf ')$/;"	v
g:NERDTreeRemoveDirCmd	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rmdir \/s \/q ')$/;"	v
g:NERDTreeRespectWildIgnore	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeRespectWildIgnore     = get(g:, 'NERDTreeRespectWildIgnore',     0)$/;"	v
g:NERDTreeShowBookmarks	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowBookmarks         = get(g:, 'NERDTreeShowBookmarks',         0)$/;"	v
g:NERDTreeShowFiles	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowFiles             = get(g:, 'NERDTreeShowFiles',             1)$/;"	v
g:NERDTreeShowHidden	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowHidden            = get(g:, 'NERDTreeShowHidden',            0)$/;"	v
g:NERDTreeShowLineNumbers	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowLineNumbers       = get(g:, 'NERDTreeShowLineNumbers',       0)$/;"	v
g:NERDTreeSortDirs	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortDirs              = get(g:, 'NERDTreeSortDirs',              1)$/;"	v
g:NERDTreeSortHiddenFirst	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortHiddenFirst       = get(g:, 'NERDTreeSortHiddenFirst',       1)$/;"	v
g:NERDTreeSortOrder	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortOrder    = get(g:, 'NERDTreeSortOrder', ['\\\/$', '*', '\\.swp$', '\\.bak$', '\\~$'])$/;"	v
g:NERDTreeStatusline	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeStatusline = get(g:, 'NERDTreeStatusline', "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}")$/;"	v
g:NERDTreeUI	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUseTCD	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeUseTCD                = get(g:, 'NERDTreeUseTCD',                0)$/;"	v
g:NERDTreeWinPos	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinPos  = get(g:, 'NERDTreeWinPos', 'left')$/;"	v
g:NERDTreeWinSize	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinSize = get(g:, 'NERDTreeWinSize', 31)$/;"	v
g:__ale_c_project_filenames	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^let g:__ale_c_project_filenames = ['.git\/HEAD', 'configure', 'Makefile', 'CMakeLists.txt']$/;"	v
g:__gutentags_vim_is_leaving	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:__gutentags_vim_is_leaving = 0$/;"	v
g:ale#util#error_priority	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^let g:ale#util#error_priority = 5$/;"	v
g:ale#util#info_priority	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^let g:ale#util#info_priority = 3$/;"	v
g:ale#util#nul_file	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^        let g:ale#util#nul_file = 'nul'$/;"	v
g:ale#util#nul_file	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^    let g:ale#util#nul_file = '\/dev\/null'$/;"	v
g:ale#util#style_error_priority	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^let g:ale#util#style_error_priority = 2$/;"	v
g:ale#util#style_warning_priority	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^let g:ale#util#style_warning_priority = 1$/;"	v
g:ale#util#warning_priority	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^let g:ale#util#warning_priority = 4$/;"	v
g:ale_buffer_info	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_buffer_info = {}$/;"	v
g:ale_c_build_dir_names	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^let g:ale_c_build_dir_names = get(g:, 'ale_c_build_dir_names', [$/;"	v
g:ale_change_sign_column_color	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let g:ale_change_sign_column_color = get(g:, 'ale_change_sign_column_color', 0)$/;"	v
g:ale_close_preview_on_insert	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_close_preview_on_insert = get(g:, 'ale_close_preview_on_insert', 0)$/;"	v
g:ale_cmake_cmakelint_executable	vim/pack/plugins/start/ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_executable =$/;"	v
g:ale_cmake_cmakelint_options	vim/pack/plugins/start/ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_options =$/;"	v
g:ale_command_wrapper	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^let g:ale_command_wrapper = get(g:, 'ale_command_wrapper', '')$/;"	v
g:ale_completion_autoimport	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let g:ale_completion_autoimport = get(g:, 'ale_completion_autoimport', 0)$/;"	v
g:ale_completion_delay	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let g:ale_completion_delay = get(g:, 'ale_completion_delay', 100)$/;"	v
g:ale_completion_enabled	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_completion_enabled = get(g:, 'ale_completion_enabled', 0)$/;"	v
g:ale_completion_excluded_words	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let g:ale_completion_excluded_words = get(g:, 'ale_completion_excluded_words', [])$/;"	v
g:ale_completion_max_suggestions	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let g:ale_completion_max_suggestions = get(g:, 'ale_completion_max_suggestions', 50)$/;"	v
g:ale_completion_symbols	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let g:ale_completion_symbols = get(g:, 'ale_completion_symbols', {$/;"	v
g:ale_completion_tsserver_remove_warnings	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let g:ale_completion_tsserver_remove_warnings = get(g:, 'ale_completion_tsserver_remove_warnings', 0)$/;"	v
g:ale_cs_mcs_options	vim/pack/plugins/start/ale/ale_linters/cs/mcs.vim	/^let g:ale_cs_mcs_options = get(g:, 'ale_cs_mcs_options', '')$/;"	v
g:ale_cursor_detail	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_cursor_detail = get(g:, 'ale_cursor_detail', 0)$/;"	v
g:ale_default_navigation	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^let g:ale_default_navigation = get(g:, 'ale_default_navigation', 'buffer')$/;"	v
g:ale_default_navigation	vim/pack/plugins/start/ale/autoload/ale/references.vim	/^let g:ale_default_navigation = get(g:, 'ale_default_navigation', 'buffer')$/;"	v
g:ale_detail_to_floating_preview	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_detail_to_floating_preview = get(g:, 'ale_detail_to_floating_preview', 0)$/;"	v
g:ale_disable_lsp	vim/pack/plugins/start/ale/autoload/ale.vim	/^let g:ale_disable_lsp = get(g:, 'ale_disable_lsp', 0)$/;"	v
g:ale_echo_cursor	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_echo_cursor = get(g:, 'ale_echo_cursor', 1)$/;"	v
g:ale_echo_delay	vim/pack/plugins/start/ale/autoload/ale/cursor.vim	/^let g:ale_echo_delay = get(g:, 'ale_echo_delay', 10)$/;"	v
g:ale_echo_msg_error_str	vim/pack/plugins/start/ale/autoload/ale.vim	/^let g:ale_echo_msg_error_str = get(g:, 'ale_echo_msg_error_str', 'Error')$/;"	v
g:ale_echo_msg_format	vim/pack/plugins/start/ale/autoload/ale/cursor.vim	/^let g:ale_echo_msg_format = get(g:, 'ale_echo_msg_format', '%code: %%s')$/;"	v
g:ale_echo_msg_info_str	vim/pack/plugins/start/ale/autoload/ale.vim	/^let g:ale_echo_msg_info_str = get(g:, 'ale_echo_msg_info_str', 'Info')$/;"	v
g:ale_echo_msg_log_str	vim/pack/plugins/start/ale/autoload/ale.vim	/^let g:ale_echo_msg_log_str = get(g:, 'ale_echo_msg_log_str', 'Log')$/;"	v
g:ale_echo_msg_warning_str	vim/pack/plugins/start/ale/autoload/ale.vim	/^let g:ale_echo_msg_warning_str = get(g:, 'ale_echo_msg_warning_str', 'Warning')$/;"	v
g:ale_enabled	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_enabled = get(g:, 'ale_enabled', 1)$/;"	v
g:ale_erlang_dialyzer_executable	vim/pack/plugins/start/ale/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_executable =$/;"	v
g:ale_erlang_dialyzer_options	vim/pack/plugins/start/ale/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_options =$/;"	v
g:ale_erlang_dialyzer_plt_file	vim/pack/plugins/start/ale/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_plt_file =$/;"	v
g:ale_erlang_dialyzer_rebar3_profile	vim/pack/plugins/start/ale/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_rebar3_profile =$/;"	v
g:ale_erlang_erlc_executable	vim/pack/plugins/start/ale/ale_linters/erlang/erlc.vim	/^let g:ale_erlang_erlc_executable = get(g:, 'ale_erlang_erlc_executable', 'erlc')$/;"	v
g:ale_erlang_erlc_options	vim/pack/plugins/start/ale/ale_linters/erlang/erlc.vim	/^let g:ale_erlang_erlc_options = get(g:, 'ale_erlang_erlc_options', '')$/;"	v
g:ale_exclude_highlights	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_exclude_highlights = get(g:, 'ale_exclude_highlights', [])$/;"	v
g:ale_filename_mappings	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filename_mappings	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filename_mappings	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filetype_blacklist	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_filetype_blacklist = [$/;"	v
g:ale_fix_buffer_data	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_fix_buffer_data = {}$/;"	v
g:ale_fix_on_save	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_fix_on_save = get(g:, 'ale_fix_on_save', 0)$/;"	v
g:ale_fix_on_save_ignore	vim/pack/plugins/start/ale/autoload/ale/fix.vim	/^let g:ale_fix_on_save_ignore = get(g:, 'ale_fix_on_save_ignore', {})$/;"	v
g:ale_fixers	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_fixers = get(g:, 'ale_fixers', {})$/;"	v
g:ale_floating_preview	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_floating_preview = get(g:, 'ale_floating_preview', 0)$/;"	v
g:ale_floating_window_border	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_floating_window_border = get(g:, 'ale_floating_window_border', ['|', '-', '+', '+', '+', '+'])$/;"	v
g:ale_go_go111module	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_go_go111module = get(g:, 'ale_go_go111module', '')$/;"	v
g:ale_history_enabled	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_history_enabled = get(g:, 'ale_history_enabled', 1)$/;"	v
g:ale_history_log_output	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_history_log_output = get(g:, 'ale_history_log_output', 1)$/;"	v
g:ale_hover_cursor	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_hover_cursor = get(g:, 'ale_hover_cursor', 1)$/;"	v
g:ale_hover_to_floating_preview	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_hover_to_floating_preview = get(g:, 'ale_hover_to_floating_preview', 0)$/;"	v
g:ale_hover_to_preview	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_hover_to_preview = get(g:, 'ale_hover_to_preview', 0)$/;"	v
g:ale_html_tidy_executable	vim/pack/plugins/start/ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_executable = get(g:, 'ale_html_tidy_executable', 'tidy')$/;"	v
g:ale_html_tidy_options	vim/pack/plugins/start/ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_options = get(g:, 'ale_html_tidy_options', '-q -e -language en')$/;"	v
g:ale_java_pmd_options	vim/pack/plugins/start/ale/ale_linters/java/pmd.vim	/^    let g:ale_java_pmd_options = '-R category\/java\/bestpractices.xml'$/;"	v
g:ale_keep_list_window_open	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^let g:ale_keep_list_window_open = get(g:, 'ale_keep_list_window_open', 0)$/;"	v
g:ale_kotlin_kotlinc_classpath	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_classpath = get(g:, 'ale_kotlin_kotlinc_classpath', '')$/;"	v
g:ale_kotlin_kotlinc_config_file	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_config_file = get(g:, 'ale_kotlin_kotlinc_config_file', '.ale_kotlinc_config')$/;"	v
g:ale_kotlin_kotlinc_enable_config	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_enable_config = get(g:, 'ale_kotlin_kotlinc_enable_config', 0)$/;"	v
g:ale_kotlin_kotlinc_module_filename	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_module_filename = get(g:, 'ale_kotlin_kotlinc_module_filename', 'module.xml')$/;"	v
g:ale_kotlin_kotlinc_options	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_options = get(g:, 'ale_kotlin_kotlinc_options', '')$/;"	v
g:ale_kotlin_kotlinc_sourcepath	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_sourcepath = get(g:, 'ale_kotlin_kotlinc_sourcepath', '')$/;"	v
g:ale_kotlin_kotlinc_use_module_file	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_use_module_file = get(g:, 'ale_kotlin_kotlinc_use_module_file', 0)$/;"	v
g:ale_lint_delay	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_lint_delay = get(g:, 'ale_lint_delay', 200)$/;"	v
g:ale_lint_on_enter	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_lint_on_enter = get(g:, 'ale_lint_on_enter', 1)$/;"	v
g:ale_lint_on_filetype_changed	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_lint_on_filetype_changed = get(g:, 'ale_lint_on_filetype_changed', 1)$/;"	v
g:ale_lint_on_insert_leave	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_lint_on_insert_leave = get(g:, 'ale_lint_on_insert_leave', 1)$/;"	v
g:ale_lint_on_save	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_lint_on_save = get(g:, 'ale_lint_on_save', 1)$/;"	v
g:ale_lint_on_text_changed	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_lint_on_text_changed = get(g:, 'ale_lint_on_text_changed', 'normal')$/;"	v
g:ale_linter_aliases	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_linter_aliases = get(g:, 'ale_linter_aliases', {})$/;"	v
g:ale_linters	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_linters = get(g:, 'ale_linters', {})$/;"	v
g:ale_linters_explicit	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_linters_explicit = get(g:, 'ale_linters_explicit', 0)$/;"	v
g:ale_linters_ignore	vim/pack/plugins/start/ale/autoload/ale.vim	/^let g:ale_linters_ignore = get(g:, 'ale_linters_ignore', {})$/;"	v
g:ale_list_vertical	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^let g:ale_list_vertical = get(g:, 'ale_list_vertical', 0)$/;"	v
g:ale_list_window_size	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^let g:ale_list_window_size = get(g:, 'ale_list_window_size', 10)$/;"	v
g:ale_loclist_msg_format	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^let g:ale_loclist_msg_format = get(g:, 'ale_loclist_msg_format',$/;"	v
g:ale_lsp_next_message_id	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^let g:ale_lsp_next_message_id = 1$/;"	v
g:ale_lsp_next_version_id	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^let g:ale_lsp_next_version_id = 1$/;"	v
g:ale_lsp_show_message_format	vim/pack/plugins/start/ale/autoload/ale.vim	/^let g:ale_lsp_show_message_format = get(g:, 'ale_lsp_show_message_format', '%severity%:%linter%: %s')$/;"	v
g:ale_lsp_show_message_severity	vim/pack/plugins/start/ale/autoload/ale.vim	/^let g:ale_lsp_show_message_severity = get(g:, 'ale_lsp_show_message_severity', 'error')$/;"	v
g:ale_lsp_suggestions	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_lsp_suggestions = get(g:, 'ale_lsp_suggestions', 0)$/;"	v
g:ale_lsp_types	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let g:ale_lsp_types = {$/;"	v
g:ale_max_buffer_history_size	vim/pack/plugins/start/ale/autoload/ale/history.vim	/^let g:ale_max_buffer_history_size = get(g:, 'ale_max_buffer_history_size', 20)$/;"	v
g:ale_max_signs	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let g:ale_max_signs = get(g:, 'ale_max_signs', -1)$/;"	v
g:ale_objc_clang_options	vim/pack/plugins/start/ale/ale_linters/objc/clang.vim	/^    let g:ale_objc_clang_options = '-std=c11 -Wall'$/;"	v
g:ale_objcpp_clang_options	vim/pack/plugins/start/ale/ale_linters/objcpp/clang.vim	/^    let g:ale_objcpp_clang_options = '-std=c++14 -Wall'$/;"	v
g:ale_open_list	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^let g:ale_open_list = get(g:, 'ale_open_list', 0)$/;"	v
g:ale_perl6_perl6_executable	vim/pack/plugins/start/ale/ale_linters/perl6/perl6.vim	/^let g:ale_perl6_perl6_executable =$/;"	v
g:ale_perl6_perl6_options	vim/pack/plugins/start/ale/ale_linters/perl6/perl6.vim	/^let g:ale_perl6_perl6_options =$/;"	v
g:ale_php_phan_executable	vim/pack/plugins/start/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_executable = get(g:, 'ale_php_phan_executable', 'phan')$/;"	v
g:ale_php_phan_minimum_severity	vim/pack/plugins/start/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_minimum_severity = get(g:, 'ale_php_phan_minimum_severity', 0)$/;"	v
g:ale_php_phan_use_client	vim/pack/plugins/start/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_use_client = get(g:, 'ale_php_phan_use_client', 0)$/;"	v
g:ale_php_phpcs_standard	vim/pack/plugins/start/ale/ale_linters/php/phpcs.vim	/^let g:ale_php_phpcs_standard = get(g:, 'ale_php_phpcs_standard', '')$/;"	v
g:ale_php_phpmd_executable	vim/pack/plugins/start/ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_executable = get(g:, 'ale_php_phpmd_executable', 'phpmd')$/;"	v
g:ale_php_phpmd_ruleset	vim/pack/plugins/start/ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_ruleset = get(g:, 'ale_php_phpmd_ruleset', 'cleancode,codesize,controversial,design,naming,unusedcode')$/;"	v
g:ale_php_phpstan_autoload	vim/pack/plugins/start/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_autoload = get(g:, 'ale_php_phpstan_autoload', '')$/;"	v
g:ale_php_phpstan_configuration	vim/pack/plugins/start/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_configuration = get(g:, 'ale_php_phpstan_configuration', '')$/;"	v
g:ale_php_phpstan_executable	vim/pack/plugins/start/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_executable = get(g:, 'ale_php_phpstan_executable', 'phpstan')$/;"	v
g:ale_php_phpstan_level	vim/pack/plugins/start/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_level = get(g:, 'ale_php_phpstan_level', '')$/;"	v
g:ale_popup_menu_enabled	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_popup_menu_enabled = get(g:, 'ale_popup_menu_enabled', has('gui_running'))$/;"	v
g:ale_puppet_puppetlint_executable	vim/pack/plugins/start/ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_executable = 'puppet-lint'$/;"	v
g:ale_puppet_puppetlint_options	vim/pack/plugins/start/ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_options = ''$/;"	v
g:ale_python_auto_pipenv	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_python_auto_pipenv = get(g:, 'ale_python_auto_pipenv', 0)$/;"	v
g:ale_python_prospector_executable	vim/pack/plugins/start/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_executable =$/;"	v
g:ale_python_prospector_options	vim/pack/plugins/start/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_options =$/;"	v
g:ale_python_prospector_use_global	vim/pack/plugins/start/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_use_global = get(g:, 'ale_python_prospector_use_global', get(g:, 'ale_use_global_executables', 0))$/;"	v
g:ale_r_lintr_lint_package	vim/pack/plugins/start/ale/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_lint_package = get(g:, 'ale_r_lintr_lint_package', 0)$/;"	v
g:ale_r_lintr_options	vim/pack/plugins/start/ale/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_options = get(g:, 'ale_r_lintr_options', 'with_defaults()')$/;"	v
g:ale_rename_tsserver_find_in_comments	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^let g:ale_rename_tsserver_find_in_comments = get(g:, 'ale_rename_tsserver_find_in_comments')$/;"	v
g:ale_rename_tsserver_find_in_strings	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^let g:ale_rename_tsserver_find_in_strings = get(g:, 'ale_rename_tsserver_find_in_strings')$/;"	v
g:ale_root	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_root = get(g:, 'ale_root', {})$/;"	v
g:ale_rust_ignore_error_codes	vim/pack/plugins/start/ale/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_error_codes = []$/;"	v
g:ale_rust_ignore_secondary_spans	vim/pack/plugins/start/ale/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_secondary_spans = 0$/;"	v
g:ale_set_balloons	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_set_balloons = get(g:, 'ale_set_balloons', has('balloon_eval') && has('gui_running'))$/;"	v
g:ale_set_highlights	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_set_highlights = get(g:, 'ale_set_highlights', has('syntax'))$/;"	v
g:ale_set_loclist	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_set_loclist = get(g:, 'ale_set_loclist', 1)$/;"	v
g:ale_set_quickfix	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_set_quickfix = get(g:, 'ale_set_quickfix', 0)$/;"	v
g:ale_set_signs	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_set_signs = get(g:, 'ale_set_signs', has('signs'))$/;"	v
g:ale_sh_shell_default_shell	vim/pack/plugins/start/ale/ale_linters/sh/shell.vim	/^        let g:ale_sh_shell_default_shell = 'bash'$/;"	v
g:ale_sh_shell_default_shell	vim/pack/plugins/start/ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = fnamemodify($SHELL, ':t')$/;"	v
g:ale_sh_shell_default_shell	vim/pack/plugins/start/ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = g:ale_linters_sh_shell_default_shell$/;"	v
g:ale_sign_column_always	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let g:ale_sign_column_always = get(g:, 'ale_sign_column_always', 0)$/;"	v
g:ale_sign_error	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let g:ale_sign_error = get(g:, 'ale_sign_error', '>>')$/;"	v
g:ale_sign_highlight_linenrs	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let g:ale_sign_highlight_linenrs = get(g:, 'ale_sign_highlight_linenrs', 0)$/;"	v
g:ale_sign_info	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let g:ale_sign_info = get(g:, 'ale_sign_info', g:ale_sign_warning)$/;"	v
g:ale_sign_offset	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let g:ale_sign_offset = get(g:, 'ale_sign_offset', 1000000)$/;"	v
g:ale_sign_priority	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let g:ale_sign_priority = get(g:, 'ale_sign_priority', 30)$/;"	v
g:ale_sign_style_error	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let g:ale_sign_style_error = get(g:, 'ale_sign_style_error', g:ale_sign_error)$/;"	v
g:ale_sign_style_warning	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let g:ale_sign_style_warning = get(g:, 'ale_sign_style_warning', g:ale_sign_warning)$/;"	v
g:ale_sign_warning	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let g:ale_sign_warning = get(g:, 'ale_sign_warning', '--')$/;"	v
g:ale_tex_chktex_executable	vim/pack/plugins/start/ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_executable =$/;"	v
g:ale_tex_chktex_options	vim/pack/plugins/start/ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_options =$/;"	v
g:ale_tsserver_types	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let g:ale_tsserver_types = {$/;"	v
g:ale_type_map	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^let g:ale_type_map = get(g:, 'ale_type_map', {})$/;"	v
g:ale_update_tagstack	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^let g:ale_update_tagstack = get(g:, 'ale_update_tagstack', 1)$/;"	v
g:ale_verilog_verilator_options	vim/pack/plugins/start/ale/ale_linters/verilog/verilator.vim	/^    let g:ale_verilog_verilator_options = ''$/;"	v
g:ale_virtualenv_dir_names	vim/pack/plugins/start/ale/autoload/ale/python.vim	/^let g:ale_virtualenv_dir_names = get(g:, 'ale_virtualenv_dir_names', [$/;"	v
g:ale_virtualtext_cursor	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_virtualtext_cursor = get(g:, 'ale_virtualtext_cursor', 0)$/;"	v
g:ale_virtualtext_delay	vim/pack/plugins/start/ale/autoload/ale/virtualtext.vim	/^let g:ale_virtualtext_delay = get(g:, 'ale_virtualtext_delay', 10)$/;"	v
g:ale_warn_about_trailing_blank_lines	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_warn_about_trailing_blank_lines = get(g:, 'ale_warn_about_trailing_blank_lines', 1)$/;"	v
g:ale_warn_about_trailing_whitespace	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:ale_warn_about_trailing_whitespace = get(g:, 'ale_warn_about_trailing_whitespace', 1)$/;"	v
g:ale_xml_xmllint_executable	vim/pack/plugins/start/ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_executable = get(g:, 'ale_xml_xmllint_executable', 'xmllint')$/;"	v
g:ale_xml_xmllint_options	vim/pack/plugins/start/ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_options = get(g:, 'ale_xml_xmllint_options', '')$/;"	v
g:gutentags_add_ctrlp_root_markers	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_ctrlp_root_markers = get(g:, 'gutentags_add_ctrlp_root_markers', 1)$/;"	v
g:gutentags_add_default_project_roots	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_build_inverted_index	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_build_inverted_index = 0$/;"	v
g:gutentags_cscope_executable	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_filetypes	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_filetypes = get(g:, 'gutentags_exclude_filetypes', [])$/;"	v
g:gutentags_exclude_project_root	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'])$/;"	v
g:gutentags_fake	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslckout']$/;"	v
g:gutentags_project_root	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:loaded_ale	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:loaded_ale = 1$/;"	v
g:loaded_ale_dont_use_this_in_other_plugins_please	vim/pack/plugins/start/ale/plugin/ale.vim	/^let g:loaded_ale_dont_use_this_in_other_plugins_please = 1$/;"	v
g:loaded_ctrlp	vim/pack/plugins/start/ctrlp.vim/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_gutentags	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_nerdtree_autoload	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	vim/pack/plugins/start/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_syntastic_kotlin_kotlinc_checker	vim/pack/plugins/start/kotlin-vim/syntax_checkers/kotlin/kotlinc.vim	/^let g:loaded_syntastic_kotlin_kotlinc_checker = 1$/;"	v
g:neosolarized_bold	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:neosolarized_bold = get(g:, "neosolarized_bold", 1)$/;"	v
g:neosolarized_contrast	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:neosolarized_contrast = get(g:, "neosolarized_contrast", "normal")$/;"	v
g:neosolarized_diffmode	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:neosolarized_diffmode = get(g:, "neosolarized_diffmode", "normal")$/;"	v
g:neosolarized_italic	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:neosolarized_italic = get(g:, "neosolarized_italic", 0)$/;"	v
g:neosolarized_termBoldAsBright	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:neosolarized_termBoldAsBright = get(g:, "neosolarized_termBoldAsBright", 1)$/;"	v
g:neosolarized_termtrans	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:neosolarized_termtrans = get(g:, "neosolarized_termtrans", 0)$/;"	v
g:neosolarized_underline	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:neosolarized_underline = get(g:, "neosolarized_underline", 1)$/;"	v
g:neosolarized_vertSplitBgTrans	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:neosolarized_vertSplitBgTrans = get(g:, "neosolarized_vertSplitBgTrans", 1)$/;"	v
g:neosolarized_visibility	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:neosolarized_visibility = get(g:, "neosolarized_visibility", "normal")$/;"	v
g:syntastic_kotlin_kotlinc_classpath	vim/pack/plugins/start/kotlin-vim/syntax_checkers/kotlin/kotlinc.vim	/^	let g:syntastic_kotlin_kotlinc_classpath = ""$/;"	v
g:syntastic_kotlin_kotlinc_config_file	vim/pack/plugins/start/kotlin-vim/syntax_checkers/kotlin/kotlinc.vim	/^	let g:syntastic_kotlin_kotlinc_config_file = ".syntastic_kotlinc_config"$/;"	v
g:syntastic_kotlin_kotlinc_config_file_enabled	vim/pack/plugins/start/kotlin-vim/syntax_checkers/kotlin/kotlinc.vim	/^	let g:syntastic_kotlin_kotlinc_config_file_enabled = 0$/;"	v
g:syntastic_kotlin_kotlinc_delete_output	vim/pack/plugins/start/kotlin-vim/syntax_checkers/kotlin/kotlinc.vim	/^	let g:syntastic_kotlin_kotlinc_delete_output = 1$/;"	v
g:syntastic_kotlin_kotlinc_options	vim/pack/plugins/start/kotlin-vim/syntax_checkers/kotlin/kotlinc.vim	/^	let g:syntastic_kotlin_kotlinc_options = ""$/;"	v
g:syntastic_kotlin_kotlinc_sourcepath	vim/pack/plugins/start/kotlin-vim/syntax_checkers/kotlin/kotlinc.vim	/^	let g:syntastic_kotlin_kotlinc_sourcepath = ""$/;"	v
g:terminal_color_0	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:terminal_color_0 = s:gui_base03$/;"	v
g:terminal_color_1	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:terminal_color_1 = s:gui_red$/;"	v
g:terminal_color_10	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_10 = g:terminal_color_2$/;"	v
g:terminal_color_10	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_10 = s:gui_base01$/;"	v
g:terminal_color_11	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_11 = g:terminal_color_3$/;"	v
g:terminal_color_11	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_11 = s:gui_base00$/;"	v
g:terminal_color_12	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_12 = g:terminal_color_4$/;"	v
g:terminal_color_12	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_12 = s:gui_base0$/;"	v
g:terminal_color_13	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_13 = g:terminal_color_5$/;"	v
g:terminal_color_13	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_13 = s:gui_violet$/;"	v
g:terminal_color_14	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_14 = g:terminal_color_6$/;"	v
g:terminal_color_14	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_14 = s:gui_base1$/;"	v
g:terminal_color_15	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_15 = g:terminal_color_7$/;"	v
g:terminal_color_15	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_15 = s:gui_base3$/;"	v
g:terminal_color_2	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:terminal_color_2 = s:gui_green$/;"	v
g:terminal_color_3	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:terminal_color_3 = s:gui_yellow$/;"	v
g:terminal_color_4	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:terminal_color_4 = s:gui_blue$/;"	v
g:terminal_color_5	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:terminal_color_5 = s:gui_magenta$/;"	v
g:terminal_color_6	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:terminal_color_6 = s:gui_cyan$/;"	v
g:terminal_color_7	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let g:terminal_color_7 = s:gui_base2$/;"	v
g:terminal_color_8	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_8 = g:terminal_color_0$/;"	v
g:terminal_color_8	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_8 = s:gui_base02$/;"	v
g:terminal_color_9	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_9 = g:terminal_color_1$/;"	v
g:terminal_color_9	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^  let g:terminal_color_9 = s:gui_orange$/;"	v
g:typescript_compiler_binary	vim/pack/plugins/start/typescript-vim/compiler/typescript.vim	/^  let g:typescript_compiler_binary = "tsc"$/;"	v
g:typescript_compiler_options	vim/pack/plugins/start/typescript-vim/compiler/typescript.vim	/^  let g:typescript_compiler_options = ""$/;"	v
gather_candidates	vim/pack/plugins/start/ale/rplugin/python3/deoplete/sources/ale.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
generate_wildignore_options	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:generate_wildignore_options() abort$/;"	f
get_complete_position	vim/pack/plugins/start/ale/rplugin/python3/deoplete/sources/ale.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_ctags_executable	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
getbookmarks	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
getenv	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f
getextvar	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
gethistdata	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f
gethistloc	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f
getinput	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f
getinput	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
getnewmix	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
getparent	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f
getregs	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f
getundo	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f
glbpath	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
globdirs	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
gutentags#add_job	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_get_project_root	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_get_project_root(path) abort$/;"	f
gutentags#default_stderr_cb	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stderr_cb(chan, msg) abort$/;"	f
gutentags#default_stdout_cb	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stdout_cb(chan, msg) abort$/;"	f
gutentags#error	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#on_vim_leave_pre	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#on_vim_leave_pre() abort$/;"	f
gutentags#remove_job	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	vim/pack/plugins/start/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
handleLeftClick	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick() abort$/;"	f
handleMiddleMouse	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse() abort$/;"	f
headntail	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f
highlight	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
highlight_line	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^function! s:highlight_line(bufnr, lnum, group) abort$/;"	f
highlight_range	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^function! s:highlight_range(bufnr, range, group) abort$/;"	f
hs_highlight_boolean	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let hs_highlight_delimiters=1$/;"	v
i	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> i <NOP>$/;"	m
ifilter	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ifilter(list, str)$/;"	f
ignore	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f
initCustomOpenArgs	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:initCustomOpenArgs() abort$/;"	f
inputPrompt	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:inputPrompt(action)$/;"	f
insertcache	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
insertstr	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f
iscmdwin	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
iscontOne	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:iscontOne(i,num,cont)$/;"	f
ispathitem	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f
jumpToChild	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last) abort$/;"	f
jumpToFirstChild	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node) abort$/;"	f
jumpToLastChild	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node) abort$/;"	f
jumpToNextSibling	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node) abort$/;"	f
jumpToParent	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node) abort$/;"	f
jumpToPrevSibling	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node) abort$/;"	f
jumpToRoot	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot() abort$/;"	f
jumpToSibling	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward) abort$/;"	f
label_col	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:label_col()$/;"	f
lash	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f
lash	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f
lastvisual	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f
leavepre	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f
lineout	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f
loaded_nerd_tree	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
log	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f
looking_at	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:looking_at()$/;"	f
lsCmd	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f
main_syntax	vim/pack/plugins/start/typescript-vim/syntax/typescript.vim	/^  let main_syntax = "typescript"$/;"	v
manual_update_tags	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
match_window_opts	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:match_window_opts()$/;"	f
matchaddpos	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^function! s:matchaddpos(group, pos_list) abort$/;"	f
matchfname	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
matchlens	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
matchtabe	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
matchtabs	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
max	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f
maxf	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f
mergelists	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f
message	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^function! s:message(message) abort$/;"	f
message	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^function! s:message(message) abort$/;"	f
message	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^function! s:message(message) abort$/;"	f
mfunc	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f
migemo	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:migemo(str)$/;"	f
mixedsort	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
mmode	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f
modevar	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f
modify	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
msg	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
mtype	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f
multipliers	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
narrowable	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f
nerdtree#checkForBrowse	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir) abort$/;"	f
nerdtree#closeBookmarksOnOpen	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeBookmarksOnOpen() abort$/;"	f
nerdtree#closeTreeOnOpen	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeOnOpen() abort$/;"	f
nerdtree#compareNodePaths	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodePaths(p1, p2) abort$/;"	f
nerdtree#compareNodes	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2) abort$/;"	f
nerdtree#completeBookmarks	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P) abort$/;"	f
nerdtree#deprecated	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...) abort$/;"	f
nerdtree#echo	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg) abort$/;"	f
nerdtree#echoError	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg) abort$/;"	f
nerdtree#echoWarning	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg) abort$/;"	f
nerdtree#exec	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd, ignoreAll) abort$/;"	f
nerdtree#has_opt	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name) abort$/;"	f
nerdtree#loadClassFiles	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles() abort$/;"	f
nerdtree#postSourceActions	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions() abort$/;"	f
nerdtree#renderView	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView() abort$/;"	f
nerdtree#runningCygwin	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin() abort$/;"	f
nerdtree#runningWindows	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows() abort$/;"	f
nerdtree#slash	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#slash() abort$/;"	f
nerdtree#ui_glue#bookmarkNode	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...) abort$/;"	f
nerdtree#ui_glue#chRootCwd	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd() abort$/;"	f
nerdtree#ui_glue#clearBookmarks	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks) abort$/;"	f
nerdtree#ui_glue#createDefaultBindings	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings() abort$/;"	f
nerdtree#ui_glue#invokeKeyMap	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key) abort$/;"	f
nerdtree#ui_glue#openBookmark	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name) abort$/;"	f
nerdtree#ui_glue#revealBookmark	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name) abort$/;"	f
nerdtree#ui_glue#setupCommands	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands() abort$/;"	f
nerdtree#ui_glue#upDir	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState) abort$/;"	f
nerdtree#version	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version(...) abort$/;"	f
newcache	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f
nocache	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f
nocache	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f
nocache	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f
nonamecond	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nonamecond(str, filpath)$/;"	f
nosort	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f
nosplit	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f
nvim_job_exit_wrapper	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
nvim_job_out_wrapper	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
o	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> o <NOP>$/;"	m
offset	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:offset(lines, height)$/;"	f
openExplorer	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node) abort$/;"	f
openHSplit	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target) abort$/;"	f
openHSplitBookmark	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplitBookmark(bm) abort$/;"	f
openInNewTab	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target) abort$/;"	f
openInNewTabSilent	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target) abort$/;"	f
openNodeRecursively	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node) abort$/;"	f
openVSplit	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target) abort$/;"	f
openVSplitBookmark	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplitBookmark(bm) abort$/;"	f
openfile	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
opts	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f
others	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:others(p)$/;"	f
parseJSON	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! s:parseJSON(buffer, lines) abort$/;"	f
parseLines	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^function! s:parseLines(buffer, lines) abort$/;"	f
parseline	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f
parts	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
pathshorten	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
previewBookmark	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewBookmark(bookmark) abort$/;"	f
previewNodeCurrent	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node) abort$/;"	f
previewNodeHSplit	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node) abort$/;"	f
previewNodeHSplitBookmark	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplitBookmark(bookmark) abort$/;"	f
previewNodeVSplit	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node) abort$/;"	f
previewNodeVSplitBookmark	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplitBookmark(bookmark) abort$/;"	f
previous_token	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:previous_token()$/;"	f
process	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
process	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
process	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f
process_options_file	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
promptToDelBuffer	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
q	vim/pack/plugins/start/ale/ftplugin/ale-fix-suggest.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	vim/pack/plugins/start/ale/ftplugin/ale-preview.vim	/^noremap <buffer> q :q!<CR>$/;"	m
record	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
reformat	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
refreshCurrent	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node) abort$/;"	f
refreshRoot	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot() abort$/;"	f
regexfilter	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
regisfilter	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
remarksigns	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f
renameBuffer	vim/pack/plugins/start/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
reuseWin	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
s:Bookmark	vim/pack/plugins/start/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:CFG_TO_LSP_SEVERITY	vim/pack/plugins/start/ale/autoload/ale/lsp_window.vim	/^let s:CFG_TO_LSP_SEVERITY = {$/;"	v
s:COMPLETION_TRIGGER_CHARACTER	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_CHARACTER = 2$/;"	v
s:COMPLETION_TRIGGER_INVOKED	vim/pack/plugins/start/ale/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_INVOKED = 1$/;"	v
s:Creator	vim/pack/plugins/start/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Event	vim/pack/plugins/start/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FlagSet	vim/pack/plugins/start/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:INTERNAL_ERROR	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:INTERNAL_ERROR = -32603$/;"	v
s:INVALID_PARAMS	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:INVALID_PARAMS = -32602$/;"	v
s:INVALID_REQUEST	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:INVALID_REQUEST = -32600$/;"	v
s:KeyMap	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:LSP_INSERT_TEXT_FORMAT_PLAIN	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let s:LSP_INSERT_TEXT_FORMAT_PLAIN = 1$/;"	v
s:LSP_INSERT_TEXT_FORMAT_SNIPPET	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let s:LSP_INSERT_TEXT_FORMAT_SNIPPET = 2$/;"	v
s:LSP_MESSAGE_TYPE_DISABLED	vim/pack/plugins/start/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_DISABLED = 0$/;"	v
s:LSP_MESSAGE_TYPE_ERROR	vim/pack/plugins/start/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_ERROR = 1$/;"	v
s:LSP_MESSAGE_TYPE_INFORMATION	vim/pack/plugins/start/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_INFORMATION = 3$/;"	v
s:LSP_MESSAGE_TYPE_LOG	vim/pack/plugins/start/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_LOG = 4$/;"	v
s:LSP_MESSAGE_TYPE_WARNING	vim/pack/plugins/start/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_WARNING = 2$/;"	v
s:MAX_COL_SIZE	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^let s:MAX_COL_SIZE = 1073741824 " pow(2, 30)$/;"	v
s:MAX_POS_VALUES	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^let s:MAX_POS_VALUES = 8$/;"	v
s:METHOD_NOT_FOUND	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:METHOD_NOT_FOUND = -32601$/;"	v
s:MenuController	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	vim/pack/plugins/start/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTree	vim/pack/plugins/start/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:Notifier	vim/pack/plugins/start/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Opener	vim/pack/plugins/start/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:PARSE_ERROR	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:PARSE_ERROR = -32700$/;"	v
s:Path	vim/pack/plugins/start/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:REQUEST_CANCELLED	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:REQUEST_CANCELLED = -32800$/;"	v
s:SERVER_ERROR_END	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_ERROR_END = -32000$/;"	v
s:SERVER_ERROR_START	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_ERROR_START = -32099$/;"	v
s:SERVER_NOT_INITIALIZED	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_NOT_INITIALIZED = -32002$/;"	v
s:SEVERITY_ERROR	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_ERROR = 1$/;"	v
s:SEVERITY_HINT	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_HINT = 4$/;"	v
s:SEVERITY_INFORMATION	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_INFORMATION = 3$/;"	v
s:SEVERITY_WARNING	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_WARNING = 2$/;"	v
s:TreeDirNode	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	vim/pack/plugins/start/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UI	vim/pack/plugins/start/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:UNKNOWN_ERROR_CODE	vim/pack/plugins/start/ale/autoload/ale/lsp/response.vim	/^let s:UNKNOWN_ERROR_CODE = -32001$/;"	v
s:__ale_julia_project_filenames	vim/pack/plugins/start/ale/autoload/ale/julia.vim	/^let s:__ale_julia_project_filenames = ['REQUIRE', 'Manifest.toml', 'Project.toml']$/;"	v
s:added_db_files	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:ars	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:b	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:b           = ""$/;"	v
s:b	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:b           = ",bold"$/;"	v
s:bb	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:begin_failed_skip_pattern	vim/pack/plugins/start/ale/ale_linters/perl/perl.vim	/^let s:begin_failed_skip_pattern = '\\v' . join([$/;"	v
s:bin_dir	vim/pack/plugins/start/ale/autoload/ale/python.vim	/^let s:bin_dir = has('unix') ? 'bin' : 'Scripts'$/;"	v
s:bins	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:buffer_data	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^    let s:buffer_data = {}$/;"	v
s:c	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:cached_map	vim/pack/plugins/start/ale/autoload/ale/filetypes.vim	/^let s:cached_map = {}$/;"	v
s:ccex	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:channel_map	vim/pack/plugins/start/ale/autoload/ale/socket.vim	/^let s:channel_map = get(s:, 'channel_map', {})$/;"	v
s:classpath_sep	vim/pack/plugins/start/ale/ale_linters/java/javac.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:classpath_sep	vim/pack/plugins/start/ale/ale_linters/kotlin/kotlinc.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:codefix_map	vim/pack/plugins/start/ale/autoload/ale/codefix.vim	/^let s:codefix_map = {}$/;"	v
s:col_end_patterns	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^let s:col_end_patterns = [$/;"	v
s:command_output	vim/pack/plugins/start/ale/autoload/ale/assert.vim	/^let s:command_output = []$/;"	v
s:compare_lim	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^let s:compare_lim = 3000$/;"	v
s:compile_commands_cache	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^    let s:compile_commands_cache = {}$/;"	v
s:connections	vim/pack/plugins/start/ale/autoload/ale/lsp.vim	/^let s:connections = get(s:, 'connections', {})$/;"	v
s:continuation	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^let s:continuation = get(g:,'typescript_continuation',$/;"	v
s:cpo_save	vim/pack/plugins/start/typescript-vim/compiler/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/pack/plugins/start/typescript-vim/ftplugin/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:current_ale_version	vim/pack/plugins/start/ale/autoload/ale.vim	/^let s:current_ale_version = [3, 1, 0]$/;"	v
s:current_syntax	vim/pack/plugins/start/vim-jsx-typescript/after/syntax/typescriptreact.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:cursor_timer	vim/pack/plugins/start/ale/autoload/ale/cursor.vim	/^let s:cursor_timer = -1$/;"	v
s:cursor_timer	vim/pack/plugins/start/ale/autoload/ale/virtualtext.vim	/^let s:cursor_timer = -1$/;"	v
s:custom_handlers_map	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^let s:custom_handlers_map = get(s:, 'custom_handlers_map', {})$/;"	v
s:default_ale_linter_aliases	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^let s:default_ale_linter_aliases = {$/;"	v
s:default_ale_linters	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^let s:default_ale_linters = {$/;"	v
s:default_registry	vim/pack/plugins/start/ale/autoload/ale/fix/registry.vim	/^let s:default_registry = {$/;"	v
s:did_check_exe	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:dirArrows	vim/pack/plugins/start/nerdtree/syntax/nerdtree.vim	/^    let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpandable, '~]\\-')$/;"	v
s:dircounts	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:enable_neovim	vim/pack/plugins/start/ale/ale_linters/vim/vint.vim	/^let s:enable_neovim = has('nvim') ? ' --enable-neovim' : ''$/;"	v
s:end_col_pattern_map	vim/pack/plugins/start/ale/ale_linters/python/flake8.vim	/^let s:end_col_pattern_map = {$/;"	v
s:end_col_patterns	vim/pack/plugins/start/ale/ale_linters/nim/nimcheck.vim	/^let s:end_col_patterns = [$/;"	v
s:executable_cache_map	vim/pack/plugins/start/ale/autoload/ale/engine.vim	/^    let s:executable_cache_map = {}$/;"	v
s:executables	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^let s:executables = [$/;"	v
s:fg_pdef	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:ficounts	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:filecounts	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:format	vim/pack/plugins/start/ale/ale_linters/vim/vint.vim	/^let s:format = '-f "{file_path}:{line_number}:{column_number}: {severity}: {policy_name} - {description} (see {reference})"'$/;"	v
s:fpats	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:getcmdwintype_exists	vim/pack/plugins/start/ale/autoload/ale.vim	/^let s:getcmdwintype_exists = exists('*getcmdwintype')$/;"	v
s:glbs	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:global_variable_list	vim/pack/plugins/start/ale/autoload/ale/debugging.vim	/^let s:global_variable_list = [$/;"	v
s:go_to_definition_map	vim/pack/plugins/start/ale/autoload/ale/definition.vim	/^let s:go_to_definition_map = {}$/;"	v
s:gui_back	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^        let s:gui_back  =   s:gui_base03$/;"	v
s:gui_back	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_back        = "NONE"$/;"	v
s:gui_back	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_back        = s:gui_back$/;"	v
s:gui_back	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_back        = s:gui_base02$/;"	v
s:gui_back	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_back        = s:gui_base03$/;"	v
s:gui_base0	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base0       = "#839496"$/;"	v
s:gui_base0	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base0       = s:gui_base1$/;"	v
s:gui_base0	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base0     =   s:gui_temp00$/;"	v
s:gui_base00	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base00      = "#657b83"$/;"	v
s:gui_base00	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base00      = s:gui_base0$/;"	v
s:gui_base00	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base00    =   s:gui_base0$/;"	v
s:gui_base01	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base01      = "#586e75"$/;"	v
s:gui_base01	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base01      = s:gui_base00$/;"	v
s:gui_base01	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base01    =   s:gui_base1$/;"	v
s:gui_base02	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base02      = "#073642"$/;"	v
s:gui_base02	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base02    =   s:gui_base2$/;"	v
s:gui_base03	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base03      = "#002b36"$/;"	v
s:gui_base03	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base03    =   s:gui_base3$/;"	v
s:gui_base1	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base1       = "#93a1a1"$/;"	v
s:gui_base1	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base1       = s:gui_base2$/;"	v
s:gui_base1	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base1     =   s:gui_temp01$/;"	v
s:gui_base2	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base2       = "#eee8d5"$/;"	v
s:gui_base2	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base2       = s:gui_base3$/;"	v
s:gui_base2	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base2     =   s:gui_temp02$/;"	v
s:gui_base3	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base3       = "#fdf6e3"$/;"	v
s:gui_base3	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_base3     =   s:gui_temp03$/;"	v
s:gui_blue	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_blue        = "#268bd2"$/;"	v
s:gui_cyan	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_cyan        = "#2aa198"$/;"	v
s:gui_green	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_green       = "#719e07" "experimental$/;"	v
s:gui_magenta	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_magenta     = "#d33682"$/;"	v
s:gui_mode	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_mode       = "gui"$/;"	v
s:gui_none	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_none        = "NONE"$/;"	v
s:gui_orange	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_orange      = "#cb4b16"$/;"	v
s:gui_red	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_red         = "#dc322f"$/;"	v
s:gui_temp00	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_temp00    =   s:gui_base00$/;"	v
s:gui_temp01	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_temp01    =   s:gui_base01$/;"	v
s:gui_temp02	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_temp02    =   s:gui_base02$/;"	v
s:gui_temp03	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_temp03    =   s:gui_base03$/;"	v
s:gui_violet	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_violet      = "#6c71c4"$/;"	v
s:gui_yellow	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:gui_yellow      = "#b58900"$/;"	v
s:has_features	vim/pack/plugins/start/ale/plugin/ale.vim	/^    let s:has_features = has('timers') && exists('*job_start') && exists('*ch_close_in')$/;"	v
s:has_features	vim/pack/plugins/start/ale/plugin/ale.vim	/^    let s:has_features = has('timers') && has('nvim-0.2.0')$/;"	v
s:has_nvim_highlight	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^let s:has_nvim_highlight = exists('*nvim_buf_add_highlight') && exists('*nvim_buf_clear_namespace')$/;"	v
s:hlgrps	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:hover_map	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^let s:hover_map = {}$/;"	v
s:i	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:i           = ""$/;"	v
s:i	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:i           = ",italic"$/;"	v
s:id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:init_path	vim/pack/plugins/start/ale/autoload/ale/gradle.vim	/^let s:init_path = has('win32')$/;"	v
s:inline_pattern	vim/pack/plugins/start/ale/autoload/ale/handlers/gcc.vim	/^let s:inline_pattern = '\\v inlined from .* at \\<stdin\\>:(\\d+):(\\d+):$'$/;"	v
s:job_kill_timers	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^    let s:job_kill_timers = {}$/;"	v
s:job_map	vim/pack/plugins/start/ale/autoload/ale/job.vim	/^    let s:job_map = {}$/;"	v
s:keyMaps	vim/pack/plugins/start/nerdtree/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:known_files	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:kprange	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:last_done_pos	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let s:last_done_pos = []$/;"	v
s:last_list	vim/pack/plugins/start/ale/autoload/ale/preview.vim	/^    let s:last_list = []$/;"	v
s:last_options	vim/pack/plugins/start/ale/autoload/ale/preview.vim	/^    let s:last_options = {}$/;"	v
s:last_pattern_options	vim/pack/plugins/start/ale/autoload/ale/pattern_options.vim	/^let s:last_pattern_options = {}$/;"	v
s:last_pos	vim/pack/plugins/start/ale/autoload/ale/hover.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_pos	vim/pack/plugins/start/ale/autoload/ale/virtualtext.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_wildignores	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:last_wildignores = ''$/;"	v
s:lint_timer	vim/pack/plugins/start/ale/autoload/ale.vim	/^let s:lint_timer = -1$/;"	v
s:linters	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^let s:linters = {}$/;"	v
s:lisp_regex	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let s:lisp_regex = '\\v[a-zA-Z_\\-][a-zA-Z_\\-0-9]*$'$/;"	v
s:lsp_linter_map	vim/pack/plugins/start/ale/autoload/ale/lsp_linter.vim	/^    let s:lsp_linter_map = {}$/;"	v
s:n	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:n               = "NONE"$/;"	v
s:ns_id	vim/pack/plugins/start/ale/autoload/ale/highlight.vim	/^    let s:ns_id = nvim_create_namespace('ale_highlight')$/;"	v
s:ns_id	vim/pack/plugins/start/ale/autoload/ale/virtualtext.vim	/^    let s:ns_id = nvim_create_namespace('ale')$/;"	v
s:ob	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:ob              = ""$/;"	v
s:old_cpo	vim/pack/plugins/start/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpoptions$/;"	v
s:omni_start_map	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let s:omni_start_map = {$/;"	v
s:opfirst	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^let s:opfirst = '^' . get(g:,'typescript_opfirst',$/;"	v
s:ou	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:partial_timers	vim/pack/plugins/start/ale/autoload/ale/util.vim	/^    let s:partial_timers = {}$/;"	v
s:path_format_regex	vim/pack/plugins/start/ale/autoload/ale/command.vim	/^let s:path_format_regex = '\\v\\%s(%(:h|:t|:r|:e)*)'$/;"	v
s:pattern	vim/pack/plugins/start/ale/ale_linters/desktop/desktop_file_validate.vim	/^let s:pattern = '\\v^(.+): ([a-z]+): (.+)$'$/;"	v
s:pattern	vim/pack/plugins/start/ale/ale_linters/json/jq.vim	/^let s:pattern = '^parse error: \\(.\\+\\) at line \\(\\d\\+\\), column \\(\\d\\+\\)$'$/;"	v
s:pattern	vim/pack/plugins/start/ale/autoload/ale/handlers/gcc.vim	/^let s:pattern = '\\v^([a-zA-Z]?:?[^:]+):(\\d+)?:?(\\d+)?:? ([^:]+): (.+)$'$/;"	v
s:pragma_error	vim/pack/plugins/start/ale/autoload/ale/handlers/gcc.vim	/^let s:pragma_error = '#pragma once in main file'$/;"	v
s:r	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:real_endtag	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^let s:real_endtag = '\\s*<\\\/\\+[A-Za-z]*>'$/;"	v
s:references_map	vim/pack/plugins/start/ale/autoload/ale/references.vim	/^let s:references_map = {}$/;"	v
s:rename_map	vim/pack/plugins/start/ale/autoload/ale/rename.vim	/^let s:rename_map = {}$/;"	v
s:return_block	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^let s:return_block = '\\s*return\\s\\+('$/;"	v
s:rootNERDTreePath	vim/pack/plugins/start/nerdtree/autoload/nerdtree.vim	/^let s:rootNERDTreePath = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:runner_exe	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = '"' . gutentags#get_plat_file('update_tags') . '"'$/;"	v
s:runtime_loaded_map	vim/pack/plugins/start/ale/autoload/ale/linter.vim	/^let s:runtime_loaded_map = {}$/;"	v
s:s	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:s               = ",standout"$/;"	v
s:save_cpo	vim/pack/plugins/start/kotlin-vim/syntax_checkers/kotlin/kotlinc.vim	/^let s:save_cpo = &cpo$/;"	v
s:script_path	vim/pack/plugins/start/ale/autoload/ale/gradle.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:sep	vim/pack/plugins/start/ale/autoload/ale/c.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	vim/pack/plugins/start/ale/autoload/ale/handlers/eslint.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	vim/pack/plugins/start/ale/autoload/ale/python.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:should_complete_map	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let s:should_complete_map = {$/;"	v
s:skip_expr	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),0),'name') =~? '".s:syng_strcom."'"$/;"	v
s:sorted_items	vim/pack/plugins/start/ale/autoload/ale/pattern_options.vim	/^let s:sorted_items = []$/;"	v
s:sp_back	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_back           =   ""$/;"	v
s:sp_base0	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_base0          =   ""$/;"	v
s:sp_base00	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_base00         =   ""$/;"	v
s:sp_base01	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_base01         =   ""$/;"	v
s:sp_base02	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_base02         =   ""$/;"	v
s:sp_base03	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_base03         =   ""$/;"	v
s:sp_base1	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_base1          =   ""$/;"	v
s:sp_base2	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_base2          =   ""$/;"	v
s:sp_base3	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_base3          =   ""$/;"	v
s:sp_blue	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_blue           =   ""$/;"	v
s:sp_cyan	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_cyan           =   ""$/;"	v
s:sp_green	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_green          =   ""$/;"	v
s:sp_magenta	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_magenta        =   ""$/;"	v
s:sp_none	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_none           =   ""$/;"	v
s:sp_orange	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_orange         =   ""$/;"	v
s:sp_red	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_red            =   ""$/;"	v
s:sp_violet	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_violet         =   ""$/;"	v
s:sp_yellow	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:sp_yellow         =   ""$/;"	v
s:supports_sign_groups	vim/pack/plugins/start/ale/autoload/ale/sign.vim	/^let s:supports_sign_groups = has('nvim-0.4.2') || has('patch-8.1.614')$/;"	v
s:symbol_map	vim/pack/plugins/start/ale/autoload/ale/symbol.vim	/^let s:symbol_map = {}$/;"	v
s:syng_com	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^let s:syng_com = 'comment\\|doc'$/;"	v
s:syng_str	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^let s:syng_str = 'string\\|template\\|special'$/;"	v
s:syng_strcom	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^let s:syng_strcom = 'string\\|comment\\|regex\\|special\\|doc\\|template\\%(braces\\)\\@!'$/;"	v
s:temp_dir	vim/pack/plugins/start/ale/autoload/ale/handlers/haskell.vim	/^let s:temp_dir = fnamemodify(ale#util#Tempname(), ':h')$/;"	v
s:temp_dir	vim/pack/plugins/start/ale/autoload/ale/path.vim	/^let s:temp_dir = ale#path#Simplify(fnamemodify(ale#util#Tempname(), ':h:h'))$/;"	v
s:temp_regex_prefix	vim/pack/plugins/start/ale/autoload/ale/handlers/haskell.vim	/^let s:temp_regex_prefix =$/;"	v
s:term_back	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^        let s:term_back =   s:term_base03$/;"	v
s:term_back	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_back        = "NONE"$/;"	v
s:term_back	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_back        = s:term_back$/;"	v
s:term_back	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_back        = s:term_base02$/;"	v
s:term_back	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_back        = s:term_base03$/;"	v
s:term_base0	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base0       = "12"$/;"	v
s:term_base0	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base0       = s:term_base1$/;"	v
s:term_base0	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base0    =   s:term_temp00$/;"	v
s:term_base00	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base00      = "11"$/;"	v
s:term_base00	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base00      = s:term_base0$/;"	v
s:term_base00	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base00   =   s:term_base0$/;"	v
s:term_base01	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base01      = "10"$/;"	v
s:term_base01	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base01      = s:term_base00$/;"	v
s:term_base01	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base01   =   s:term_base1$/;"	v
s:term_base02	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base02      = "0"$/;"	v
s:term_base02	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base02   =   s:term_base2$/;"	v
s:term_base03	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base03      = "8"$/;"	v
s:term_base03	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base03   =   s:term_base3$/;"	v
s:term_base1	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base1       = "14"$/;"	v
s:term_base1	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base1       = s:term_base2$/;"	v
s:term_base1	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base1    =   s:term_temp01$/;"	v
s:term_base2	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base2       = "7"$/;"	v
s:term_base2	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base2       = s:term_base3$/;"	v
s:term_base2	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base2    =   s:term_temp02$/;"	v
s:term_base3	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base3       = "15"$/;"	v
s:term_base3	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_base3    =   s:term_temp03$/;"	v
s:term_blue	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_blue        = "4"$/;"	v
s:term_cyan	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_cyan        = "6"$/;"	v
s:term_green	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_green       = "2"$/;"	v
s:term_magenta	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_magenta     = "5"$/;"	v
s:term_mode	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_mode       = "cterm"$/;"	v
s:term_none	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_none       = "NONE"$/;"	v
s:term_orange	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_orange      = "9"$/;"	v
s:term_red	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_red         = "1"$/;"	v
s:term_temp00	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_temp00   =   s:term_base00$/;"	v
s:term_temp01	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_temp01   =   s:term_base01$/;"	v
s:term_temp02	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_temp02   =   s:term_base02$/;"	v
s:term_temp03	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_temp03   =   s:term_base03$/;"	v
s:term_violet	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_violet      = "13"$/;"	v
s:term_yellow	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:term_yellow      = "3"$/;"	v
s:text	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:timer_args	vim/pack/plugins/start/ale/autoload/ale/list.vim	/^    let s:timer_args = {}$/;"	v
s:timer_id	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let s:timer_id = -1$/;"	v
s:tree_up_dir_line	vim/pack/plugins/start/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trigger_character_map	vim/pack/plugins/start/ale/autoload/ale/completion.vim	/^let s:trigger_character_map = {$/;"	v
s:tsx_cpo	vim/pack/plugins/start/vim-jsx-typescript/after/syntax/typescriptreact.vim	/^let s:tsx_cpo = &cpo$/;"	v
s:types	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:u	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:u           = ""$/;"	v
s:u	vim/pack/plugins/start/NeoSolarized/colors/NeoSolarized.vim	/^    let s:u           = ",underline"$/;"	v
s:unix_redir	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:update_in_progress	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_queue	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:version_cache	vim/pack/plugins/start/ale/ale_linters/java/eclipselsp.vim	/^let s:version_cache = {}$/;"	v
s:version_cache	vim/pack/plugins/start/ale/autoload/ale/semver.vim	/^let s:version_cache = {}$/;"	v
s:wig_cond	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:wildignores_options_path	vim/pack/plugins/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:wildignores_options_path = ''$/;"	v
s:word_regex_list	vim/pack/plugins/start/ale/ale_linters/vim/vint.vim	/^let s:word_regex_list = [$/;"	v
samerootsyml	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
sanstail	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
save_pos	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:save_pos(f,...)$/;"	f
savebookmark	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
savetofile	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
set_variables	vim/pack/plugins/start/ale/autoload/ale/fixers/astyle.vim	/^function! s:set_variables() abort$/;"	f
set_variables	vim/pack/plugins/start/ale/autoload/ale/fixers/clangtidy.vim	/^function! s:set_variables() abort$/;"	f
setentries	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f
settype	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f
setupblank	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f
shortest	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
showMenu	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node) abort$/;"	f
skip_func	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:skip_func()$/;"	f
strwidth	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:strwidth(str)$/;"	f
sublist	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
sublist7071	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
sw	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^  function s:sw()$/;"	f
sw	vim/pack/plugins/start/vim-jsx-typescript/after/indent/typescriptreact.vim	/^  function! s:sw()$/;"	f
syn_at	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:syn_at(l,c)$/;"	f
syntax	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f
syntax	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f
syntax	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f
syntax	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f
syntax	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f
syntax	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f
syntax	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f
t	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> t :call ale#preview#OpenSelectionInTab()<CR>$/;"	m
tail	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f
tern_col	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:tern_col(p)$/;"	f
tern_skip	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:tern_skip(p)$/;"	f
tests	vim/pack/plugins/start/ale/run-tests.bat	/^if not "%1"=="" set tests=%1$/;"	v
tests	vim/pack/plugins/start/ale/run-tests.bat	/^set tests=test\/*.vader test\/*\/*.vader test\/*\/*\/*.vader test\/*\/*\/*\/*.vader$/;"	v
textdialog	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
toggleIgnoreFilter	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter() abort$/;"	f
toggleShowBookmarks	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks() abort$/;"	f
toggleShowFiles	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles() abort$/;"	f
toggleShowHidden	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden() abort$/;"	f
toggleZoom	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom() abort$/;"	f
token	vim/pack/plugins/start/typescript-vim/indent/typescript.vim	/^function s:token()$/;"	f
tries	vim/pack/plugins/start/ale/run-tests.bat	/^set tries=0$/;"	v
unmarksigns	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
upDirCurrentRootClosed	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed() abort$/;"	f
upDirCurrentRootOpen	vim/pack/plugins/start/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen() abort$/;"	f
update_tags	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
use_raw_list	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	vim/pack/plugins/start/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
usrign	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
v	vim/pack/plugins/start/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> v <NOP>$/;"	m
vacantdict	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
validfile	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
walker	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
write_triggered_update_tags	vim/pack/plugins/start/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
writecache	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
writecache	vim/pack/plugins/start/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
